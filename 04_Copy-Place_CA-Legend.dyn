{
  "Uuid": "835f952c-e6fa-4cfc-8ced-085e223da08a",
  "IsCustomNode": false,
  "Description": "",
  "Name": "04_Copy-Place_CA-Legend",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\_Albertsons\\x17 (Lineal Footage Analysis)\\Templates\\ACI_Project_Template.rte",
      "InputValue": "Templates\\ACI_Project_Template.rte",
      "NodeType": "ExtensionNode",
      "Id": "35dc14e8cb7a4b1295f8637d6702a3f2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25aaaf7b6cc04ddb835247587d7a4a55",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\nclr.AddReference('System')\r\n\r\nfrom System import Guid\r\nfrom System.Collections.Generic import List\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Get the current Revit document (the active project)\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Inputs from Dynamo\r\ntemplate_path = IN[0]  # File path to the Revit template (RVT) file\r\nlegend_name = IN[1]  # Name of the Legend View to extract\r\nsheet_name = IN[2]   # Name of the sheet to place the legend on\r\nplacement_location = IN[3]  # XYZ coordinates for the placement of the legend (tuple/list)\r\n\r\ncopied_legend_id = None\r\nlegend_on_sheet_id = None\r\n\r\ntry:\r\n    # Check if the legend view already exists in the current project\r\n    existing_legend = next((view for view in FilteredElementCollector(doc).OfClass(View)\r\n                            if view.ViewType == ViewType.Legend and view.Name == legend_name), None)\r\n\r\n    if existing_legend:\r\n        copied_legend = existing_legend\r\n    else:\r\n        # Open the Revit template document\r\n        app = doc.Application\r\n        template_doc = app.OpenDocumentFile(template_path)\r\n\r\n        try:\r\n            # Find the legend view by name in the template file\r\n            legend_view = next((view for view in FilteredElementCollector(template_doc).OfClass(View)\r\n                                if view.ViewType == ViewType.Legend and view.Name == legend_name), None)\r\n\r\n            if legend_view is None:\r\n                OUT = f\"Error: Legend view named '{legend_name}' not found in the template.\"\r\n            else:\r\n                # Start a transaction to copy the legend into the current document\r\n                TransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n                # Copy the legend to the current project\r\n                element_ids = List[ElementId]([legend_view.Id])\r\n                copied_ids = ElementTransformUtils.CopyElements(template_doc, element_ids, doc, Transform.Identity, CopyPasteOptions())\r\n\r\n                TransactionManager.Instance.TransactionTaskDone()\r\n\r\n                # Get the copied legend\r\n                copied_legend_id = copied_ids[0]\r\n                copied_legend = doc.GetElement(copied_legend_id)\r\n        finally:\r\n            # Ensure the template document is closed properly\r\n            if template_doc.IsValidObject:\r\n                template_doc.Close(False)\r\n\r\n    # Locate the sheet where the legend should be placed\r\n    sheet = next((s for s in FilteredElementCollector(doc).OfClass(ViewSheet) if s.Name == sheet_name), None)\r\n\r\n    if sheet is None:\r\n        OUT = f\"Error: Sheet named '{sheet_name}' not found in the current project.\"\r\n    else:\r\n        # Start a transaction to either place or move the legend on the sheet\r\n        TransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n        # Convert placement_location to XYZ\r\n        x, y, z = placement_location\r\n        position = XYZ(x, y, z)\r\n\r\n        try:\r\n            # Place the legend view on the sheet at the specified location\r\n            viewport = Viewport.Create(doc, sheet.Id, copied_legend.Id, position)\r\n\r\n            if viewport is None:\r\n                OUT = f\"Error: Could not place the legend '{legend_name}' on sheet '{sheet_name}'.\"\r\n            else:\r\n                legend_on_sheet_id = viewport.Id\r\n                OUT = [\r\n                    f\"Legend '{legend_name}' successfully placed on sheet '{sheet_name}' at position ({x}, {y}, {z}).\",\r\n                    copied_legend_id.IntegerValue,\r\n                    legend_on_sheet_id.IntegerValue\r\n                ]\r\n        except Exception as e:\r\n            TransactionManager.Instance.ForceCloseTransaction()\r\n            OUT = f\"Error during placement: {e}\"\r\n\r\n        TransactionManager.Instance.TransactionTaskDone()\r\n\r\nexcept Exception as e:\r\n    OUT = f\"Error: {e}\"\r\n\r\n# Output only the relevant result\r\nOUT = OUT\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a84168fe4b0b4406a98f0db090aa930d",
      "Inputs": [
        {
          "Id": "b833beb46bbd4cd9915b79ec684bdc56",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81595bbd3aeb43f3bf44277dfa7d45a5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8172db2cb50f4219a94a937cdccc1533",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf534886647b48c9906bb2174703fc6e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccca40a26de34301baa53702d63aafb0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"DSP Comp Ref\";",
      "Id": "b7c954c52a21416f9d339dd7289e4679",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4505e5f30df1473097956b222136b361",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"FIXTURE PLAN\";",
      "Id": "5d7259f665d04c1ca3bf8bd4dbd10103",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d6d769129f74063b42c82104293f61a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[3.483, 2.695, 0.0];",
      "Id": "c4fd386312554f0b8e6001210018bdd3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "224d7a788328463eaab2f1fa3663625e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ef6a43c382664cc48b29f524768c87dc",
      "Inputs": [
        {
          "Id": "c6d808c804e444e6a93f5461e8043499",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eed879ccd43f47b4aebc087b88daafb6",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "2e6e3f1f4fd148c1b90e1a0af8b09894",
      "Inputs": [
        {
          "Id": "2126bbc7fbfa41ff9092b29903e14ad7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75e004f8ec95412883edb5f9243b60c2",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdb5b36c21344505be0465de07fab25c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "c7692373ddd54c26b71619eec357cd17",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c6b6ff0046643a7b32f91071a45852b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\n\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Get the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Inputs from Dynamo\r\nlegend_on_sheet_id = IN[0]  # Element ID of the legend on the sheet\r\n\r\ntry:\r\n    # Convert input to ElementId\r\n    legend_on_sheet_element_id = ElementId(legend_on_sheet_id)\r\n    legend_on_sheet = doc.GetElement(legend_on_sheet_element_id)\r\n\r\n    # Verify if the element is found\r\n    if legend_on_sheet is None:\r\n        OUT = f\"Error: No element found with ID {legend_on_sheet_id}.\"\r\n    elif not isinstance(legend_on_sheet, Viewport):\r\n        OUT = f\"Error: Element with ID {legend_on_sheet_id} is not a Viewport.\"\r\n    else:\r\n        # Start a transaction to modify the Viewport type\r\n        TransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n        try:\r\n            # Gather all viewport types available in the document\r\n            viewport_types = FilteredElementCollector(doc).OfClass(ElementType).OfCategory(BuiltInCategory.OST_Viewports)\r\n            \r\n            # Output all available viewport types for debugging\r\n            available_types = {vt.Id.IntegerValue: vt.Name for vt in viewport_types}\r\n            \r\n            # Find a type named \"No Label\"\r\n            no_label_type = next((vt for vt in viewport_types if \"No Label\" in vt.Name), None)\r\n\r\n            if no_label_type is None:\r\n                OUT = f\"Error: No viewport type named 'No Label' found. Available types: {available_types}\"\r\n            else:\r\n                # Set the Viewport to the found type without labels\r\n                legend_on_sheet.ChangeTypeId(no_label_type.Id)\r\n                OUT = f\"Viewport property for legend with ID {legend_on_sheet_id} set to type 'No Label'.\"\r\n\r\n        except Exception as e:\r\n            OUT = f\"Error: {e}\"\r\n        finally:\r\n            TransactionManager.Instance.TransactionTaskDone()\r\n\r\nexcept Exception as e:\r\n    OUT = f\"Error: {e}\"\r\n\r\n# Output the result\r\nOUT = OUT\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ffb588c86c344180b2e842b5ac3d1f18",
      "Inputs": [
        {
          "Id": "b13099b65b014fbdb6bfe97f6d2c446c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61266f239d6441ab9d3127567ffad357",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0667f95f42e04d50bcb4d829232252fd",
      "Inputs": [
        {
          "Id": "d17139609ca64c8989e835d3bee79bbb",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "279eea9669104f449649f319b3590ca4",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "25aaaf7b6cc04ddb835247587d7a4a55",
      "End": "b833beb46bbd4cd9915b79ec684bdc56",
      "Id": "91fca9073e934708a786f2dfb1f99809",
      "IsHidden": "False"
    },
    {
      "Start": "ccca40a26de34301baa53702d63aafb0",
      "End": "c6d808c804e444e6a93f5461e8043499",
      "Id": "a35f0c02b129494ea962d97526ff2598",
      "IsHidden": "False"
    },
    {
      "Start": "ccca40a26de34301baa53702d63aafb0",
      "End": "2126bbc7fbfa41ff9092b29903e14ad7",
      "Id": "2eeb77b9300244c797822b387db6ffc9",
      "IsHidden": "False"
    },
    {
      "Start": "4505e5f30df1473097956b222136b361",
      "End": "81595bbd3aeb43f3bf44277dfa7d45a5",
      "Id": "164d574289e44fde8b71f93ae415c1a8",
      "IsHidden": "False"
    },
    {
      "Start": "9d6d769129f74063b42c82104293f61a",
      "End": "8172db2cb50f4219a94a937cdccc1533",
      "Id": "63a43ca0bf8d4a9e935c151d0a6bebe1",
      "IsHidden": "False"
    },
    {
      "Start": "224d7a788328463eaab2f1fa3663625e",
      "End": "cf534886647b48c9906bb2174703fc6e",
      "Id": "a0608fdf5af542aaabde9a733da9e7ce",
      "IsHidden": "False"
    },
    {
      "Start": "cdb5b36c21344505be0465de07fab25c",
      "End": "b13099b65b014fbdb6bfe97f6d2c446c",
      "Id": "383bd422e5874731b14d0f177f4851f6",
      "IsHidden": "False"
    },
    {
      "Start": "2c6b6ff0046643a7b32f91071a45852b",
      "End": "75e004f8ec95412883edb5f9243b60c2",
      "Id": "6d2711f622644b119ec5112855aeed18",
      "IsHidden": "False"
    },
    {
      "Start": "61266f239d6441ab9d3127567ffad357",
      "End": "d17139609ca64c8989e835d3bee79bbb",
      "Id": "d1bd39e8e5f648239a814906aab6ab20",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "ACI_Project_Template.rte",
      "ReferenceType": "External",
      "Nodes": [
        "35dc14e8cb7a4b1295f8637d6702a3f2"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "35dc14e8cb7a4b1295f8637d6702a3f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2589.1118562843121,
        "Y": 3577.9648448121256
      },
      {
        "Name": "Copy and Place Legend",
        "ShowGeometry": true,
        "Id": "a84168fe4b0b4406a98f0db090aa930d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3291.3756334875043,
        "Y": 3814.241737672251
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b7c954c52a21416f9d339dd7289e4679",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2946.6638280352263,
        "Y": 3736.92514039839
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5d7259f665d04c1ca3bf8bd4dbd10103",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2946.6638280352263,
        "Y": 3883.92514039839
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c4fd386312554f0b8e6001210018bdd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2946.6638280352263,
        "Y": 4030.92514039839
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "ef6a43c382664cc48b29f524768c87dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3630.0124038957265,
        "Y": 3609.8757314817235
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "2e6e3f1f4fd148c1b90e1a0af8b09894",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3885.03085531963,
        "Y": 4014.3584528709348
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c7692373ddd54c26b71619eec357cd17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3631.03085531963,
        "Y": 4048.1859528709342
      },
      {
        "Name": "Set Legend Properties",
        "ShowGeometry": true,
        "Id": "ffb588c86c344180b2e842b5ac3d1f18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4208.03085531963,
        "Y": 3919.9882298471011
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "0667f95f42e04d50bcb4d829232252fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4540.7726508520755,
        "Y": 3892.3717085335247
      }
    ],
    "Annotations": [
      {
        "Id": "9224af1f7aad486ba798ec5c757e0a3a",
        "Title": "\"DSP Comp Ref\" Template Location",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "35dc14e8cb7a4b1295f8637d6702a3f2"
        ],
        "HasNestedGroups": false,
        "Left": 2579.1118562843121,
        "Top": 3461.9648448121256,
        "Width": 341.0,
        "Height": 257.0,
        "FontSize": 36.0,
        "InitialTop": 3577.9648448121256,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "ba227c5366ec46a4a8f2adde5d5b80fb",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2e6e3f1f4fd148c1b90e1a0af8b09894",
          "c7692373ddd54c26b71619eec357cd17",
          "ffb588c86c344180b2e842b5ac3d1f18"
        ],
        "HasNestedGroups": false,
        "Left": 3621.03085531963,
        "Top": 3846.9882298471011,
        "Width": 835.0,
        "Height": 333.19772302383262,
        "FontSize": 36.0,
        "InitialTop": 3919.9882298471011,
        "InitialHeight": 470.8275,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3688084b129c4da18a8834e252b245fd",
        "Title": "Copy \"DSP Comp Ref\" to Current Project and Place on Sheet",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a84168fe4b0b4406a98f0db090aa930d",
          "b7c954c52a21416f9d339dd7289e4679",
          "5d7259f665d04c1ca3bf8bd4dbd10103",
          "c4fd386312554f0b8e6001210018bdd3",
          "9224af1f7aad486ba798ec5c757e0a3a"
        ],
        "HasNestedGroups": true,
        "Left": 2569.1118562843121,
        "Top": 3388.9648448121256,
        "Width": 976.26377720319215,
        "Height": 773.96029558626424,
        "FontSize": 36.0,
        "InitialTop": 3461.9648448121256,
        "InitialHeight": 627.96029558626424,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      }
    ],
    "X": -895.34831618363455,
    "Y": -1079.2615401699238,
    "Zoom": 0.36140215341067528
  }
}