{
  "Uuid": "835f952c-e6fa-4cfc-8ced-085e223da08a",
  "IsCustomNode": false,
  "Description": "",
  "Name": "04_Copy-Place_CA-Legend",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\_Albertsons\\x17 (Lineal Footage Analysis)\\Templates\\ACI_Project_Template.rte",
      "InputValue": "Templates\\ACI_Project_Template.rte",
      "NodeType": "ExtensionNode",
      "Id": "35dc14e8cb7a4b1295f8637d6702a3f2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25aaaf7b6cc04ddb835247587d7a4a55",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\nclr.AddReference('System')\r\n\r\nfrom System import Guid\r\nfrom System.Collections.Generic import List\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Get the current Revit document (the active project)\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Inputs from Dynamo\r\ntemplate_path = IN[0]  # File path to the Revit template (RVT) file\r\nlegend_name = IN[1]\r\nsheet_name = IN[2]   # Name of the sheet to place the legend on\r\nplacement_location = IN[3]  # XYZ coordinates for the placement of the legend (tuple/list)\r\nappend_text = IN[4]  # Text to append when renaming the existing legend  # Name of the Legend View to extract\r\n\r\ncopied_legend_id = None\r\nlegend_on_sheet_id = None\r\n\r\ndebug_info = []  # Using a list to make further processing in Dynamo easier\r\n\r\ndebug_info.append(\"Step: Initialization\")\r\n\r\ntry:\r\n    # Start a transaction to remove any existing legend with the same name\r\n    TransactionManager.Instance.EnsureInTransaction(doc)\r\n    \r\n    existing_legend = next((view for view in FilteredElementCollector(doc).OfClass(View)\r\n                            if view.ViewType == ViewType.Legend and view.Name == legend_name), None)\r\n\r\n    if existing_legend:\r\n        # Rename the existing legend to mark it as old\r\n        existing_legend.Name = f\"{existing_legend.Name} {append_text}\"\r\n        \r\n        # Find the viewport associated with the existing legend\r\n        existing_viewport = next((vp for vp in FilteredElementCollector(doc).OfClass(Viewport)\r\n                                  if vp.ViewId == existing_legend.Id), None)\r\n        \r\n        # Move the viewport upwards by a few inches (assuming 1 inch = 0.0833 feet)\r\n        if existing_viewport:\r\n            move_vector = XYZ(0, 0.5, 0)  # Move upwards by 6 inches (0.5 feet)\r\n            ElementTransformUtils.MoveElement(doc, existing_viewport.Id, move_vector)\r\n        \r\n    TransactionManager.Instance.TransactionTaskDone()\r\n    debug_info.append(\"Step: Removed existing legend (if any)\")\r\n\r\n    # Open the Revit template document\r\n    app = doc.Application\r\n    template_doc = app.OpenDocumentFile(template_path)\r\n    debug_info.append(\"Step: Template document opened\")\r\n\r\n    try:\r\n        # Find the legend view by name in the template file\r\n        legend_view = next((view for view in FilteredElementCollector(template_doc).OfClass(View)\r\n                            if view.ViewType == ViewType.Legend and view.Name == legend_name), None)\r\n\r\n        if legend_view is None:\r\n            OUT = f\"Error: Legend view named '{legend_name}' not found in the template.\"\r\n        else:\r\n            # Start a transaction to copy the legend into the current document\r\n            TransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n            # Copy the legend to the current project\r\n            element_ids = List[ElementId]([legend_view.Id])\r\n            copied_ids = ElementTransformUtils.CopyElements(template_doc, element_ids, doc, Transform.Identity, CopyPasteOptions())\r\n\r\n            TransactionManager.Instance.TransactionTaskDone()\r\n\r\n            # Get the copied legend\r\n            copied_legend_id = copied_ids[0]\r\n            copied_legend = doc.GetElement(copied_legend_id)\r\n            debug_info.append(\"Step: Copied legend into the current project\")\r\n            debug_info.append(f\"Copied Legend ID: {copied_legend_id.IntegerValue}\")\r\n    finally:\r\n        # Ensure the template document is closed properly\r\n        if template_doc.IsValidObject:\r\n            template_doc.Close(False)\r\n        debug_info.append(\"Step: Template document closed\")\r\n\r\n    # Locate the sheet where the legend should be placed\r\n    sheet = next((s for s in FilteredElementCollector(doc).OfClass(ViewSheet) if s.Name == sheet_name), None)\r\n\r\n    if sheet is None:\r\n        OUT = f\"Error: Sheet named '{sheet_name}' not found in the current project.\"\r\n    else:\r\n        # Start a transaction to either place or move the legend on the sheet\r\n        TransactionManager.Instance.EnsureInTransaction(doc)\r\n        debug_info.append(\"Step: Transaction started for placing legend\")\r\n\r\n        # Convert placement_location to XYZ\r\n        x, y, z = placement_location\r\n        position = XYZ(x, y, z)\r\n\r\n        try:\r\n            # Place the legend view on the sheet using Viewport.Create\r\n            viewport = Viewport.Create(doc, sheet.Id, copied_legend.Id, position)\r\n\r\n            if viewport is None:\r\n                OUT = f\"Error: Could not place the legend '{legend_name}' on sheet '{sheet_name}'.\"\r\n            else:\r\n                legend_on_sheet_id = viewport.Id\r\n\r\n                # Simple output for viewport creation success\r\n                debug_info.append(f\"Viewport Element ID: {legend_on_sheet_id.IntegerValue}\")\r\n                debug_info.append(\"Step: Viewport successfully created\")\r\n\r\n                OUT = debug_info\r\n        except Exception as e:\r\n            TransactionManager.Instance.ForceCloseTransaction()\r\n            debug_info.append(f\"Step: Error during viewport placement: {e}\")\r\n            OUT = f\"Error during placement: {e}\"\r\n\r\n        TransactionManager.Instance.TransactionTaskDone()\r\n        debug_info.append(\"Step: Transaction completed for placing legend\")\r\n\r\nexcept Exception as e:\r\n    debug_info.append(f\"Step: Error: {e}\")\r\n    OUT = f\"Error: {e}\"\r\n\r\n# Output only the relevant result, including debug information\r\nOUT = OUT\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a84168fe4b0b4406a98f0db090aa930d",
      "Inputs": [
        {
          "Id": "b833beb46bbd4cd9915b79ec684bdc56",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81595bbd3aeb43f3bf44277dfa7d45a5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8172db2cb50f4219a94a937cdccc1533",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf534886647b48c9906bb2174703fc6e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a182c541e3349eea45a84d263ca30d6",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e539a7ee3064a648d3902cbc8171a07",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccca40a26de34301baa53702d63aafb0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"DSP Comp Ref\";",
      "Id": "b7c954c52a21416f9d339dd7289e4679",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7274fee88c5a40df9188fd58c572f08e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"FIXTURE PLAN\";",
      "Id": "5d7259f665d04c1ca3bf8bd4dbd10103",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7923060345ac4b1bac87fd24e7d0fa5a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[3.483, 2.695, 0.0];",
      "Id": "c4fd386312554f0b8e6001210018bdd3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "370da195cfa34ebfb346270688032bdc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Old)\";",
      "Id": "925c6c7984434e64a5d52e0799d7d7ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4949e78fd457433e869bff6a177dfa29",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[9.483, 2.695, 0.0];",
      "Id": "b02b5c7b5e3645a8a5efdb23365b737b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0545d83ebc743b79f033ec410fbe045",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "25aaaf7b6cc04ddb835247587d7a4a55",
      "End": "b833beb46bbd4cd9915b79ec684bdc56",
      "Id": "22ea43e467944a4d95a352fdc28458d3",
      "IsHidden": "False"
    },
    {
      "Start": "7274fee88c5a40df9188fd58c572f08e",
      "End": "81595bbd3aeb43f3bf44277dfa7d45a5",
      "Id": "164d574289e44fde8b71f93ae415c1a8",
      "IsHidden": "False"
    },
    {
      "Start": "7923060345ac4b1bac87fd24e7d0fa5a",
      "End": "8172db2cb50f4219a94a937cdccc1533",
      "Id": "63a43ca0bf8d4a9e935c151d0a6bebe1",
      "IsHidden": "False"
    },
    {
      "Start": "370da195cfa34ebfb346270688032bdc",
      "End": "cf534886647b48c9906bb2174703fc6e",
      "Id": "a0608fdf5af542aaabde9a733da9e7ce",
      "IsHidden": "False"
    },
    {
      "Start": "4949e78fd457433e869bff6a177dfa29",
      "End": "9a182c541e3349eea45a84d263ca30d6",
      "Id": "eace8072da1d4a57b585e285ff76df51",
      "IsHidden": "False"
    },
    {
      "Start": "c0545d83ebc743b79f033ec410fbe045",
      "End": "8e539a7ee3064a648d3902cbc8171a07",
      "Id": "d3fc18f463db4d8c9d67ec045c4e7b86",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "ACI_Project_Template.rte",
      "ReferenceType": "External",
      "Nodes": [
        "35dc14e8cb7a4b1295f8637d6702a3f2"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Location of Template",
        "ShowGeometry": true,
        "Id": "35dc14e8cb7a4b1295f8637d6702a3f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2887.1656702205955,
        "Y": 3617.0504934290429
      },
      {
        "Name": "Copy and Place Legend",
        "ShowGeometry": true,
        "Id": "a84168fe4b0b4406a98f0db090aa930d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3314.1656702205955,
        "Y": 3908.0504934290429
      },
      {
        "Name": "CA to Use",
        "ShowGeometry": true,
        "Id": "b7c954c52a21416f9d339dd7289e4679",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2887.1656702205955,
        "Y": 3773.8779934290428
      },
      {
        "Name": "Sheet to Place CA",
        "ShowGeometry": true,
        "Id": "5d7259f665d04c1ca3bf8bd4dbd10103",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2887.1656702205955,
        "Y": 3920.8779934290428
      },
      {
        "Name": "CA Location",
        "ShowGeometry": true,
        "Id": "c4fd386312554f0b8e6001210018bdd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2887.1656702205955,
        "Y": 4067.8779934290437
      },
      {
        "Name": "Append to Existing CA (if Present)",
        "ShowGeometry": true,
        "Id": "925c6c7984434e64a5d52e0799d7d7ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2887.1656702205955,
        "Y": 4214.8779934290433
      },
      {
        "Name": "New Position of Existing CA",
        "ShowGeometry": true,
        "Id": "b02b5c7b5e3645a8a5efdb23365b737b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2887.1656702205955,
        "Y": 4362.8779934290433
      }
    ],
    "Annotations": [
      {
        "Id": "3688084b129c4da18a8834e252b245fd",
        "Title": "Copy \"DSP Comp Ref\" to Current Project and Place on Sheet",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a84168fe4b0b4406a98f0db090aa930d",
          "b7c954c52a21416f9d339dd7289e4679",
          "5d7259f665d04c1ca3bf8bd4dbd10103",
          "c4fd386312554f0b8e6001210018bdd3",
          "35dc14e8cb7a4b1295f8637d6702a3f2",
          "925c6c7984434e64a5d52e0799d7d7ed",
          "b02b5c7b5e3645a8a5efdb23365b737b"
        ],
        "HasNestedGroups": false,
        "Left": 2877.1656702205955,
        "Top": 3501.0504934290429,
        "Width": 691.0,
        "Height": 993.82750000000033,
        "FontSize": 36.0,
        "InitialTop": 3617.0504934290429,
        "InitialHeight": 742.82750000000124,
        "TextblockHeight": 106.0,
        "Background": "#FFFFB8D8"
      }
    ],
    "X": -1553.3982004663399,
    "Y": -2304.9941035027,
    "Zoom": 0.64555197881384141
  }
}