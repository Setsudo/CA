{
  "Uuid": "835f952c-e6fa-4cfc-8ced-085e223da08a",
  "IsCustomNode": false,
  "Description": "",
  "Name": "05_Write-CA-Legend",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"DSP Comp Ref (Portrait)\";",
      "Id": "3a938488321347ab831291ade1c35e17",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e6e1a9a670449948d99109588041aab",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Inputs\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Check if input is received\r\nif len(IN) < 1 or not IN[0]:\r\n    OUT = \"Error: Please provide a list of legend names.\"\r\n    raise SystemExit\r\n\r\n# List of legend names to find\r\nlegend_names = IN[0]\r\n\r\n# Ensure the input is a list of strings\r\nif not isinstance(legend_names, list) or not all(isinstance(name, str) for name in legend_names):\r\n    OUT = \"Error: Input must be a list of strings representing legend names.\"\r\n    raise SystemExit\r\n\r\n# Get all views in the document\r\ncollector = FilteredElementCollector(doc).OfClass(View)\r\n\r\n# Filter Legends\r\nmatching_legends = []\r\nnon_matching_legends = []\r\nfor view in collector:\r\n    if view.ViewType == ViewType.Legend:\r\n        if view.Name.strip() in [name.strip() for name in legend_names]:\r\n            # Append name and Element ID for matching legends\r\n            matching_legends.append([view.Name, view.Id.IntegerValue])\r\n        else:\r\n            # Append name and Element ID for non-matching legends\r\n            non_matching_legends.append([view.Name, view.Id.IntegerValue])\r\n\r\n# Prepare Output\r\noutput_list = [\r\n    [\"Matching Legends\", matching_legends],\r\n    [\"Non-Matching Legends\", non_matching_legends]\r\n]\r\n\r\n# Output the results\r\nOUT = output_list\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "9ad778fd162047ed81d4b937a126e37c",
      "Inputs": [
        {
          "Id": "16068f94dad24d9b8e86cf66242121ad",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93d9b2a22db147c1a9d88d435429e845",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "501b048d7d0d418093f6588230ae56b1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ad7a4d5ea57748d0856e6fa3ffa6acc0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "27d6a102833e4387957fb35a6cacf317",
      "Inputs": [
        {
          "Id": "fc64212e72d14417bab4e6dc6cf99a18",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b739b4257104e7b8b9d3ca352e7293e",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fe93ddf962443598310de08bb3f6d11",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "19e77731cca74c5e95d753a61069d435",
      "Inputs": [
        {
          "Id": "1fd90d011ac04d8a86aad1ff79d5ebbd",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9841d70967194d6ea7cf5d78d326366a",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f6e02ed2d7e4baba77ba1d1519697aa",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7cbb22f15a94b8a8f5c36351af776d8",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea2cd0d3a07944dd9ed531bf6b969614",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "CA",
      "Id": "63394fe975de4bd190db141f8a040e51",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b74893368a73420b815b4d66aaef4e62",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "47ecfcee36264a11a3fdb28b4233eb9b",
      "Inputs": [
        {
          "Id": "7ab0e259cfed4bd1b4e2a8b25d3bcc88",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aac56490dcfc43ae9c0bb1682608c211",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.IO.FileSystem.CombinePath@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "70b12d9fb1834b9a89e5ed18da39e796",
      "Inputs": [
        {
          "Id": "f1bb329babe14c75ac36e4bcbb84267c",
          "Name": "string0",
          "Description": "Strings to combine into a path\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb1686ca102a44d48a0b31ec09d429da",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1778607a2a5243759031935e9ba9a93b",
          "Name": "string",
          "Description": "Combined file path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Combines multiple strings into a single file path.\n\nFileSystem.CombinePath (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "aeb5f99f742d430394e4b475037bd9b2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7d23fa33421743b39ddfeafa1108d46f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "2780564aeb9042b09cdece32b67d4aa1",
      "Inputs": [
        {
          "Id": "71e7b9fee17945e69121a7fa4d797a81",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d6cce56c5584ec08cfec4609c95b79d",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1428efa0b1c420eb4491c7dabdb530d",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "ed6e5ffec7b14ea882d70db0a0accc3d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c02ae76413dd4615a2b53c9a8bb600da",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "f299887cf765427ba274a6960e077353",
      "Inputs": [
        {
          "Id": "a2c4acd75ba743b2bf013512a200c378",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28a2c83a9f844dbaadf15f28948cca19",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "7f629a6390f74c5285a9c992ec3b6c75",
      "Inputs": [
        {
          "Id": "5e74f31659d14bb8bf4ad0e3a051f615",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4feff7ccfd384b97ae922279f0c684dc",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fe7798f395747bcab3a7c06332ce12c",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "50840014c7a24cc8905bbb65bfccfa35",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a2c1b5a23508469693cd2ecb50e164c1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "100500e5e8ca4c4f8074d092046414ff",
      "Inputs": [
        {
          "Id": "5cfa8fae9d524e6dbd372a756a8b92bd",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52450eb6183d438587066cdde5fe45bc",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;",
      "Id": "732105eb9883459391d8ca2874a4a82f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3bf1e127dc84392baac661761473675",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "b0310d183dcb4618864cee7982fc7783",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4748ffee74eb4724a5379f0a1ad4ada3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "3495deabb3564e158d4e4df9aad94c10",
      "Inputs": [
        {
          "Id": "0100a0a5ad754ece939ab5243e16584c",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "827f32ac437f433f8e203b322c76a06b",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf4818fcf1ce42a9bafa63de1f18f4dc",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c21f21ce35564f9c8d9e7940504655c6",
      "Inputs": [
        {
          "Id": "918fdbd7dfa2474ab0d4a4e6cd712eff",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "035572c80e574e749c050f36688ef02e",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "accd2a24d3124481bcc2e3d8a9cc4d85",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "680cca8619d44faeaee0da439d6b7eac",
      "Inputs": [
        {
          "Id": "09571e0f7cf745ad87f2e1cabc3c780a",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5fcc6727f944c76bf17e26f900829ff",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae9881598b6948dea84c86b6f57dd586",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Application.Document.FilePath",
      "Id": "b03b5de533ad46d1946cfb01737f875c",
      "Inputs": [
        {
          "Id": "71d3705deb2b48df81735c7e8ba6d4f5",
          "Name": "document",
          "Description": "Revit.Application.Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "249029be1c524fa1b7b7b28498bd195e",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The full path of the Document.\n\nDocument.FilePath: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "2f837339110c4581999d12f7398f367f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b00aecc67a7f4f0288299bbab8ac278b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e2490c25dbe547c5a580ce6d2157e0bc",
      "Inputs": [
        {
          "Id": "616c2a89234a45cf8ad8c8465235ba68",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87602e2a5da5475f9512a05b6dbaf62c",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\_Albertsons\\x17 (Lineal Footage Analysis)\\Templates\\02_Master-Check.xlsx",
      "InputValue": "Templates\\02_Master-Check.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "636651ca158d43f7a5f22b1311c67c41",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "19112b14ead441dca7ac21adcc4a4d7f",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Application.Document.Current",
      "Id": "047a847b2d9445a08d05744b2e545025",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "caff3030cd304f7da798d75b9b7a7434",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the current document\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK PRODUCE\";",
      "Id": "895a19fa868b492ebfc5ec6ac6ebfd70",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "653745e16eab4086beb817098b34e004",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SERVICE DELI HOT CASE\";",
      "Id": "b241039a8e81427eb505a24044e6ca15",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4a0017d14dcf4cf992c7dd4154bde71d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK MEAT/DELI\";",
      "Id": "34a3988ce124471f951c49e595d7bc53",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6120640525ba4f63a3de8d5a02b415f3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TOTAL FROZEN FOOD (NUMBER OF DOORS)\";",
      "Id": "cc1ff340404c4c0da8366fd1cbc0d741",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "38d63e93e4634012889e3f41dd44622b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"WINE / LIQUOR SHELVING C\";",
      "Id": "b3a40c8b8b95415aa97e7c0e38806cc2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "51f753c49cdb463d852ae75fc1da65a7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"CENTER STORE SHELVING\";",
      "Id": "3439b7cae04146519c968d2a03532a01",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f92e3c32a92949129aecaeeccdcf1f56",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TOTAL SHELVING\";",
      "Id": "8783637cb75b4225804feecbec433590",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e3a139bc56a424791c0398c36924ebb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK FROZEN PROMO\";",
      "Id": "e8a5bcfd88254296abda623fa10b7087",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "47d56151416c424fb332d4ffb3d19fcb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK FROZEN SEAFOOD & MEAT\";",
      "Id": "3f0262d8bdb14c2c8cfe40a685b20d4a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e72b55a6541430da66d4c13f1fa3be3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK FROZEN FOOD\";",
      "Id": "0b90f619fc0f4292b3205be94b6c7a71",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93a2fbcad8424170a84b8862589fb677",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"DAIRY COOLER DOORS (DOOR QTY x 2.5)\";",
      "Id": "9f8a12cfa0114077b58d919ddee0c3ce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c9fc4bb4835841279124e2300e4a2049",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK DELI CASE\";",
      "Id": "c66f92da073741d985d9adc48625e8d6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4db20d8b777c4617a2dcef9f08469181",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SUSHI\";",
      "Id": "d461cb57a48c4fb2aa2830708fa87b7f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e02897e782a487497e5e1b6f02d892c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SERVICE SANDWICH\";",
      "Id": "f9b7a517877f40c39a94e6897ef1b640",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "72ed69fcafff4795b29cd29342e53ff8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"LOW PROFILE DELI CASE\";",
      "Id": "d619319848c64235a3f11c9bbb3d0865",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61018bb64e504b5292f83dfee1d4cdd3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SERVICE SEAFOOD\";",
      "Id": "902790c34aa24395a0bc7a3f243e6e87",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a6f1bad98a38462c9118c4eaa945c30e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Input from Excel Import Node (flattened data)\r\nexcel_data = IN[0]\r\n\r\n# Input list of Sub-Headers to be matched\r\nsub_headers_to_match = IN[1]\r\n\r\n# Initialize an empty list to hold the data in the desired list of lists format\r\ndata_rows = []\r\n\r\ntry:\r\n    # Check if sub_headers_to_match is a list\r\n    if not isinstance(sub_headers_to_match, list):\r\n        raise ValueError(\"Sub-Headers to match must be provided as a list.\")\r\n\r\n    # Create a list to track unmatched sub-headers\r\n    unmatched_sub_headers = sub_headers_to_match.copy()\r\n\r\n    # Iterate through each row in the Excel data\r\n    for row in excel_data:\r\n        # Check if the row is a valid list and has at least 6 fields\r\n        if isinstance(row, list) and len(row) >= 6:\r\n            # Extract and format the required data, providing sensible default values where necessary\r\n            sub_header = row[1] if row[1] else \"N/A\"\r\n            item_type = row[2] if row[2] else \"N/A\"\r\n            existing = row[3] if row[3] is not None and row[3] != \"\" else 0\r\n            proposed = row[4] if row[4] is not None and row[4] != \"\" else 0\r\n            variation = row[5] if row[5] is not None and row[5] != \"\" else 0\r\n\r\n            # Only include rows with meaningful sub-header data that matches the provided list\r\n            if sub_header in sub_headers_to_match:\r\n                # Create a list for the row, formatted to match the desired output structure with individual labeled lists\r\n                row_list = [\r\n                    \"Sub-Header\", sub_header,\r\n                    [\"Type\", item_type],\r\n                    [\"Existing\", existing],\r\n                    [\"Proposed\", proposed],\r\n                    [\"Variation\", variation]\r\n                ]\r\n\r\n                # Append the row list to the data rows\r\n                data_rows.append(row_list)\r\n\r\n                # Remove one occurrence of the matched sub-header from unmatched list if present\r\n                if sub_header in unmatched_sub_headers:\r\n                    unmatched_sub_headers.remove(sub_header)\r\n\r\n    # Check for unmatched sub-headers and raise an error if any remain\r\n    if unmatched_sub_headers:\r\n        raise ValueError(\"The following Sub-Headers were not found in the input data: {}\".format(\", \".join(unmatched_sub_headers)))\r\n\r\n    # Set output to the list of lists\r\n    OUT = data_rows if data_rows else \"No valid rows found in input data. Check the structure of the input or revise the extraction logic.\"\r\n\r\nexcept Exception as e:\r\n    # Output any errors that occur\r\n    OUT = \"Error occurred: {}\".format(str(e))\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "e5f5d610811f4f8daf532fe9f38b697c",
      "Inputs": [
        {
          "Id": "714d4356e8274c5cb0c272dd6ec963ac",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2cd1936e6bb42078ce24cd61926012c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35abbe63f2e645b2a01454fe79512e42",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "f52a7c506bf94bb0b3198b293812443d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "db2df4cecb3749418cfee6413da03b27",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f1b0c997360a429f9c0f48b05e14bb45",
      "Inputs": [
        {
          "Id": "08935e559dd7436c8cd06226f994b192",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e768ec966a3f4bfa9e8de75a870839a3",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e23d8f36bb484e0db8c6726f3dc0ca2a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "da8611b65c15444eb024fd36ecaf2a2f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dccfe8d33b8446eab465365801db8e75",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK SINGLE SERVE BEV\";",
      "Id": "3fccb7f831494c59b042d71d2d597245",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "79f49f6a2472427a87863abc2b7b0c54",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK PREMIUM WINE\";",
      "Id": "df0b91556a024b58b543ba738ea5578e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "37fd76d092e549dbacb439f9546670dc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TOTAL MULTI-DECK DAIRY & MEAT/DELI\";",
      "Id": "ebaef8739585496087b116efe2fed28c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0c3b2723bc1d486880a4d2a1bdedfd45",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK BEER / WINE\";",
      "Id": "8bcef8e73f1b456baf6c604c919bae02",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "50a12ab6e4e3470183ea18eabd293594",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SERVICE MEAT\";",
      "Id": "dc2784132eb4462e86eccc8cc7e068ea",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c329a1be8bc4498c9aeb12033b9b3852",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK MEAT\";",
      "Id": "717a4e86a03c4d81b05b7b5fcb7a3616",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "689650ac73504237a201967e5ffb043f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SERVICE DELI COLD CASE\";",
      "Id": "883006e357c54bc3a6b34ee8063554b5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ab6da3f07c04dc78748bcff447f9dbd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "63eef6bce06249bab070daf9c5e1c1e0",
      "Inputs": [
        {
          "Id": "134c1a67b6674d9db8093d61734f6d68",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c17a194fa93f4ea7afabcdbd485c041c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff22d000a43e45d6b73e84b634d703d6",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "9b2bec3bc0b8468095e67b9fe3b09468",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "325e2d1ffce04103af8a3d13094482ec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "cff63f31ecad4de8970fd63fd90cbc12",
      "Inputs": [
        {
          "Id": "61cd2d9f9bb44ae09dd587102b46c6fe",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cc35843ecd94b35908804f7c624e76e",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d882197a674445138dbf5ea318fe73cf",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"DSP Comp Ref (Landscape)\";",
      "Id": "36b81f8d5f02460a9add55e4ad167f5a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "13d1f298e67e4f118396d6ecee8b12bc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Input Legend ID\r\nlegend_id = IN[0][0]\r\n\r\n# Access the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Placeholder for output\r\ntext_notes = []\r\n\r\ntry:\r\n    # Validate that the input is a valid integer before converting to ElementId\r\n    if isinstance(legend_id, int):\r\n        # Try to convert legend_id to an ElementId\r\n        legend_element_id = ElementId(legend_id)\r\n        \r\n        # Get the Legend View from the document\r\n        legend_view = doc.GetElement(legend_element_id)\r\n\r\n        # Check if the view is a Legend type\r\n        if isinstance(legend_view, View) and legend_view.ViewType == ViewType.Legend:\r\n            # Collect all text notes within the legend view\r\n            collector = FilteredElementCollector(doc, legend_view.Id)\r\n            text_elements = collector.OfCategory(BuiltInCategory.OST_TextNotes).WhereElementIsNotElementType().ToElements()\r\n            \r\n            # Extract text, Legend Index, position, and index from each TextNote element\r\n            for index, text_element in enumerate(text_elements, start=1):\r\n                if isinstance(text_element, TextNote):\r\n                    text = text_element.Text.strip()\r\n                    location = text_element.Coord  # Get XYZ position\r\n                    text_notes.append([\r\n                        text,\r\n                        [\r\n                            \"Legend Index\", index,\r\n                            [\"Position\", location.X, location.Y, location.Z]\r\n                        ]\r\n                    ])\r\n        else:\r\n            text_notes.append([\"Error: The provided ID does not correspond to a Legend View.\"])\r\n    else:\r\n        text_notes.append([\"Error: Invalid input type. Please provide a valid integer ID.\"])\r\nexcept Exception as e:\r\n    text_notes.append([f\"Error: An error occurred: {str(e)}\"])\r\n\r\n# Output the collected text notes\r\nOUT = text_notes\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "9c8b7d7a2c0249fa8a2f379b7e24e57c",
      "Inputs": [
        {
          "Id": "f3017c133e7d4f6eab800f58eef32017",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1f233780d964911991aecac7a4ad75d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "2774f83e8cfe47e7bc34bb0f99b628e2",
      "Inputs": [
        {
          "Id": "21be419271cb49c7a79b35605f0f60ba",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9a6d4451344c4a2ba68c1d90e193cc03",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38e9b522c02744f7975ff08c08df4d1f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "2b56c0d1b49040ba8aab4e5454a41a06",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "465d76870d1144db938b343f6ba71aec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"MULTI-DECK DAIRY\";",
      "Id": "14710cda3d564534a6bbe21de117a8ab",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c21c5957f722400a893baee606def122",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "8be972aeebe74b75a17d9e3d23101fcf",
      "Inputs": [
        {
          "Id": "9a74548e27e147f795046b313c6e808d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e02e93cd8e414f7c89e8ea97be77ed2d",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a64a2e1ef1bd439daa4ced00bba9eef1",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57de1c0b204e4cdd91e3283e27c970d6",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5d881086d4b4a468f46bdad96dbf7ce",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e22d6ba17ff4602ac9e36fad479d464",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e12f492b863745029cc4ab08be199d2f",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac2aed131d264ecabe27263cdf88e431",
          "Name": "item7",
          "Description": "Item Index #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c646e387f4da4a03aa600f15ecfec8d9",
          "Name": "item8",
          "Description": "Item Index #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9541523021543c6b7e1b23c95625123",
          "Name": "item9",
          "Description": "Item Index #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b88e859d2930451db910f3b08431ec10",
          "Name": "item10",
          "Description": "Item Index #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9f29f7ba7384c9d99a2a9740f57da2b",
          "Name": "item11",
          "Description": "Item Index #11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21c5dd2fda0244ddb09476d48446ce73",
          "Name": "item12",
          "Description": "Item Index #12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "860943f22eb440d78750181fadc115b6",
          "Name": "item13",
          "Description": "Item Index #13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8951503f5f524c97afb92da2f335625a",
          "Name": "item14",
          "Description": "Item Index #14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdec996b92a3499e9d90c8f884233dbd",
          "Name": "item15",
          "Description": "Item Index #15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d2e43ca22294338ac271c74992dbf2c",
          "Name": "item16",
          "Description": "Item Index #16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b529ad2f1c3f4a869c28a1e20403f765",
          "Name": "item17",
          "Description": "Item Index #17",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53f0de4723064720a0f6c68cc640005b",
          "Name": "item18",
          "Description": "Item Index #18",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc978ff4e28344a5a56a499f9de134ec",
          "Name": "item19",
          "Description": "Item Index #19",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81f529cbf8af4a779fd4b4c9c9a6704f",
          "Name": "item20",
          "Description": "Item Index #20",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e8d5b906c0d481682ea2b80d1396655",
          "Name": "item21",
          "Description": "Item Index #21",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9fa17b51d6614e1e8f160f53d0b88685",
          "Name": "item22",
          "Description": "Item Index #22",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5234202ffd04e23b5ac6f93e268bb5f",
          "Name": "item23",
          "Description": "Item Index #23",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39bc3663c6654d838e389a30b3ecd75c",
          "Name": "item24",
          "Description": "Item Index #24",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83139c6f2bbe4951bdc7f7e99e5436d0",
          "Name": "item25",
          "Description": "Item Index #25",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b560155a956b4f7687ca1c6fa20bf8ff",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Inputs\r\ntext_notes = IN[0]  # Nested list containing TextNotes data\r\n\r\n# Function to determine column and row boundaries based on the positions of TextNotes\r\ndef infer_grid_dimensions(text_notes):\r\n    x_values = []\r\n    y_values = []\r\n    \r\n    # Extract X and Y coordinates from the nested list\r\n    for note in text_notes:\r\n        position_data = note[1][2]\r\n        _, x, y, _ = position_data\r\n        x_values.append(x)\r\n        y_values.append(y)\r\n    \r\n    # Sort and calculate the average difference between sorted unique values as the inferred width/height\r\n    unique_x_values = sorted(set(x_values))\r\n    unique_y_values = sorted(set(y_values))\r\n    \r\n    column_width = (max(unique_x_values) - min(unique_x_values)) / (len(unique_x_values) - 1) if len(unique_x_values) > 1 else 1\r\n    row_height = (max(unique_y_values) - min(unique_y_values)) / (len(unique_y_values) - 1) if len(unique_y_values) > 1 else 1\r\n    \r\n    return column_width, row_height\r\n\r\n# Infer column width and row height\r\ncolumn_width, row_height = infer_grid_dimensions(text_notes)\r\n\r\n# Function to determine column and row indices based on X, Y values\r\ndef calculate_grid_indices(x, y, column_width, row_height):\r\n    column = int(x // column_width) + 1  # Convert to 1-based index\r\n    row = int(y // row_height) + 1       # Convert to 1-based index\r\n    return column, row\r\n\r\n# Loop through each TextNote and add Column and Row information to the nested list\r\nfor note in text_notes:\r\n    position_data = note[1][2]\r\n    _, x, y, _ = position_data\r\n    \r\n    # Calculate column and row indices\r\n    column, row = calculate_grid_indices(x, y, column_width, row_height)\r\n    \r\n    # Move Column and Row data to the same level as the note title\r\n    note.insert(1, (\"Column\", column))\r\n    note.insert(2, (\"Row\", row))\r\n\r\n# Output (for verification in Dynamo)\r\nOUT = text_notes\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "83f4fc82b3a54e2089e05ebc85cdb693",
      "Inputs": [
        {
          "Id": "2b14bd8ca8d445c387e19526a9de9b20",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "261a48d1ffca4199b1806a735fbc22db",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nimport re\r\n\r\n# Function to flatten nested list into a single-level list\r\ndef flatten_list(nested_list):\r\n    flat_list = []\r\n    for item in nested_list:\r\n        if isinstance(item, list):\r\n            flat_list.extend(flatten_list(item))\r\n        else:\r\n            flat_list.append(item)\r\n    return flat_list\r\n\r\n# Function to remove all non-alphanumeric characters, spaces, and line breaks from a string\r\ndef normalize_string(s):\r\n    return re.sub(r'[^a-zA-Z0-9]', '', s).lower()\r\n\r\n# Function to search for labels and return the desired columns in the original format\r\ndef find_labels_and_columns(data, labels, num_following_columns):\r\n    results = []\r\n    found_labels = set()\r\n    normalized_labels = [normalize_string(label) for label in labels]\r\n    \r\n    # Iterate through each element in the data\r\n    for i, element in enumerate(data):\r\n        if isinstance(element, list) and len(element) > 0 and isinstance(element[0], str):\r\n            label = element[0]\r\n            normalized_label = normalize_string(label)\r\n            if normalized_label in normalized_labels:\r\n                # Mark the label as found\r\n                found_labels.add(normalized_label)\r\n                \r\n                # Extract the row and column of the matched label\r\n                label_row = None\r\n                label_column = None\r\n                for sub_element in element:\r\n                    if isinstance(sub_element, list) and len(sub_element) > 1:\r\n                        if sub_element[0] == 'Row':\r\n                            label_row = sub_element[1]\r\n                        elif sub_element[0] == 'Column':\r\n                            label_column = sub_element[1]\r\n                \r\n                if label_row is None or label_column is None:\r\n                    continue\r\n                \r\n                # Collect the elements in the same row, based on column values to the right of the matched label\r\n                collected_section = [element]  # Start with the matched element itself\r\n                columns_collected = 0  # Start collecting columns after the Sub-Header\r\n                \r\n                # Sort the data based on the column value to ensure proper ordering\r\n                sorted_data = sorted([elem for elem in data if isinstance(elem, list) and len(elem) > 0], \r\n                                    key=lambda x: next((sub[1] for sub in x if isinstance(sub, list) and sub[0] == 'Column'), float('inf')))\r\n                \r\n                # Iterate over sorted data to collect elements that match the same row and are sequential to the right in terms of columns\r\n                for other_element in sorted_data:\r\n                    if other_element == element:\r\n                        continue  # Skip the matched label itself\r\n                    if isinstance(other_element, list) and len(other_element) > 0 and isinstance(other_element[0], str):\r\n                        other_row = None\r\n                        other_column = None\r\n                        for sub in other_element:\r\n                            if isinstance(sub, list) and len(sub) > 1:\r\n                                if sub[0] == 'Row':\r\n                                    other_row = sub[1]\r\n                                elif sub[0] == 'Column':\r\n                                    other_column = sub[1]\r\n                        \r\n                        # If rows match and the other column is strictly to the right of the matched label's column, collect the element\r\n                        if other_row == label_row and other_column is not None and other_column > label_column and columns_collected < num_following_columns:\r\n                            collected_section.append(other_element)\r\n                            columns_collected += 1\r\n                \r\n                # Move Sub-Header to a higher level in the nesting\r\n                sub_header = [\"Sub-Header\", collected_section[0][0]]\r\n                \r\n                # Add the remaining collected elements without extra nesting and retain their values\r\n                labeled_section = [sub_header]\r\n                for j, label_name in enumerate([\"Type\", \"Existing\", \"Proposed\", \"Variation\"], start=1):\r\n                    if j < len(collected_section):\r\n                        # Retain the value of the label (second element in the list)\r\n                        value = collected_section[j][1] if len(collected_section[j]) > 1 else None\r\n                        labeled_section.append([label_name, collected_section[j][0] if len(collected_section[j]) > 0 else None, value] + collected_section[j][2:])\r\n                    else:\r\n                        # If there's no corresponding collected element, add an empty value placeholder\r\n                        labeled_section.append([label_name, None])\r\n                \r\n                results.append(labeled_section)\r\n\r\n    # Check if all labels were found, if not append the error to OUT\r\n    if len(found_labels) != len(normalized_labels):\r\n        missing_labels = [label for label in labels if normalize_string(label) not in found_labels]\r\n        if missing_labels:\r\n            return f\"Error: The following labels were not found in the data: {missing_labels}\"\r\n\r\n    return results\r\n\r\n# Input data: The structured dataset and list of labels of interest from Dynamo UI input\r\ndata = IN[0]  # Expecting input from Dynamo to be a structured list\r\n\r\n# Dynamically input labels of interest from user (Dynamo UI input)\r\nlabels_of_interest = IN[1]  # Expecting input from Dynamo to be a list of labels\r\n\r\n# Input for number of following columns to collect (Dynamo UI input)\r\nnum_following_columns = IN[2]  # Expecting input from Dynamo to be an integer specifying the number of following columns\r\n\r\n# Find labels and their respective columns\r\nmatched_results = find_labels_and_columns(data, labels_of_interest, num_following_columns)\r\n\r\n# Output the results in the same format as the input\r\nOUT = matched_results\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "397989174bf8498e83219dc02b317346",
      "Inputs": [
        {
          "Id": "8af02bc3ef0e41a784dbee72e6d3b4e6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1878718981a45e4b3fa480e3168dfe5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1d74038f99946bebdf846b9f8447087",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09fbc00085d34c8d87102fe743489dfc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "2af2a074483643e086fd82e0f793ad33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e5b754943fa04c6ca015703a072dc3bb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"WINE / LIQUOR SHELVING A\";",
      "Id": "a6c101e74ce74a6198b96d18b57ecb6d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c50a7d6a482040799ec30c690ae09d38",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"WINE / LIQUOR SHELVING B\";",
      "Id": "2695052f8eb642f1a775acd591ee5fba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c1013b4c37164975a6f6de0b2ef8c525",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom Autodesk.Revit.DB import TextNote, ElementId\r\n\r\n# Inputs\r\nexcel_data = IN[0]  # Correct values from Excel\r\nrevit_data = IN[1]  # Revit data containing Legend Index and Position information\r\n\r\n# Placeholder to collect debug messages\r\ndebug_messages = []\r\n\r\n# Function to add debug info\r\ndef add_debug_info(message):\r\n    debug_messages.append(message)\r\n\r\n# Check if both inputs are received successfully\r\nif excel_data and revit_data:\r\n    add_debug_info(\"Both Excel and Revit data received successfully.\")\r\nelse:\r\n    if not excel_data:\r\n        add_debug_info(\"Excel data is missing.\")\r\n    if not revit_data:\r\n        add_debug_info(\"Revit data is missing.\")\r\n\r\n# Output debug messages\r\nOUT = debug_messages",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "fd5daf8948144cd5bec4fb9cd79175ef",
      "Inputs": [
        {
          "Id": "7247baea7f564e989cf4e80d42b18997",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7874f276e8747bfac3af0e2c7448d1a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32e28a6d9ba242bfa4663c4c4697a19c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "399f2c27ebf643ebb2a0b0128d3ab363",
      "Inputs": [
        {
          "Id": "8e861f96943b4279924d01693e93c349",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e853f82af33e4b23ba020c0d43cd0f47",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Importing Revit Nodes\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Import Revit API\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Main function for reformatting list structure\r\ndef reformat_list_structure(input_list):\r\n    reformatted_list = []\r\n    \r\n    for sublist in input_list:\r\n        # Ensure sublist is a list\r\n        if isinstance(sublist, list):\r\n            sub_header = None\r\n            rest_items = []\r\n            \r\n            # Loop through each item in the sublist\r\n            for item in sublist:\r\n                # Extract the Sub-Header if present\r\n                if isinstance(item, list) and len(item) > 1 and item[0] == \"Sub-Header\":\r\n                    sub_header = item  # Retain the entire Sub-Header list, including the label\r\n                else:\r\n                    # Flatten one level of the rest items if they are lists themselves\r\n                    if isinstance(item, list) and len(item) > 0:\r\n                        rest_items.append(item)\r\n                    else:\r\n                        rest_items.append(item)\r\n            \r\n            # If a Sub-Header was found, add it to the reformatted list as the top-level key with the rest of the items directly under it\r\n            if sub_header:\r\n                reformatted_list.append([sub_header[0], sub_header[1]] + rest_items)\r\n    \r\n    return reformatted_list\r\n\r\n# Inputs from Dynamo\r\ninput_list = IN[0]\r\n\r\n# Perform the reformatting\r\noutput_list = reformat_list_structure(input_list)\r\n\r\n# Assign the output to Dynamo\r\nOUT = output_list\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "67ec1d72e64b407b95189de847ecee6c",
      "Inputs": [
        {
          "Id": "e98c3a79c10a436fbb44b456c30f013f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71e727db30e24dd7937d73021c757c29",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "311816cdea3f47d2a20c8552a5761eec",
      "Inputs": [
        {
          "Id": "53830b390e1447c6883340d3b35a24a9",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8fcd01acf0de4926b1502ae1ecbd68d6",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "dbea18cb57284c3fb5d3d3aa6f868145",
      "Inputs": [
        {
          "Id": "fd2c52d3306c414aa6d0b8e650309f60",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf2fc6f6b9f8468fbee85ade60e52649",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d6f84968d5154459a46c9f0773f76094",
      "Inputs": [
        {
          "Id": "9f9b4c6a22d043bc8ccc0f8f5148f677",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e47c5919fc174040afaef12374df660d",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3415e299b6b244e9aa960337f4b077d0",
      "Inputs": [
        {
          "Id": "7e8fdff0e621460dae995fa8f2cadfc5",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c424578f03644147adbf5aa932436969",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "603404822ab84756b913fb74c5482737",
      "Inputs": [
        {
          "Id": "381560b60ca3422e962c5436f509dcd3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e401b0b5bda49f4a3276358f8faf3f5",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33eda53176964ee6abda6c2aa8b6657a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "593ca96a43b940daa9dcd27a4122fcfc",
      "Inputs": [
        {
          "Id": "1676258b12c24130a754beece8afea07",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02b2ec25918c45fbba7677e38c662a1a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54b4a3e39fc742e3b7fe09a9fc29ffbd",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1d4a88d1cc3548b2954d963c3a3f0fe7",
      "Inputs": [
        {
          "Id": "b0a34c18ce394295a949c0774a387fed",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca2fde3c0a6a4971be16ecf04f93e336",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d18a99bb81742a6a43c6cf15fb42b43",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "32ba3bd8e94744128713596588bfccf2",
      "Inputs": [
        {
          "Id": "a8a111bf841945c9a0172f00cbd96814",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ced48a58e50845bf9a011f72134c25ba",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99dee7bb9e364e0f8fabe3fb0bc6c723",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fa6ec1355fba4a39ba77c7199c015b0a",
      "Inputs": [
        {
          "Id": "ef7e2e3368b6444d81b86c539dbdda45",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c628588852744a7a2daff94440036f3",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "da233bb24426449baf339e6164c019d0",
      "Inputs": [
        {
          "Id": "4df6d44ff2894a919632e9ea13d7c78e",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4434b66bc364d54bebcb10e61d1dca1",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "1633694d392845428ea5187ee58ba459",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "80c85077d2644fe5826e53bdd7ff95ea",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "89362d19c2db4fa682b6657123d536e0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "84a6cdc7b3cc4d5089731dd52afe94bd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3cbf2c90f3ad4a0ca388a4820ddd70bf",
      "Inputs": [
        {
          "Id": "c9f37cbe8609479fbfd31271952c9d79",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1462abb9a9ff4703993d9f532d6b1b3a",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom Autodesk.Revit.DB import TextNote, ElementId\r\n\r\n# Inputs\r\nexcel_data = IN[0]  # Correct values from Excel\r\nrevit_data = IN[1]  # Revit data containing Legend Index and Position information\r\n\r\n# Placeholder to collect debug messages\r\ndebug_messages = []\r\n\r\n# Function to add debug info\r\ndef add_debug_info(message):\r\n    debug_messages.append(message)\r\n\r\n# Check if both inputs are received successfully\r\nif excel_data and revit_data:\r\n    add_debug_info(\"Both Excel and Revit data received successfully.\")\r\n\r\n    # Extract Sub-Headers from Excel and Revit data\r\n    excel_subheaders = [item[0] for item in excel_data]\r\n    revit_subheaders = [entry[0] for entry in revit_data]\r\n\r\n    # List to hold matched Sub-Headers\r\n    matched_subheaders = []\r\n\r\n    # Match Excel Sub-Headers to Revit Sub-Headers\r\n    for excel_header in excel_subheaders:\r\n        if excel_header in revit_subheaders:\r\n            # Find the index or value of the matched Revit Sub-Header\r\n            revit_index = revit_subheaders.index(excel_header)\r\n            matched_subheaders.append(revit_data[revit_index])\r\n        else:\r\n            add_debug_info(f\"No match found for Excel Sub-Header: {excel_header}\")\r\n\r\n    # Add debug info for successful matches\r\n    for match in matched_subheaders:\r\n        add_debug_info(f\"Match found: {match[0]}\")\r\nelse:\r\n    if not excel_data:\r\n        add_debug_info(\"Excel data is missing.\")\r\n    if not revit_data:\r\n        add_debug_info(\"Revit data is missing.\")\r\n\r\n# Output debug messages and matched Sub-Headers\r\nOUT = (debug_messages, matched_subheaders)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "06ef5a937fb64d31b1f0d2f57c10850a",
      "Inputs": [
        {
          "Id": "d79b38c3fd534afcaf82116f6e40a993",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcdc8eb553f2421b94d472eaab07019a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca06ca87d56d436f8f5b869249eae0d0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f41f45e6ff7f42179c861d93a534eb54",
      "Inputs": [
        {
          "Id": "1eb2b51d247240cf8f4b8855b6aa2dc6",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aec727b6629d4afcb13e92802dbdc666",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom Autodesk.Revit.DB import TextNote, ElementId\r\n\r\n# Inputs\r\nexcel_data = IN[0]  # Correct values from Excel\r\nrevit_data = IN[1]  # Revit data containing Legend Index and Position information\r\n\r\n# Initialize matched_subheaders\r\nmatched_subheaders = []\r\n\r\n# Check if both inputs are received successfully\r\nif excel_data and revit_data:\r\n    # Extract Sub-Headers from Excel and Revit data\r\n    excel_subheaders = [item[0] for item in excel_data]\r\n    revit_subheaders = [entry[0] for entry in revit_data]\r\n\r\n    # Match Excel Sub-Headers to Revit Sub-Headers\r\n    for excel_header in excel_subheaders:\r\n        if excel_header in revit_subheaders:\r\n            # Find the index or value of the matched Revit Sub-Header\r\n            revit_index = revit_subheaders.index(excel_header)\r\n            matched_entry = revit_data[revit_index]\r\n            matched_entry.insert(1, \"Status: Match found\")\r\n            matched_subheaders.append(matched_entry)\r\n            print(f\"Debug: Match found for Sub-Header '{excel_header}' at index {revit_index}\")\r\n        else:\r\n            # Add unmatched Excel header with a note\r\n            unmatched_entry = [excel_header, \"Status: No match found\"]\r\n            matched_subheaders.append(unmatched_entry)\r\n            print(f\"Debug: No match found for Sub-Header '{excel_header}'\")\r\nelse:\r\n    if not excel_data:\r\n        matched_subheaders.append([\"Excel data is missing\"])\r\n        print(\"Debug: Excel data is missing\")\r\n    if not revit_data:\r\n        matched_subheaders.append([\"Revit data is missing\"])\r\n        print(\"Debug: Revit data is missing\")\r\n\r\n# Simplify output for clarity\r\nformatted_output = []\r\nfor item in matched_subheaders:\r\n    formatted_output.append(item)\r\n\r\n# Output formatted matched Sub-Headers\r\nOUT = formatted_output\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ca87af2e1e924dd784a1defc01e90f38",
      "Inputs": [
        {
          "Id": "dfe034d00c8247288463848e4811fed0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfb36b68d29d42a7b81a904b531068a8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c7ed2bd937f456ca030813413b54bab",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "1e6e1a9a670449948d99109588041aab",
      "End": "61cd2d9f9bb44ae09dd587102b46c6fe",
      "Id": "76ab3ac5c8594695a96117a234b0cbf2",
      "IsHidden": "False"
    },
    {
      "Start": "93d9b2a22db147c1a9d88d435429e845",
      "End": "134c1a67b6674d9db8093d61734f6d68",
      "Id": "df79e3d7fda64304a6b546494ed215cb",
      "IsHidden": "False"
    },
    {
      "Start": "ad7a4d5ea57748d0856e6fa3ffa6acc0",
      "End": "a7cbb22f15a94b8a8f5c36351af776d8",
      "Id": "db631e2f4d814f178d21428ebbd8cd12",
      "IsHidden": "False"
    },
    {
      "Start": "2fe93ddf962443598310de08bb3f6d11",
      "End": "7ab0e259cfed4bd1b4e2a8b25d3bcc88",
      "Id": "86c83f210be944d08125da204e4f2a55",
      "IsHidden": "False"
    },
    {
      "Start": "ea2cd0d3a07944dd9ed531bf6b969614",
      "End": "08935e559dd7436c8cd06226f994b192",
      "Id": "89feb33480684af9abcc0bc83832fbd8",
      "IsHidden": "False"
    },
    {
      "Start": "b74893368a73420b815b4d66aaef4e62",
      "End": "9841d70967194d6ea7cf5d78d326366a",
      "Id": "785a6389439b41f5b7d186f642d5bf25",
      "IsHidden": "False"
    },
    {
      "Start": "aac56490dcfc43ae9c0bb1682608c211",
      "End": "1fd90d011ac04d8a86aad1ff79d5ebbd",
      "Id": "d09d7d0976a14834ac48e660efd505a6",
      "IsHidden": "False"
    },
    {
      "Start": "1778607a2a5243759031935e9ba9a93b",
      "End": "0b739b4257104e7b8b9d3ca352e7293e",
      "Id": "8923c5f483d64e3db56d6e0195cb3866",
      "IsHidden": "False"
    },
    {
      "Start": "7d23fa33421743b39ddfeafa1108d46f",
      "End": "fc64212e72d14417bab4e6dc6cf99a18",
      "Id": "97f3c52fabcc4db0aaaa324d5d5bbd62",
      "IsHidden": "False"
    },
    {
      "Start": "a1428efa0b1c420eb4491c7dabdb530d",
      "End": "fb1686ca102a44d48a0b31ec09d429da",
      "Id": "250851b8abec42898a9fe906db1e4224",
      "IsHidden": "False"
    },
    {
      "Start": "c02ae76413dd4615a2b53c9a8bb600da",
      "End": "71e7b9fee17945e69121a7fa4d797a81",
      "Id": "776c49f6c4a444628e06340b1fdc7c30",
      "IsHidden": "False"
    },
    {
      "Start": "28a2c83a9f844dbaadf15f28948cca19",
      "End": "9d6cce56c5584ec08cfec4609c95b79d",
      "Id": "c9e47277cab3436e99cd0b3fb2c5fee8",
      "IsHidden": "False"
    },
    {
      "Start": "0fe7798f395747bcab3a7c06332ce12c",
      "End": "a2c4acd75ba743b2bf013512a200c378",
      "Id": "3e4b6b0c69b14926ba8504844822272c",
      "IsHidden": "False"
    },
    {
      "Start": "a2c1b5a23508469693cd2ecb50e164c1",
      "End": "4feff7ccfd384b97ae922279f0c684dc",
      "Id": "314bbed4666f405e8570877a140e82c9",
      "IsHidden": "False"
    },
    {
      "Start": "52450eb6183d438587066cdde5fe45bc",
      "End": "5e74f31659d14bb8bf4ad0e3a051f615",
      "Id": "a78b84e090634e0494f9ebd4f46cde98",
      "IsHidden": "False"
    },
    {
      "Start": "f3bf1e127dc84392baac661761473675",
      "End": "827f32ac437f433f8e203b322c76a06b",
      "Id": "3d579dfd55a6473a8cea6a2ad1a32707",
      "IsHidden": "False"
    },
    {
      "Start": "4748ffee74eb4724a5379f0a1ad4ada3",
      "End": "035572c80e574e749c050f36688ef02e",
      "Id": "66084403d2464303bddb62f1a266545a",
      "IsHidden": "False"
    },
    {
      "Start": "cf4818fcf1ce42a9bafa63de1f18f4dc",
      "End": "f5fcc6727f944c76bf17e26f900829ff",
      "Id": "e5c556b42a204439aee1ff5c900624ec",
      "IsHidden": "False"
    },
    {
      "Start": "accd2a24d3124481bcc2e3d8a9cc4d85",
      "End": "0100a0a5ad754ece939ab5243e16584c",
      "Id": "a0f2e234ea1041bf849cd302e5b802e4",
      "IsHidden": "False"
    },
    {
      "Start": "ae9881598b6948dea84c86b6f57dd586",
      "End": "f1bb329babe14c75ac36e4bcbb84267c",
      "Id": "03904dfffe524dab87571c967b1e9001",
      "IsHidden": "False"
    },
    {
      "Start": "249029be1c524fa1b7b7b28498bd195e",
      "End": "918fdbd7dfa2474ab0d4a4e6cd712eff",
      "Id": "57bae458fcb24eb183ce6c960b2a37d8",
      "IsHidden": "False"
    },
    {
      "Start": "b00aecc67a7f4f0288299bbab8ac278b",
      "End": "09571e0f7cf745ad87f2e1cabc3c780a",
      "Id": "29b44d6462194370a28b5139376b8e0d",
      "IsHidden": "False"
    },
    {
      "Start": "87602e2a5da5475f9512a05b6dbaf62c",
      "End": "5cfa8fae9d524e6dbd372a756a8b92bd",
      "Id": "03eb126d73a646e0b3c6784f28db5081",
      "IsHidden": "False"
    },
    {
      "Start": "19112b14ead441dca7ac21adcc4a4d7f",
      "End": "616c2a89234a45cf8ad8c8465235ba68",
      "Id": "2ea2d1839c2d4a2d81ed46e3ec24cba1",
      "IsHidden": "False"
    },
    {
      "Start": "caff3030cd304f7da798d75b9b7a7434",
      "End": "71d3705deb2b48df81735c7e8ba6d4f5",
      "Id": "c9dc780fc68849c990ca8f91b605c6d9",
      "IsHidden": "False"
    },
    {
      "Start": "653745e16eab4086beb817098b34e004",
      "End": "9a74548e27e147f795046b313c6e808d",
      "Id": "2761a151bdfb4b72b85141131d59e192",
      "IsHidden": "False"
    },
    {
      "Start": "4a0017d14dcf4cf992c7dd4154bde71d",
      "End": "57de1c0b204e4cdd91e3283e27c970d6",
      "Id": "97773cdae46b4fbf8e83170a0b899934",
      "IsHidden": "False"
    },
    {
      "Start": "6120640525ba4f63a3de8d5a02b415f3",
      "End": "b88e859d2930451db910f3b08431ec10",
      "Id": "71f69dd84be349fdaf68086e7068eafd",
      "IsHidden": "False"
    },
    {
      "Start": "38d63e93e4634012889e3f41dd44622b",
      "End": "9fa17b51d6614e1e8f160f53d0b88685",
      "Id": "85fe60b6c70f4d7084b36c9602eeeb54",
      "IsHidden": "False"
    },
    {
      "Start": "51f753c49cdb463d852ae75fc1da65a7",
      "End": "39bc3663c6654d838e389a30b3ecd75c",
      "Id": "47d7de06fb574806b9d0d3678e4b3ea3",
      "IsHidden": "False"
    },
    {
      "Start": "f92e3c32a92949129aecaeeccdcf1f56",
      "End": "c5234202ffd04e23b5ac6f93e268bb5f",
      "Id": "96fe47770e7343b8a53fdd4e5a1ed6e2",
      "IsHidden": "False"
    },
    {
      "Start": "8e3a139bc56a424791c0398c36924ebb",
      "End": "83139c6f2bbe4951bdc7f7e99e5436d0",
      "Id": "c30ee49eb2354a339c248f500e7b372a",
      "IsHidden": "False"
    },
    {
      "Start": "47d56151416c424fb332d4ffb3d19fcb",
      "End": "81f529cbf8af4a779fd4b4c9c9a6704f",
      "Id": "e7701c7f54634df08edbb78fec2ef74e",
      "IsHidden": "False"
    },
    {
      "Start": "8e72b55a6541430da66d4c13f1fa3be3",
      "End": "2e8d5b906c0d481682ea2b80d1396655",
      "Id": "3ab16a465d8b4693adf8ec3e6307bb92",
      "IsHidden": "False"
    },
    {
      "Start": "93a2fbcad8424170a84b8862589fb677",
      "End": "cc978ff4e28344a5a56a499f9de134ec",
      "Id": "e0e098b9f864464aa609b5785baa3573",
      "IsHidden": "False"
    },
    {
      "Start": "c9fc4bb4835841279124e2300e4a2049",
      "End": "c646e387f4da4a03aa600f15ecfec8d9",
      "Id": "366a98e066964f4ebc80b3c1a343aeea",
      "IsHidden": "False"
    },
    {
      "Start": "4db20d8b777c4617a2dcef9f08469181",
      "End": "ac2aed131d264ecabe27263cdf88e431",
      "Id": "9b9e3ddf9e22442cbc0338a8f6a71441",
      "IsHidden": "False"
    },
    {
      "Start": "8e02897e782a487497e5e1b6f02d892c",
      "End": "c5d881086d4b4a468f46bdad96dbf7ce",
      "Id": "f39467d9b3af40fbb6a474a985ae3c7c",
      "IsHidden": "False"
    },
    {
      "Start": "72ed69fcafff4795b29cd29342e53ff8",
      "End": "7e22d6ba17ff4602ac9e36fad479d464",
      "Id": "3955080d33124b168b13bbfba739eee1",
      "IsHidden": "False"
    },
    {
      "Start": "61018bb64e504b5292f83dfee1d4cdd3",
      "End": "e12f492b863745029cc4ab08be199d2f",
      "Id": "48c643db9ba94999844af064cc2c41e9",
      "IsHidden": "False"
    },
    {
      "Start": "a6f1bad98a38462c9118c4eaa945c30e",
      "End": "21c5dd2fda0244ddb09476d48446ce73",
      "Id": "0694701f0aae41b3a08c0cd64ed06c7f",
      "IsHidden": "False"
    },
    {
      "Start": "35abbe63f2e645b2a01454fe79512e42",
      "End": "7247baea7f564e989cf4e80d42b18997",
      "Id": "d930467c24b74831a925d5c2932ea224",
      "IsHidden": "False"
    },
    {
      "Start": "35abbe63f2e645b2a01454fe79512e42",
      "End": "53830b390e1447c6883340d3b35a24a9",
      "Id": "d6dd219eb0d24f0d9a291e0df1eee2a1",
      "IsHidden": "False"
    },
    {
      "Start": "35abbe63f2e645b2a01454fe79512e42",
      "End": "a8a111bf841945c9a0172f00cbd96814",
      "Id": "df7b44938e35451ca87030ec5dfbe6fe",
      "IsHidden": "False"
    },
    {
      "Start": "35abbe63f2e645b2a01454fe79512e42",
      "End": "d79b38c3fd534afcaf82116f6e40a993",
      "Id": "998a8f740b3e43ed8908796d7173a6c2",
      "IsHidden": "False"
    },
    {
      "Start": "35abbe63f2e645b2a01454fe79512e42",
      "End": "dfe034d00c8247288463848e4811fed0",
      "Id": "cd9ed3215328404e9743cb00750ed636",
      "IsHidden": "False"
    },
    {
      "Start": "db2df4cecb3749418cfee6413da03b27",
      "End": "3f6e02ed2d7e4baba77ba1d1519697aa",
      "Id": "bdc64b6332de483691b236946db5fbc8",
      "IsHidden": "False"
    },
    {
      "Start": "e23d8f36bb484e0db8c6726f3dc0ca2a",
      "End": "714d4356e8274c5cb0c272dd6ec963ac",
      "Id": "f99e10ced5a7434faf8249a325901d98",
      "IsHidden": "False"
    },
    {
      "Start": "dccfe8d33b8446eab465365801db8e75",
      "End": "e768ec966a3f4bfa9e8de75a870839a3",
      "Id": "2d981b7b57fc4280bbbae7461ac3902d",
      "IsHidden": "False"
    },
    {
      "Start": "79f49f6a2472427a87863abc2b7b0c54",
      "End": "e02e93cd8e414f7c89e8ea97be77ed2d",
      "Id": "8b176b2dda0c403cb94ce8424a71287e",
      "IsHidden": "False"
    },
    {
      "Start": "37fd76d092e549dbacb439f9546670dc",
      "End": "5d2e43ca22294338ac271c74992dbf2c",
      "Id": "ee727ba4094b430c9223f22c085e88fc",
      "IsHidden": "False"
    },
    {
      "Start": "0c3b2723bc1d486880a4d2a1bdedfd45",
      "End": "c9f29f7ba7384c9d99a2a9740f57da2b",
      "Id": "6d51c245f4484cdb82e7a8095d9ace27",
      "IsHidden": "False"
    },
    {
      "Start": "50a12ab6e4e3470183ea18eabd293594",
      "End": "fdec996b92a3499e9d90c8f884233dbd",
      "Id": "02f6bd583fda46ea8a3174968ff4bc37",
      "IsHidden": "False"
    },
    {
      "Start": "c329a1be8bc4498c9aeb12033b9b3852",
      "End": "860943f22eb440d78750181fadc115b6",
      "Id": "5b26b322293649389339f9e6c6c8b6ee",
      "IsHidden": "False"
    },
    {
      "Start": "689650ac73504237a201967e5ffb043f",
      "End": "8951503f5f524c97afb92da2f335625a",
      "Id": "655e84bf5e2e41cbb1cddd298bc9dded",
      "IsHidden": "False"
    },
    {
      "Start": "7ab6da3f07c04dc78748bcff447f9dbd",
      "End": "a64a2e1ef1bd439daa4ced00bba9eef1",
      "Id": "c67a7d87783e4dd5bb7e13f83d0fff85",
      "IsHidden": "False"
    },
    {
      "Start": "ff22d000a43e45d6b73e84b634d703d6",
      "End": "21be419271cb49c7a79b35605f0f60ba",
      "Id": "2092372fc2cd401f9c5fd6d11ba07ab5",
      "IsHidden": "False"
    },
    {
      "Start": "325e2d1ffce04103af8a3d13094482ec",
      "End": "c17a194fa93f4ea7afabcdbd485c041c",
      "Id": "95db06fe24ee48589d43140c02e7047a",
      "IsHidden": "False"
    },
    {
      "Start": "d882197a674445138dbf5ea318fe73cf",
      "End": "16068f94dad24d9b8e86cf66242121ad",
      "Id": "fd2b5cccfaeb47da9944df96ebe3959e",
      "IsHidden": "False"
    },
    {
      "Start": "13d1f298e67e4f118396d6ecee8b12bc",
      "End": "5cc35843ecd94b35908804f7c624e76e",
      "Id": "a77753ff45894f85bbdf3a8c84a279e2",
      "IsHidden": "False"
    },
    {
      "Start": "c1f233780d964911991aecac7a4ad75d",
      "End": "2b14bd8ca8d445c387e19526a9de9b20",
      "Id": "750c5d09e7ad47aab179abfa9effa600",
      "IsHidden": "False"
    },
    {
      "Start": "38e9b522c02744f7975ff08c08df4d1f",
      "End": "f3017c133e7d4f6eab800f58eef32017",
      "Id": "97c8422509fe4ad281a5dd2aaf9caa80",
      "IsHidden": "False"
    },
    {
      "Start": "465d76870d1144db938b343f6ba71aec",
      "End": "9a6d4451344c4a2ba68c1d90e193cc03",
      "Id": "3a2e11bb169c4196af158afeccd4ab27",
      "IsHidden": "False"
    },
    {
      "Start": "c21c5957f722400a893baee606def122",
      "End": "c9541523021543c6b7e1b23c95625123",
      "Id": "c0d8a17947cc4c7fbce8ced77e20bd4e",
      "IsHidden": "False"
    },
    {
      "Start": "b560155a956b4f7687ca1c6fa20bf8ff",
      "End": "e2cd1936e6bb42078ce24cd61926012c",
      "Id": "516f054401d840f4a1474e9e7701b18d",
      "IsHidden": "False"
    },
    {
      "Start": "b560155a956b4f7687ca1c6fa20bf8ff",
      "End": "a1878718981a45e4b3fa480e3168dfe5",
      "Id": "def8f090579940a9b4811569b3f5937a",
      "IsHidden": "False"
    },
    {
      "Start": "261a48d1ffca4199b1806a735fbc22db",
      "End": "8af02bc3ef0e41a784dbee72e6d3b4e6",
      "Id": "8d0884bcb72e4e328ffe4cc9b5bdf7a6",
      "IsHidden": "False"
    },
    {
      "Start": "09fbc00085d34c8d87102fe743489dfc",
      "End": "e98c3a79c10a436fbb44b456c30f013f",
      "Id": "a54f2778a9a04f518909e83ba46ed866",
      "IsHidden": "False"
    },
    {
      "Start": "e5b754943fa04c6ca015703a072dc3bb",
      "End": "d1d74038f99946bebdf846b9f8447087",
      "Id": "1e3a0e861a1e47689625cbe964fc8e5d",
      "IsHidden": "False"
    },
    {
      "Start": "c50a7d6a482040799ec30c690ae09d38",
      "End": "b529ad2f1c3f4a869c28a1e20403f765",
      "Id": "bae14f0d64a4465dbde047b86a2a2e15",
      "IsHidden": "False"
    },
    {
      "Start": "c1013b4c37164975a6f6de0b2ef8c525",
      "End": "53f0de4723064720a0f6c68cc640005b",
      "Id": "350568ba05bb496da9cc24b6b283a8da",
      "IsHidden": "False"
    },
    {
      "Start": "32e28a6d9ba242bfa4663c4c4697a19c",
      "End": "8e861f96943b4279924d01693e93c349",
      "Id": "3ac31615656a400bb2df6b4ee4de9edf",
      "IsHidden": "False"
    },
    {
      "Start": "71e727db30e24dd7937d73021c757c29",
      "End": "f7874f276e8747bfac3af0e2c7448d1a",
      "Id": "a53b27211b2d409593e59e4010a1b406",
      "IsHidden": "False"
    },
    {
      "Start": "71e727db30e24dd7937d73021c757c29",
      "End": "381560b60ca3422e962c5436f509dcd3",
      "Id": "6906ad9b99594027ad8e51211eb305e1",
      "IsHidden": "False"
    },
    {
      "Start": "71e727db30e24dd7937d73021c757c29",
      "End": "fd2c52d3306c414aa6d0b8e650309f60",
      "Id": "6e8a58215c034f2d8737a422d9e20bcf",
      "IsHidden": "False"
    },
    {
      "Start": "71e727db30e24dd7937d73021c757c29",
      "End": "dcdc8eb553f2421b94d472eaab07019a",
      "Id": "09e649f20ab845d9878fd1694499b091",
      "IsHidden": "False"
    },
    {
      "Start": "71e727db30e24dd7937d73021c757c29",
      "End": "dfb36b68d29d42a7b81a904b531068a8",
      "Id": "67641a367a0148f69ce478bebece6ca5",
      "IsHidden": "False"
    },
    {
      "Start": "33eda53176964ee6abda6c2aa8b6657a",
      "End": "b0a34c18ce394295a949c0774a387fed",
      "Id": "73b2dc7bc75c4ced84e0718d1a0840cd",
      "IsHidden": "False"
    },
    {
      "Start": "33eda53176964ee6abda6c2aa8b6657a",
      "End": "4df6d44ff2894a919632e9ea13d7c78e",
      "Id": "dffa503552854235976c333ed63c301b",
      "IsHidden": "False"
    },
    {
      "Start": "54b4a3e39fc742e3b7fe09a9fc29ffbd",
      "End": "9f9b4c6a22d043bc8ccc0f8f5148f677",
      "Id": "d3a67909677d4a67a30ace00f5c42176",
      "IsHidden": "False"
    },
    {
      "Start": "4d18a99bb81742a6a43c6cf15fb42b43",
      "End": "7e8fdff0e621460dae995fa8f2cadfc5",
      "Id": "e086705ea74d4f969c4fbe9daca3ee0e",
      "IsHidden": "False"
    },
    {
      "Start": "99dee7bb9e364e0f8fabe3fb0bc6c723",
      "End": "1676258b12c24130a754beece8afea07",
      "Id": "0c998ffe77d4452caee09523c3a7bc80",
      "IsHidden": "False"
    },
    {
      "Start": "99dee7bb9e364e0f8fabe3fb0bc6c723",
      "End": "ef7e2e3368b6444d81b86c539dbdda45",
      "Id": "dbab30a40bcc4604b1810c0049f619dc",
      "IsHidden": "False"
    },
    {
      "Start": "80c85077d2644fe5826e53bdd7ff95ea",
      "End": "ced48a58e50845bf9a011f72134c25ba",
      "Id": "0687f12a53cf427aba5f73407b82d1e3",
      "IsHidden": "False"
    },
    {
      "Start": "80c85077d2644fe5826e53bdd7ff95ea",
      "End": "1e401b0b5bda49f4a3276358f8faf3f5",
      "Id": "6b0dccdf59934371bf483de53307ceef",
      "IsHidden": "False"
    },
    {
      "Start": "84a6cdc7b3cc4d5089731dd52afe94bd",
      "End": "02b2ec25918c45fbba7677e38c662a1a",
      "Id": "7625ac33ed8c44f09ffa3caeba1bf9a8",
      "IsHidden": "False"
    },
    {
      "Start": "84a6cdc7b3cc4d5089731dd52afe94bd",
      "End": "ca2fde3c0a6a4971be16ecf04f93e336",
      "Id": "4974bbc03d1b488eaa86b7f3f3bccadc",
      "IsHidden": "False"
    },
    {
      "Start": "ca06ca87d56d436f8f5b869249eae0d0",
      "End": "c9f37cbe8609479fbfd31271952c9d79",
      "Id": "c52a21fecb6741daaa4ff7561fb92b6b",
      "IsHidden": "False"
    },
    {
      "Start": "0c7ed2bd937f456ca030813413b54bab",
      "End": "1eb2b51d247240cf8f4b8855b6aa2dc6",
      "Id": "c62ce15e1f724e0ca88a57a90746bde8",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "02_Master-Check.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "100500e5e8ca4c4f8074d092046414ff",
        "636651ca158d43f7a5f22b1311c67c41"
      ]
    },
    {
      "Name": "SS_3556_(3556) Concept_11-18-2024.rvt",
      "ReferenceType": "External",
      "Nodes": [
        "b03b5de533ad46d1946cfb01737f875c"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.4.10216",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3a938488321347ab831291ade1c35e17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4155.9560595714929,
        "Y": 9122.5106488510537
      },
      {
        "Name": "Get Legends",
        "ShowGeometry": true,
        "Id": "9ad778fd162047ed81d4b937a126e37c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4811.9560595714929,
        "Y": 9180.9610656774967
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "501b048d7d0d418093f6588230ae56b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7374.488621607562,
        "Y": 3988.4597049425561
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "27d6a102833e4387957fb35a6cacf317",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6967.2201360715326,
        "Y": 3545.2242182873056
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "19e77731cca74c5e95d753a61069d435",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7668.488621607562,
        "Y": 3716.4597049425561
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "63394fe975de4bd190db141f8a040e51",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7374.488621607562,
        "Y": 3693.4597049425561
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "47ecfcee36264a11a3fdb28b4233eb9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7374.488621607562,
        "Y": 3546.4597049425561
      },
      {
        "Name": "FileSystem.CombinePath",
        "ShowGeometry": true,
        "Id": "70b12d9fb1834b9a89e5ed18da39e796",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6610.2201360715326,
        "Y": 3636.2242182873056
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "aeb5f99f742d430394e4b475037bd9b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6610.2201360715326,
        "Y": 3488.0517182873059
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "2780564aeb9042b09cdece32b67d4aa1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6058.2301528320995,
        "Y": 3902.6923240233259
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ed6e5ffec7b14ea882d70db0a0accc3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5782.2301528320995,
        "Y": 3845.5198240233262
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "f299887cf765427ba274a6960e077353",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5782.2301528320995,
        "Y": 3993.6923240233259
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "7f629a6390f74c5285a9c992ec3b6c75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5401.2301528320995,
        "Y": 3993.6923240233259
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "50840014c7a24cc8905bbb65bfccfa35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5147.2301528320995,
        "Y": 4027.5198240233262
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "100500e5e8ca4c4f8074d092046414ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4828.6331043544678,
        "Y": 3850.0732797205414
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "732105eb9883459391d8ca2874a4a82f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5382.3482295568747,
        "Y": 3607.2301535488664
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b0310d183dcb4618864cee7982fc7783",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5128.3482295568747,
        "Y": 3463.2301535488664
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "3495deabb3564e158d4e4df9aad94c10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5763.3482295568747,
        "Y": 3501.4026535488665
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "c21f21ce35564f9c8d9e7940504655c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5382.3482295568747,
        "Y": 3429.4026535488665
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "680cca8619d44faeaee0da439d6b7eac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6058.3482295568747,
        "Y": 3410.4026535488665
      },
      {
        "Name": "Document.FilePath",
        "ShowGeometry": true,
        "Id": "b03b5de533ad46d1946cfb01737f875c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4467.4355195787166,
        "Y": 3362.1364532200505
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2f837339110c4581999d12f7398f367f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5763.3482295568747,
        "Y": 3353.2301535488664
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "e2490c25dbe547c5a580ce6d2157e0bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4548.6331043544678,
        "Y": 3850.0732797205414
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "636651ca158d43f7a5f22b1311c67c41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4153.6331043544678,
        "Y": 3850.0732797205414
      },
      {
        "Name": "Document.Current",
        "ShowGeometry": true,
        "Id": "047a847b2d9445a08d05744b2e545025",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4158.4355195787166,
        "Y": 3362.1364532200505
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "895a19fa868b492ebfc5ec6ac6ebfd70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4151.41129544323,
        "Y": 4214.6470657241753
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b241039a8e81427eb505a24044e6ca15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4154.1848276775117,
        "Y": 4875.1244419791719
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "34a3988ce124471f951c49e595d7bc53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4161.71181118036,
        "Y": 6034.9599009592621
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cc1ff340404c4c0da8366fd1cbc0d741",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4166.81674175107,
        "Y": 8173.6016547618356
      },
      {
        "Name": "WINE / LIQUOR LF",
        "ShowGeometry": true,
        "Id": "b3a40c8b8b95415aa97e7c0e38806cc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4179.3591582189974,
        "Y": 8589.3563562924355
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3439b7cae04146519c968d2a03532a01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4173.9390375068378,
        "Y": 8436.1140224777882
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8783637cb75b4225804feecbec433590",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4173.9390375068378,
        "Y": 8741.2847841240582
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e8a5bcfd88254296abda623fa10b7087",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4166.81674175107,
        "Y": 7871.0002207271318
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3f0262d8bdb14c2c8cfe40a685b20d4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4166.81674175107,
        "Y": 8020.7180200504054
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0b90f619fc0f4292b3205be94b6c7a71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4166.81674175107,
        "Y": 7720.2537831123309
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9f8a12cfa0114077b58d919ddee0c3ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4161.71181118036,
        "Y": 5730.9417852325851
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c66f92da073741d985d9adc48625e8d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4154.1848276775117,
        "Y": 5475.8258505016665
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d461cb57a48c4fb2aa2830708fa87b7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4154.1848276775117,
        "Y": 5024.0497941097956
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f9b7a517877f40c39a94e6897ef1b640",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4154.1848276775117,
        "Y": 5177.9751462404192
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d619319848c64235a3f11c9bbb3d0865",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4154.1848276775117,
        "Y": 5326.9004983710429
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "902790c34aa24395a0bc7a3f243e6e87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4159.73451565676,
        "Y": 6485.5957957128676
      },
      {
        "Name": "Process Sub-Headers from Excel",
        "ShowGeometry": true,
        "Id": "e5f5d610811f4f8daf532fe9f38b697c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10363.034786419181,
        "Y": 4863.1479481701481
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "f52a7c506bf94bb0b3198b293812443d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7374.488621607562,
        "Y": 3841.4597049425561
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "f1b0c997360a429f9c0f48b05e14bb45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8006.488621607562,
        "Y": 3823.4597049425561
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "da8611b65c15444eb024fd36ecaf2a2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7668.488621607562,
        "Y": 3964.2872049425564
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3fccb7f831494c59b042d71d2d597245",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4156.4604527054362,
        "Y": 4465.4048261575126
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "df0b91556a024b58b543ba738ea5578e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4169.4440470660547,
        "Y": 7156.885229410429
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ebaef8739585496087b116efe2fed28c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4161.71181118036,
        "Y": 6186.6293591410031
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8bcef8e73f1b456baf6c604c919bae02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4169.4440470660547,
        "Y": 7007.0464744995033
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "dc2784132eb4462e86eccc8cc7e068ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4159.73451565676,
        "Y": 6629.1328489101415
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "717a4e86a03c4d81b05b7b5fcb7a3616",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4159.73451565676,
        "Y": 6776.5783129788115
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "883006e357c54bc3a6b34ee8063554b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4154.1848276775117,
        "Y": 4726.1990898485483
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "63eef6bce06249bab070daf9c5e1c1e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5076.956059571492,
        "Y": 9236.6831488510543
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9b2bec3bc0b8468095e67b9fe3b09468",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4813.34317050688,
        "Y": 9327.5106488510537
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "cff63f31ecad4de8970fd63fd90cbc12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4551.9560595714929,
        "Y": 9179.6831488510543
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "36b81f8d5f02460a9add55e4ad167f5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4155.9560595714929,
        "Y": 9270.5106488510537
      },
      {
        "Name": "Extract TextNotes",
        "ShowGeometry": true,
        "Id": "9c8b7d7a2c0249fa8a2f379b7e24e57c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6525.6989970092964,
        "Y": 8978.94059833491
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "2774f83e8cfe47e7bc34bb0f99b628e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5399.956059571492,
        "Y": 9308.6831488510543
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2b56c0d1b49040ba8aab4e5454a41a06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5076.956059571492,
        "Y": 9414.5106488510537
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "14710cda3d564534a6bbe21de117a8ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4161.71181118036,
        "Y": 5887.1778103620472
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "8be972aeebe74b75a17d9e3d23101fcf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7540.8145363275207,
        "Y": 6082.4439298818006
      },
      {
        "Name": "Arrange into Columns and Rows",
        "ShowGeometry": true,
        "Id": "83f4fc82b3a54e2089e05ebc85cdb693",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7616.6720012122205,
        "Y": 8489.2917235425411
      },
      {
        "Name": "Return Sub-Headers",
        "ShowGeometry": true,
        "Id": "397989174bf8498e83219dc02b317346",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10302.2778476673,
        "Y": 7398.1806808393485
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2af2a074483643e086fd82e0f793ad33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10048.2778476673,
        "Y": 7466.0081808393479
      },
      {
        "Name": "WINE / LIQUOR LF",
        "ShowGeometry": true,
        "Id": "a6c101e74ce74a6198b96d18b57ecb6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4169.4440470660547,
        "Y": 7308.6569755175187
      },
      {
        "Name": "WINE / LIQUOR SLF",
        "ShowGeometry": true,
        "Id": "2695052f8eb642f1a775acd591ee5fba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4169.4440470660547,
        "Y": 7459.4867243392564
      },
      {
        "Name": "Update Revit from Excel",
        "ShowGeometry": true,
        "Id": "fd5daf8948144cd5bec4fb9cd79175ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13971.059206211752,
        "Y": 5699.4353502887479
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "399f2c27ebf643ebb2a0b0128d3ab363",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14440.69541503964,
        "Y": 5604.743395151314
      },
      {
        "Name": "Resturcture List Sub-Headers",
        "ShowGeometry": true,
        "Id": "67ec1d72e64b407b95189de847ecee6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10738.93659167258,
        "Y": 7394.8443515440622
      },
      {
        "Name": "Excel Output",
        "ShowGeometry": true,
        "Id": "311816cdea3f47d2a20c8552a5761eec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13014.179243759309,
        "Y": 4522.2587008972869
      },
      {
        "Name": "Revit Output",
        "ShowGeometry": true,
        "Id": "dbea18cb57284c3fb5d3d3aa6f868145",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13006.792013638909,
        "Y": 7236.374582989657
      },
      {
        "Name": "Excel at Index 4 of Index 0",
        "ShowGeometry": true,
        "Id": "d6f84968d5154459a46c9f0773f76094",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13530.359353068812,
        "Y": 5001.1375827505444
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "3415e299b6b244e9aa960337f4b077d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13456.670914013439,
        "Y": 7706.8972702912761
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "603404822ab84756b913fb74c5482737",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12810.670914013439,
        "Y": 7549.8972702912761
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "593ca96a43b940daa9dcd27a4122fcfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13207.359353068812,
        "Y": 5001.1375827505444
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "1d4a88d1cc3548b2954d963c3a3f0fe7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13133.670914013439,
        "Y": 7706.8972702912761
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "32ba3bd8e94744128713596588bfccf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12884.359353068812,
        "Y": 4844.1375827505444
      },
      {
        "Name": "Excel at Index 0",
        "ShowGeometry": true,
        "Id": "fa6ec1355fba4a39ba77c7199c015b0a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13530.359353068812,
        "Y": 4687.1375827505444
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "da233bb24426449baf339e6164c019d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13456.670914013439,
        "Y": 7392.8972702912761
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1633694d392845428ea5187ee58ba459",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11645.124306721467,
        "Y": 6059.7746118533478
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "89362d19c2db4fa682b6657123d536e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11645.124306721467,
        "Y": 6205.9559127358816
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "3cbf2c90f3ad4a0ca388a4820ddd70bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14435.936919533933,
        "Y": 5911.3620316668121
      },
      {
        "Name": "Update Revit from Excel",
        "ShowGeometry": true,
        "Id": "06ef5a937fb64d31b1f0d2f57c10850a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13972.794680997667,
        "Y": 5987.0030624713518
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "f41f45e6ff7f42179c861d93a534eb54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14427.20928951978,
        "Y": 6217.7342500780214
      },
      {
        "Name": "Update Revit from Excel",
        "ShowGeometry": true,
        "Id": "ca87af2e1e924dd784a1defc01e90f38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13977.277251428935,
        "Y": 6264.9224292099152
      }
    ],
    "Annotations": [
      {
        "Id": "7230ae94d16d43d6b8a52d6f709bc9e8",
        "Title": "Read from Takeoff Excel",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "19e77731cca74c5e95d753a61069d435",
          "63394fe975de4bd190db141f8a040e51",
          "47ecfcee36264a11a3fdb28b4233eb9b",
          "501b048d7d0d418093f6588230ae56b1",
          "f52a7c506bf94bb0b3198b293812443d",
          "da8611b65c15444eb024fd36ecaf2a2f",
          "f1b0c997360a429f9c0f48b05e14bb45"
        ],
        "HasNestedGroups": false,
        "Left": 7364.488621607562,
        "Top": 3473.4597049425561,
        "Width": 846.99999999999909,
        "Height": 646.99999999999955,
        "FontSize": 36.0,
        "InitialTop": 3546.4597049425561,
        "InitialHeight": 587.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "28dbc2222ea04121b1d7386a4eb52288",
        "Title": "Combine Into the Current Project Path and Template Name for Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "70b12d9fb1834b9a89e5ed18da39e796",
          "27d6a102833e4387957fb35a6cacf317",
          "aeb5f99f742d430394e4b475037bd9b2"
        ],
        "HasNestedGroups": false,
        "Left": 6600.2201360715326,
        "Top": 3372.0517182873059,
        "Width": 644.0,
        "Height": 426.17249999999967,
        "FontSize": 36.0,
        "InitialTop": 3488.0517182873059,
        "InitialHeight": 293.17249999999967,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "7d4725821b59437c93252ffd8cecfa22",
        "Title": "Return the File Name of the Master Check Template",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2780564aeb9042b09cdece32b67d4aa1",
          "ed6e5ffec7b14ea882d70db0a0accc3d",
          "f299887cf765427ba274a6960e077353",
          "7f629a6390f74c5285a9c992ec3b6c75",
          "50840014c7a24cc8905bbb65bfccfa35"
        ],
        "HasNestedGroups": false,
        "Left": 5137.2301528320995,
        "Top": 3772.5198240233262,
        "Width": 1198.0,
        "Height": 386.99999999999955,
        "FontSize": 36.0,
        "InitialTop": 3845.5198240233262,
        "InitialHeight": 326.99999999999955,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "58b327b5c53b4df8ad2b9bc6a442747d",
        "Title": "Master Check Template Location",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "100500e5e8ca4c4f8074d092046414ff",
          "e2490c25dbe547c5a580ce6d2157e0bc",
          "636651ca158d43f7a5f22b1311c67c41"
        ],
        "HasNestedGroups": false,
        "Left": 4143.6331043544678,
        "Top": 3777.0732797205414,
        "Width": 906.0,
        "Height": 214.0,
        "FontSize": 36.0,
        "InitialTop": 3850.0732797205414,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "7b46ceafd23c4267ac2af8735557a9be",
        "Title": "Return the Folder of the Current Project",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "732105eb9883459391d8ca2874a4a82f",
          "b0310d183dcb4618864cee7982fc7783",
          "3495deabb3564e158d4e4df9aad94c10",
          "c21f21ce35564f9c8d9e7940504655c6",
          "680cca8619d44faeaee0da439d6b7eac",
          "2f837339110c4581999d12f7398f367f"
        ],
        "HasNestedGroups": false,
        "Left": 5118.3482295568747,
        "Top": 3280.2301535488664,
        "Width": 1217.0,
        "Height": 459.0,
        "FontSize": 36.0,
        "InitialTop": 3353.2301535488664,
        "InitialHeight": 399.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "5840d1783f294c0d8490694264a35fe1",
        "Title": "Current Project",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b03b5de533ad46d1946cfb01737f875c",
          "047a847b2d9445a08d05744b2e545025"
        ],
        "HasNestedGroups": false,
        "Left": 4148.4355195787166,
        "Top": 3289.1364532200505,
        "Width": 553.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "InitialTop": 3362.1364532200505,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "0cc87fc402aa48f0bb0d3ed5c08492b2",
        "Title": "SHELVING",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3439b7cae04146519c968d2a03532a01",
          "8783637cb75b4225804feecbec433590",
          "b3a40c8b8b95415aa97e7c0e38806cc2"
        ],
        "HasNestedGroups": false,
        "Left": 4163.9390375068378,
        "Top": 8363.1140224777882,
        "Width": 321.42012071215959,
        "Height": 510.17076164626997,
        "FontSize": 36.0,
        "InitialTop": 8436.1140224777882,
        "InitialHeight": 450.17076164626997,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0ca9780a5cf74f1ca87b66a71374ea85",
        "Title": "FROZEN FOOD",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cc1ff340404c4c0da8366fd1cbc0d741",
          "e8a5bcfd88254296abda623fa10b7087",
          "3f0262d8bdb14c2c8cfe40a685b20d4a",
          "0b90f619fc0f4292b3205be94b6c7a71"
        ],
        "HasNestedGroups": false,
        "Left": 4156.81674175107,
        "Top": 7647.2537831123309,
        "Width": 401.0,
        "Height": 658.34787164950376,
        "FontSize": 36.0,
        "InitialTop": 7720.2537831123309,
        "InitialHeight": 598.34787164950376,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7cea8a0c707e411288e330589edc77bc",
        "Title": "TAB",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "df0b91556a024b58b543ba738ea5578e",
          "8bcef8e73f1b456baf6c604c919bae02",
          "a6c101e74ce74a6198b96d18b57ecb6d",
          "2695052f8eb642f1a775acd591ee5fba"
        ],
        "HasNestedGroups": false,
        "Left": 4159.4440470660547,
        "Top": 6934.0464744995033,
        "Width": 316.0,
        "Height": 657.440249839753,
        "FontSize": 36.0,
        "InitialTop": 7007.0464744995033,
        "InitialHeight": 597.440249839753,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cefcce596b9b4d84851dc5db32748895",
        "Title": "SEAFOOD & MEAT",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "902790c34aa24395a0bc7a3f243e6e87",
          "dc2784132eb4462e86eccc8cc7e068ea",
          "717a4e86a03c4d81b05b7b5fcb7a3616"
        ],
        "HasNestedGroups": false,
        "Left": 4149.73451565676,
        "Top": 6360.5957957128676,
        "Width": 245.0,
        "Height": 547.9825172659439,
        "FontSize": 36.0,
        "InitialTop": 6485.5957957128676,
        "InitialHeight": 435.9825172659439,
        "TextblockHeight": 115.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4119c770a956443d8ebfdca43a97d446",
        "Title": "DAIRY & MEAT / DELI",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "34a3988ce124471f951c49e595d7bc53",
          "9f8a12cfa0114077b58d919ddee0c3ce",
          "ebaef8739585496087b116efe2fed28c",
          "14710cda3d564534a6bbe21de117a8ab"
        ],
        "HasNestedGroups": false,
        "Left": 4151.71181118036,
        "Top": 5657.9417852325851,
        "Width": 401.0,
        "Height": 660.687573908418,
        "FontSize": 36.0,
        "InitialTop": 5730.9417852325851,
        "InitialHeight": 600.687573908418,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b7f3576b6d4443c4ba07feef8982717b",
        "Title": "SERVICE DELI",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b241039a8e81427eb505a24044e6ca15",
          "c66f92da073741d985d9adc48625e8d6",
          "d461cb57a48c4fb2aa2830708fa87b7f",
          "f9b7a517877f40c39a94e6897ef1b640",
          "d619319848c64235a3f11c9bbb3d0865",
          "883006e357c54bc3a6b34ee8063554b5"
        ],
        "HasNestedGroups": false,
        "Left": 4144.1848276775117,
        "Top": 4653.1990898485483,
        "Width": 300.0,
        "Height": 954.62676065311825,
        "FontSize": 36.0,
        "InitialTop": 4726.1990898485483,
        "InitialHeight": 894.62676065311825,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e75bc08115584640ad448f569478488e",
        "Title": "BEVERAGE",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3fccb7f831494c59b042d71d2d597245"
        ],
        "HasNestedGroups": false,
        "Left": 4146.4604527054362,
        "Top": 4392.4048261575126,
        "Width": 339.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "InitialTop": 4465.4048261575126,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "24b353d5a2f344a9afb7d6cd0851f920",
        "Title": "PRODUCE",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "895a19fa868b492ebfc5ec6ac6ebfd70"
        ],
        "HasNestedGroups": false,
        "Left": 4141.41129544323,
        "Top": 4132.6470657241753,
        "Width": 269.0,
        "Height": 214.0,
        "FontSize": 36.0,
        "InitialTop": 4214.6470657241753,
        "InitialHeight": 145.0,
        "TextblockHeight": 72.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5112e4a815534f2fb59e33f5cf11c1c0",
        "Title": "Extract Revit Legend",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a938488321347ab831291ade1c35e17",
          "9ad778fd162047ed81d4b937a126e37c",
          "63eef6bce06249bab070daf9c5e1c1e0",
          "9b2bec3bc0b8468095e67b9fe3b09468",
          "cff63f31ecad4de8970fd63fd90cbc12",
          "36b81f8d5f02460a9add55e4ad167f5a",
          "2774f83e8cfe47e7bc34bb0f99b628e2",
          "2b56c0d1b49040ba8aab4e5454a41a06"
        ],
        "HasNestedGroups": false,
        "Left": 4145.9560595714929,
        "Top": 9049.5106488510537,
        "Width": 1486.9999999999991,
        "Height": 497.0,
        "FontSize": 36.0,
        "InitialTop": 9122.5106488510537,
        "InitialHeight": 437.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "0a71eb0c6cdc4f7096803bfa1b4adeab",
        "Title": "Extract Textnotes",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9c8b7d7a2c0249fa8a2f379b7e24e57c"
        ],
        "HasNestedGroups": false,
        "Left": 6515.6989970092964,
        "Top": 8853.94059833491,
        "Width": 225.0,
        "Height": 257.0,
        "FontSize": 36.0,
        "InitialTop": 8978.94059833491,
        "InitialHeight": 145.0,
        "TextblockHeight": 115.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "d2668b601ed3430eba6c1c67969e287e",
        "Title": "Detect Relationship of Textnotes",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "83f4fc82b3a54e2089e05ebc85cdb693"
        ],
        "HasNestedGroups": false,
        "Left": 7606.6720012122205,
        "Top": 8373.2917235425411,
        "Width": 332.0,
        "Height": 248.0,
        "FontSize": 36.0,
        "InitialTop": 8489.2917235425411,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "7184b43a4ace4df6b0611b3c1da57d27",
        "Title": "Search for Sub-Header and Return Data",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "397989174bf8498e83219dc02b317346",
          "2af2a074483643e086fd82e0f793ad33"
        ],
        "HasNestedGroups": false,
        "Left": 10038.2778476673,
        "Top": 7281.7806808393489,
        "Width": 500.0,
        "Height": 316.22749999999905,
        "FontSize": 36.0,
        "InitialTop": 7398.1806808393485,
        "InitialHeight": 212.82749999999942,
        "TextblockHeight": 106.4,
        "Background": "#FFFFC999"
      },
      {
        "Id": "9a26128e98e4448786a2921c88e6038b",
        "Title": "Process Sub-Headers",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e5f5d610811f4f8daf532fe9f38b697c"
        ],
        "HasNestedGroups": false,
        "Left": 10353.034786419181,
        "Top": 4747.1479481701481,
        "Width": 336.0,
        "Height": 278.0,
        "FontSize": 36.0,
        "InitialTop": 4863.1479481701481,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "cc170219e00c43d699d666169e5ca53c",
        "Title": "Restructure List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "67ec1d72e64b407b95189de847ecee6c"
        ],
        "HasNestedGroups": false,
        "Left": 10728.93659167258,
        "Top": 7321.8443515440622,
        "Width": 314.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "InitialTop": 7394.8443515440622,
        "InitialHeight": 229.82750000000033,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "307f9e24475c427980dfa70a083dd8f0",
        "Title": "Combine Lists",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fd5daf8948144cd5bec4fb9cd79175ef"
        ],
        "HasNestedGroups": false,
        "Left": 13961.059206211752,
        "Top": 5617.4353502887479,
        "Width": 272.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 5699.4353502887479,
        "InitialHeight": 192.0,
        "TextblockHeight": 72.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "c3818ae30a3c4af097578992a40bb208",
        "Title": "Debugging Revit",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "603404822ab84756b913fb74c5482737",
          "1d4a88d1cc3548b2954d963c3a3f0fe7",
          "dbea18cb57284c3fb5d3d3aa6f868145",
          "3415e299b6b244e9aa960337f4b077d0",
          "da233bb24426449baf339e6164c019d0"
        ],
        "HasNestedGroups": false,
        "Left": 12800.670914013439,
        "Top": 7163.374582989657,
        "Width": 943.0,
        "Height": 841.522687301619,
        "FontSize": 36.0,
        "InitialTop": 7236.374582989657,
        "InitialHeight": 577.85972656438116,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "5e08dfd68025428aa05bb8c27ab88d10",
        "Title": "Debugging Excel",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "593ca96a43b940daa9dcd27a4122fcfc",
          "32ba3bd8e94744128713596588bfccf2",
          "311816cdea3f47d2a20c8552a5761eec",
          "d6f84968d5154459a46c9f0773f76094",
          "fa6ec1355fba4a39ba77c7199c015b0a"
        ],
        "HasNestedGroups": false,
        "Left": 12874.359353068812,
        "Top": 4449.2587008972869,
        "Width": 943.0,
        "Height": 849.87888185325755,
        "FontSize": 36.0,
        "InitialTop": 4522.2587008972869,
        "InitialHeight": 363.21836056147822,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "187e305c28694f40a4e9190173a3d724",
        "Title": "Debugging Input",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1633694d392845428ea5187ee58ba459",
          "89362d19c2db4fa682b6657123d536e0"
        ],
        "HasNestedGroups": false,
        "Left": 11635.124306721467,
        "Top": 5934.7746118533478,
        "Width": 198.3,
        "Height": 403.18130088253383,
        "FontSize": 36.0,
        "InitialTop": 6059.7746118533478,
        "InitialHeight": 264.0186912365516,
        "TextblockHeight": 115.0,
        "Background": "#FF848484"
      },
      {
        "Id": "3f47f5eb19404671bda679d2bec6c79f",
        "Title": "Combine Lists",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "06ef5a937fb64d31b1f0d2f57c10850a"
        ],
        "HasNestedGroups": false,
        "Left": 13962.794680997667,
        "Top": 5905.0030624713518,
        "Width": 272.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 5987.0030624713518,
        "InitialHeight": 192.0,
        "TextblockHeight": 72.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2fdc074f9fbd442191e7316b62837fc7",
        "Title": "Combine Lists",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ca87af2e1e924dd784a1defc01e90f38"
        ],
        "HasNestedGroups": false,
        "Left": 13967.277251428935,
        "Top": 6182.9224292099152,
        "Width": 272.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 6264.9224292099152,
        "InitialHeight": 192.0,
        "TextblockHeight": 72.0,
        "Background": "#FFFFAA45"
      }
    ],
    "X": -1733.0968317086058,
    "Y": -352.67928109140985,
    "Zoom": 0.21234133952492099
  }
}