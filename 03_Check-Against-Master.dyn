{
  "Uuid": "835f952c-e6fa-4cfc-8ced-085e223da08a",
  "IsCustomNode": false,
  "Description": "",
  "Name": "03_Check-Against-Master",
  "ElementResolver": {
    "ResolutionMap": {
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "c83a620722a4441b8ebbc32962017ae5",
      "Inputs": [
        {
          "Id": "3d140fdf75aa4e47ba0d892e01103e34",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "244bfe86b8964a2ead9c85003d9c16d0",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9471814d39a1449cbef4ca13b9d065a5",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4cd5bfc3f1964cd99b3c5211b91ca812",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccd4af2956914564909e3800cc763303",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "RevitExtraction",
      "Id": "00503feecdf5480d84c9e19d4d661e16",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3a8de51812c4468c8e77223deda65d2c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "36fd2947d51b4b8694aeca9038c7d050",
      "Inputs": [
        {
          "Id": "b89ce2f8db1e4c6f82ebc9af4390e7b5",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3ea5e98a90f44f2b00d59379ce46e6e",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "8b284b7cc2cf4ca39f6b0158808c575d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "06f6ef19d70b4adab1a43c178ecc064c",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "43109bd6f3cc40f7ab4e8d91da4cd261",
      "Inputs": [
        {
          "Id": "ede476da64fc47c09c49645cdbaaec4a",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4062ecefeb0a45b183c3f8e4ff619806",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5a80c21bcb24cb694416ece2421b7a7",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3dbc0d0f44e64fd195629c8d53dc48f3",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3fde9a9af8624c21afe8fd1d7a516a29",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Master",
      "Id": "2bf374943bc14b28b13148f80856e8f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "535cde4f5bd04f9db39e055e7ad2b3a8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "431c59b2e6a2412d8bd05fa2b2a4eb5e",
      "Inputs": [
        {
          "Id": "50af0042662042b095448af07a307227",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c7e74e34f01425789e98fc8cdbdb925",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "07d799f978374e1b811303d74c276e71",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "89af2826becc417a99eea46c2a8e88dc",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\_Albertsons\\x17 (Lineal Footage Analysis)\\Oracle Revit Cutsheets-11-13-24 TCS Release.xlsx",
      "InputValue": "..\\Oracle Revit Cutsheets-11-13-24 TCS Release.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "1b03e36244c74115a7e1798071ac4b3d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8b703081e2674d0aa9553a397f6373cd",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "cb2f7d0889ed49a880100f280c3667b6",
      "Inputs": [
        {
          "Id": "107d168db4ad4f1b991cb9dfc0ddd1af",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7d0a24504404e5b9c959f1c00227016",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23030948daf64001a5b3927311ba446a",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Supplier",
      "Id": "b0febaeff4f84a56977d159125fc61c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "425b280e0f1f41279c7e7dcd6789ff37",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "0c9e07653e7e4a5c9a8886f6a6a3c319",
      "Inputs": [
        {
          "Id": "2f82dcd0c0b149909ab2838dbc9e22ab",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41a72a517a834593b57ea64fdb463b66",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "fc9a6d528daa4b9181b143ebba15ea35",
      "Inputs": [
        {
          "Id": "c62740cdd1614714b36dd8614544e842",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8d3cb818218429ab206b5ad51cdb92f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cffabd1f178b487fb35fc672474dbcc0",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "ff2893e4b12944e1b6405074da397459",
      "Inputs": [
        {
          "Id": "927eb979cc214942a03056e3e776ff68",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33af2ba4047d48c7b87d4e5ca972ba52",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "c8cdc6b01f734b2eacbff584bb58c532",
      "Inputs": [
        {
          "Id": "09898174326f4dd7b4483cf3e022fcb3",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "694dfcc237cc4a8283ab8883f7cd309c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bde2235630d548988c55fde75ec32eec",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Supplier Item",
      "Id": "bae9b50a61d14b7f9f34489ca815ab20",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ea46b6b900eb4b74a2c0c291e607c15a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "4b0588f9b3214a429bc0b3582988f601",
      "Inputs": [
        {
          "Id": "476a460aa5cd415fb38219e582e99503",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7642741e9adc49fb9df086422f860d7c",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b297e762148c430cb41971b2cb34388c",
      "Inputs": [
        {
          "Id": "a251c0ddc0e043f4aee29bfe4e5433df",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdea8e7af8364a8bb98be9610e23924d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3df7f28283ab457e873587cbaac57ff8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "6ca00edc234b4a49ba996bfb0c7e366a",
      "Inputs": [
        {
          "Id": "e181ef2813714f7fa5c5b9ef682bb8e6",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb374e9187ec44619e66bd9a890ae3aa",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "4f6b81ac97214019b00d2a70706eae54",
      "Inputs": [
        {
          "Id": "358f522c501847eca65e892cd4118585",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5cd2220e51547b08ff31003648a1262",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21d7880f6be24a529ef1f3f00fd10bb1",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4447ec8b4d7443a8a1c838ca2718497f",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa5efbd1a9f14612abdd07eed363ba71",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f10f32831c3441eb8dd4eadff510a79",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "331abdb279c74a73b815693379b869b6",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4dd18997a994e028eaa5d8d449732d5",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "faeda1d3bde84ef8933e980a7f614cdc",
      "Inputs": [
        {
          "Id": "106375acbb5e41d88ee1c53dad634b91",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d73ce692e0e24a939bda92661eb5a175",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc68ece7dcac49069d37db8abee5f454",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[R] ACI_Supplier Item",
      "Id": "4a9d132ceba7418ca4027198364c735f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "23e194b153b549d28161d6a7b91cf0a2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "4e46d316dd7b4278b1c46ef189da1953",
      "Inputs": [
        {
          "Id": "7a6628c9c4a94f90ae4287579a81deff",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01704a3d10b54f56b4347ab08c75bc63",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "193b380afb2d430795b182870e121c2d",
      "Inputs": [
        {
          "Id": "9228cdb7c04148b4b481ddce2e822f9a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a76d455b12842a0bfec2c3b83aecb48",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee2c75a8e25042a1b0c1205316e4cfd3",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "35c4a3e7d3ba46968cd72d6d09b859e6",
      "Inputs": [
        {
          "Id": "1762642bc3ad47f18e9970543ae7abb3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "995f4fcd23f64ee89423e22debca5f17",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39688b137bf345df8ebf1a288f56e68c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "722172f0dc364336a6b869fcdff5c1ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "24e616f0dfc74f2da8966ef170d62bcc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.IO.FileSystem.CombinePath@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "86f299c70d0b415c995ce8520704f004",
      "Inputs": [
        {
          "Id": "f335486603ed4fbb94d19b5fe8bc1468",
          "Name": "string0",
          "Description": "Strings to combine into a path\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd4d3c2e7f8d43d7aeb2681e949c385a",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78aa56fe38f744b6adf20679f6bf71a1",
          "Name": "string",
          "Description": "Combined file path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Combines multiple strings into a single file path.\n\nFileSystem.CombinePath (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.IO.FileSystem.CombinePath@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "288deaded19d4632b8ba4d7d637eec5a",
      "Inputs": [
        {
          "Id": "2bc0bf38e490474a95501e0f6f600f9a",
          "Name": "string0",
          "Description": "Strings to combine into a path\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99c9821bb4754959bb114430d2b38175",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2e3c196898a46b8a3bb43345aa99c22",
          "Name": "string",
          "Description": "Combined file path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Combines multiple strings into a single file path.\n\nFileSystem.CombinePath (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "deccb51e884c4526acdcd5171943f5b0",
      "Inputs": [
        {
          "Id": "7ce8134fedb54e45b5b4bd2898c24e4c",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "176a44b6f861444b82513cf28087f807",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75c8b2315f4b403f9f6aaca22de8b51f",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "13b662583bdb4365b562618db9f2f471",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bdd41377dc0040148adb4ef89d610e1a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "7d63151ba96c48d79fe13493f24a8fdf",
      "Inputs": [
        {
          "Id": "8c652a025374476697b3091e9d56b55f",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "301e94787d564b28a8714d8b4cdccd9e",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1b8767767a84e61b669078db1ca679e",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "80cd8a6237d64d97bbde8e23fc3ee5bb",
      "Inputs": [
        {
          "Id": "570e0f6665a74df5976b6230e7282407",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4db6401e5b5c423a995204f3e37896ab",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af52899fc8404237a12db7232c27bf9c",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "515c788bd0584a23a7503c8749e9ac82",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "18152270c4ef40f395ba1f8acf550c7a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "4f37f8de0911479bba9af352d0607640",
      "Inputs": [
        {
          "Id": "5e871446f346421592c7083e391ac411",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0578ae8de15746c3b1a98b13bc1194ac",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "0416656eebe04936a5763991d428d80a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca5886093565440cba987157c1febe40",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "72f8ad7df41a41849298fb6adcc7fb68",
      "Inputs": [
        {
          "Id": "ba4ffafba9a843c69b53654720a61096",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f25b9ec5db446408b1181fd90cb1270",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "0544ad3309b34cb39c71746b876a5b24",
      "Inputs": [
        {
          "Id": "3882e6dafe964055a156640de9c7d888",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14a0da71baed4a9894439530170dfb1f",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77ea12265449405691cd156e8155bd06",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "17176bd118424a65ad5a9d5ca7505d14",
      "Inputs": [
        {
          "Id": "77c3d3e952cc45bb8744fd4396e5feab",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06d85d22635d4daf8b2817e04fc17710",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca12aace064844ed8ac8582b4b4e4573",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "fb89fd8ed5b343cfae10d99705b3c8cf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7abfb420f660462e82877310e3fda9bd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "7cbcf700fd794ae8bdb85dd59182cf10",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ea492ebb569441eae03726a3a6b7aa7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fd392dff5012431c90165aa68785cfd3",
      "Inputs": [
        {
          "Id": "8168baa565d24f9ab18e32a64e7dd3d5",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb30c0ebde96480c949d18b9b69adcf0",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5a56339a5cb045a6bcdcbac466abf32f",
      "Inputs": [
        {
          "Id": "819d90d8376347bdb6ea3b884f6808be",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90f65212d0d5424fa9f325220c2e2aad",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;",
      "Id": "3fd7c3ca85ac467dbd791d97e27f044f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2a85abd353594029a5c7d0836c1d947f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "01b4261811ec43509d87976d9944e4eb",
      "Inputs": [
        {
          "Id": "5be1117c2d5f4a31bb102497552a1554",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed31e93a0bd74bd38cf3f6214b880cd2",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c04f0205c3d141678a8848b8aa286035",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "f4209fa478914b15a9ada0103279dec0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e7086a171854f8082de366572cfbcb9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "51574a41c53a4a5daeb82055e02ed2de",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "485d8a51d4ac492cbad24b254b78fd3b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "e5db4745cf334385a212e8e7940384ca",
      "Inputs": [
        {
          "Id": "1b4ef407113a449fba3b61593abb4a03",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1eaf31d764504c1782464b2472794a1f",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f86bea01b6474953a3a711c5e1be6777",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2cd6827ca2fa4024b03b04b63e2f8e89",
      "Inputs": [
        {
          "Id": "2b50bbde803145548e6375f1db4a16a9",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be0c99f8c4934125a9285c6d6d7c2edf",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9102976b23544edd98c03715577eceeb",
      "Inputs": [
        {
          "Id": "65d2e1cb0ebd419c8d7bcb38e495ddd6",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe0e699b7dcf4d50b2932519dda79864",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "bf0df934dc6243529c4906240f950387",
      "Inputs": [
        {
          "Id": "ec82b2f1f2054ae5bfbd68e39a026e66",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ea4e30141df4eb19b1f63d0e2c1efdd",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b959c26338004f6882dea0f86c8fa4c5",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "07409d3ddced4a5b8bbab5892024b457",
      "Inputs": [
        {
          "Id": "c5e2492a30724cda9a39b8eacf610481",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08467458bbb34370b7c47cb90e45909a",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cc83c426dec418cb5e656116a8f7c8d",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Application.Document.FilePath",
      "Id": "aa37b99e3c5f4108bb6ed698587e0f63",
      "Inputs": [
        {
          "Id": "56988e9567ea423096985a682a935754",
          "Name": "document",
          "Description": "Revit.Application.Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6f83239c80445d7955b14e261cb0261",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The full path of the Document.\n\nDocument.FilePath: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Application.Document.Current",
      "Id": "9967b0dd192e49a397dada63c567a1fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df4fc7e27adf4ca2a6d11539235e4cef",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the current document\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\_Albertsons\\x17 (Lineal Footage Analysis)\\Templates\\01_Takeoff.xlsx",
      "InputValue": "Templates\\01_Takeoff.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "a34ff539235a4fc39e44b6adfb71da93",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ea042da9190548e8bc766e08a8e3b80f",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\_Albertsons\\x17 (Lineal Footage Analysis)\\Templates\\02_Master-Check.xlsx",
      "InputValue": "Templates\\02_Master-Check.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "6fca8112a30740ffae499b20c814a330",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8642fc3961274f0ebc5c001d7cb6aab2",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\\\\";",
      "Id": "572062e5a6614e2c8a5e2f932c409dbd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28b127cdc2c1493cae3adc5d0e0261e2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "cba6e3e607d34d91ad28e20187c2077b",
      "Inputs": [
        {
          "Id": "9ef22ae9638841cb89f397f458e3cef4",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72ed558e0d3444a7a8b6da5f11ea2d3c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b8c04e32c32474f93ae3489ba96f22a",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] Supplier Item",
      "Id": "dbdec53626fa4aacab8e54831755377a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5fa4979070d74358b673d371e262dded",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "50623d63e1bd493c94c9096afaa4df7d",
      "Inputs": [
        {
          "Id": "66e5d5715db24fa4890ef410b6918ba0",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a4b2f83b5c545bead21eb93b2a84d7c",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "fdd35952d77c4a0ba6c1fbb5817f2a89",
      "Inputs": [
        {
          "Id": "2959ac81f6624f7a90c19aed094313eb",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "844f6929398e4f0e825eecd5d5ef98cc",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "090fa7d8ded44831b9f47daa12e26ff5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "fce24a62a8694eeea9465256158f44b5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "06132b609d2f4607a83da2b09d65bec7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "3519382bf1264f55a6c6c0522bc084ee",
      "Inputs": [
        {
          "Id": "77f4aa89127648219d29e048a461096e",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cad32a49f16a41e6b156e4dc59546301",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "a9914841cbe74350b8ec569880a96b32",
      "Inputs": [
        {
          "Id": "accd6c5d094e4221a8349254b8d33289",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed85babe648448989b0b6fba6a805e92",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f46a4f56f5741e7960dfe81e289c599",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "8bb64df80e1e49f8bc6ddbc40a7ef9e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "328f1487b81743fbadad1b96ed62a065",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "ba76576921be4a7d82e11d6443504819",
      "Inputs": [
        {
          "Id": "a09c16b7913845959ca36c7a748e153b",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ea7d201d0014469addaaa35f388b7e7",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76cfa1a3c18d49b4af279ce340aeeadf",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "0e6f61d10ee340c3ad83f21d3d4acb9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2c0fbc6b0e54a719104976a44ef1650",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "973de549ce8e4092a71f7c26da7690af",
      "Inputs": [
        {
          "Id": "464b4feeaad54d2bb1dcfc1b48709b18",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "301df390587d46a2aa600dbba4a7f8a5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b91cd701311d491494af7e8a4d9459b3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "d7a1ecefc4a14b008bb124ffe80522fa",
      "Inputs": [
        {
          "Id": "9e6f77636feb46e095e38670d588b78e",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8f344244ea3432bba8ab48b9b168640",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75534b6257ce4d6eb5615dda6cf1492e",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33adf4f346574ec99181b37445e996eb",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f28df3019ea45faa45be8cdb2e01bcb",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8824ad2b272c4f7cb3ac39058c4c30cf",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19ac547e46014627b0ea87490b37cea7",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09b6cf85a39d42749ec96a4be7eaa2b4",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "c7f1bf1223924eb1b50897c2a855c772",
      "Inputs": [
        {
          "Id": "1c1c834963334e82862e809b9e19963d",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1867ade787314012be4c01e9d0760114",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd1942b6501c4ebba217a2980200e121",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] Supplier",
      "Id": "7a5cba97897c41e585bcfac73222e8e1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cb6423159673415c98d46921847000af",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "8e37bdcd23cb4d2fb0cd62f440a49f2e",
      "Inputs": [
        {
          "Id": "97dfa14f9a3e4bcc939437b77495d6a0",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d08466d2fad94e709c63d4455c4e6582",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "037b1bc8d03d4106b6aeb6e4a240ed2a",
      "Inputs": [
        {
          "Id": "83e9d72dac1a49ea8563821f03395b49",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "367037abe8294aeab85c60ee8d5f5a43",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21464554963948deb503b0c01249b067",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "f8b27c23450c4356a3709676942e33ba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07a35b52e2db4c169fc4442833333e6e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "8ead71d7afab455fa604f4c59184edbc",
      "Inputs": [
        {
          "Id": "ea4547320f6244b2a7aebb22920ff7f7",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f007337bbac5488d90a34422d30e43b0",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f407005cab346e482332745379b74d0",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Description",
      "Id": "1a218e05062c4296b8c00bb2c855b34c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6bbb314b7add4b8aa6a47dd3aada1876",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "8cf0eef811814af0901a1b6d9acea891",
      "Inputs": [
        {
          "Id": "e029898cba304d619879757dc923148b",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f5dc6bd821046b0bd3b9e67bae853b1",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "df4d1c9f2dd2406a96b3cb0a256cfae6",
      "Inputs": [
        {
          "Id": "f17c1116ef1741d4bfb4af1940e7ac20",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d165a85b27b9436b8530d184394d1a44",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47a3cf4a39734457a42ffed57522a433",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "8614feb5c40c4d19857d4c21866016df",
      "Inputs": [
        {
          "Id": "129e958177de47fbb67a9ddd7e6eee06",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0f2f6422dc34fa293b206efdbf20fa5",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "be641e7e4fb246d4941d906aa623e7ed",
      "Inputs": [
        {
          "Id": "5eb4f4f25ab242b897c4ee9add985a97",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8b656f317ea49d6b79877050a6b209a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "594fa06b8a54432eaa77a5e6bcb855ae",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "ab6bd76be8c544279b3f52d82afee6a6",
      "Inputs": [
        {
          "Id": "530900ab1a4a4f12854649608c843929",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d223d8c8c1394674b513852abc864c7e",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15de9ac401824a25b880861d2db3dd37",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] Description",
      "Id": "1234f289b60b4a3bbd5fc0a0c97fb7c4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5f54912a9a344b79a993133cee33151",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "db858128063f4258801c399365405623",
      "Inputs": [
        {
          "Id": "64ed29fd28bf4a3ca596285943fbf3ce",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20355bd27b144c41adc09a9e306e9f83",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "db6786c9c4ac4766bfa5b84b93dc731a",
      "Inputs": [
        {
          "Id": "79f121e12afa42278cae1d21c890ab09",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52e5cb5c6f1a4a71a6855cecad6eb94a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27f7db82484846c2bd147f9d21b5ae77",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "cdc7914dc4c9409bafd377747412c928",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4fdc86c168dc4fa785a4ddd947fecc61",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "4253e7776c3f4ddea66bb142a981a7fd",
      "Inputs": [
        {
          "Id": "adb488acd19748c985b9080be903831e",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42cfebc598864512a2adfd40000c8c94",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d103292e11244998813d456f5faaf3c3",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ddf2856b5db4c9abf0c209d1aac62f1",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b8667738b0649259050d292aca69361",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11270f1cda9045cb847a6943596e5fce",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3326c021a8ed409e822fe9667259d232",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfd562c71bc2459a9222b3de28144338",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "f717fdf83d8c4c959da07cb9bd8fed65",
      "Inputs": [
        {
          "Id": "12462b3d130645919987cdef52dc9c4d",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e8cbddec0634cb4b4c4baf39151fb14",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "431f85b0bf224f2c8fddd660a5915a5e",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] Revit EQ Category",
      "Id": "eea13bf88fa24e448399c858fc24f703",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b771470f38f44b1ac3820b1282ac243",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "99ed0ff74b404735b63d2185c0fb3b9c",
      "Inputs": [
        {
          "Id": "21c9fe35f46d4a15a42bbd1e41125dc1",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0896ba833e844ef7a78cfcfb8251a5c7",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "2e94ce389c9d436a8d4ec534afb31233",
      "Inputs": [
        {
          "Id": "52528a5c0438451a9c22fd04a3232666",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "913a7f32d64b462984c48f866235ad61",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccb9cf833d714c96b221e4de11cbe29a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "5a2f769e454e4413b699d74774fc84f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "deaafe1d6e2841d9ad0f5e634db76006",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "9549a61ff7c84fd8b37b05665646cc02",
      "Inputs": [
        {
          "Id": "0cc25d288d844bfa920e85277d09dd52",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "622c0f889d6b4da59887fcc42ee2166d",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee8ffd81153e4920bbb08e983b10f260",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Revit EQ Category",
      "Id": "678722a87c0344c2bb49405870f4dd7f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "941a570f5f2e43698269dfd6b496dce7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "f5f911f40a9149e6aa7b532583c1a5c4",
      "Inputs": [
        {
          "Id": "54c42b5cb86e4ea5b63fa303cf08f3d5",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2492971545ec48ebbd14de11b0ac8631",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "525ff4f6217c4c5ba2983f187a3cae02",
      "Inputs": [
        {
          "Id": "caea9c00d6d34e8a90081464a02e71d6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2879e44aec24e6e8275c7bd92c1ee77",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bde76c24a41485f9c00bf5d8c96b691",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "7dcc1c32ed084acf9c3d35adde95626d",
      "Inputs": [
        {
          "Id": "bbe54403953c4fb5a4526a7d011b2250",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37b6d3fa38244ec8b9bc4894e98f477e",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "55b87485aa3c497ea10023b4a523836b",
      "Inputs": [
        {
          "Id": "c9da3eb755dc4b89a137babaad2f1bc6",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "077ba4939b3c4bc08e7049a2b1ca6998",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea6fcb5f934e438da9dcde10fae6dbd0",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f868ff9fb914fa8b35e6511b49f50d4",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cde855758f4940759ffc0eba7c51e7eb",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e9e9e5dda394a3eaf206bf36c3b0e25",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef20034d5b0249c4b704e1cd5f204484",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37dd6bd278424bcabda49a9e58322032",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "853aca11963d46d79016fc8dbf299935",
      "Inputs": [
        {
          "Id": "3cb17408d1294f7c8f8bdeddc82b7cb3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9dddb0f3cdb84e67b6f53c4a01e9dcea",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ee21e0628b8456dbf6f6b12985537ac",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "dad8b8587abb47eaa4cbf1fc3876cd79",
      "Inputs": [
        {
          "Id": "b070f53a993d4404af52d014441a9cc4",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed5464538dfa424eb272b960d2b7cc97",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a9cb1da3f894d43bb4d5f99f1b2880b",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Revit EQ Tag",
      "Id": "e86011f8790e473086ccf273637e48c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0936102b0c6447f6b3b10a2a695b6d43",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "8a3d2f5994544fa7a90b769e9cf00849",
      "Inputs": [
        {
          "Id": "dc067228f065433386fb2c6d2a7e8e06",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b71248f7d4a44af81b997ad1c8c5784",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d9016619441947c38eb8e91548168cbd",
      "Inputs": [
        {
          "Id": "3521498104cf4d4b94a3bc2846327b57",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30b8383799974476830497bad5b749d1",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "974e2c1994f741deb99a582386dbd579",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "a1ffb60638e94bd5a0059f45d6ba325f",
      "Inputs": [
        {
          "Id": "d18fba0ef8a94898bde7c6d12c9ad302",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ad8d5c8ae42432bb8781a250859449f",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "d762a3b1ed41420f942f40af5885efe9",
      "Inputs": [
        {
          "Id": "2d6694d957684f87a9e9cac03d4ff6b9",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f9491fe65434fac9c585d19e851d7e2",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c1a4250379441329cf1599666202f94",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] Revit EQ Tag",
      "Id": "f49ce34d8e614da2857acfa7322ff43e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "657ed06c7b8b40588fb80f8f1302907f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "2cc78092fe504868971e0f27cb830ea4",
      "Inputs": [
        {
          "Id": "ee09f57e207b492bb63a44bf01660048",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d56a898dc471498fb478267e1be048a7",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "bfe36a37951c46669c90a8fabde75873",
      "Inputs": [
        {
          "Id": "4f466d656e7c43e2ae6bbff14c2ee92b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5df4ab988e2042768b00afd7d765cab6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af7cbcce72e8434bb886cdd315342838",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "bb405b90a7c7491eaa65d8f234b3a073",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91210302e16847eab7a0526b327febdc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "bc044b13b0744c1785b0fdcb3df6b470",
      "Inputs": [
        {
          "Id": "f84f1ce0c4dc4c81bb268960c18585c2",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7ad8388efa64dd19515c86f5a77ce47",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a0e49cae510499d818e8a669d9d14fb",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "648fa879798d45fd99f0fcc0fd0f34f3",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcfd493d041e4aca81ee1475957ef716",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53c1107f354545d6ac3294ef84e363a7",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3372a60434204ff984e2754477c37767",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a0beae02d4e49eca978c7531ef65439",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "04de610af6c249e2bd45217fc4b59f5c",
      "Inputs": [
        {
          "Id": "44fcad86ee4b4501afe19b72ae68750d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "660ee9eff9c848c6b481fddbc665ca5e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2bf76b01b9d24c95980649b234b7647e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "66f64303227242548e9bc8e26a967f79",
      "Inputs": [
        {
          "Id": "d0b2d0405dac4a9a9c5ed777eeac9d09",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91d95b9d608743519c33f8620c81a3e6",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "379ef193a8de4f2a8f82d6f688bc2cd7",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6caa1d3c588b48d9b885ec90bae4016b",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9dc694c2e90e4ffcb8f5104d78d152c6",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d32f71df8624db6b2bc5f6f84f63e4a",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb97ee70fd0245c1bb26814db324ec27",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69e0abd558f24cc5870010ceb649a14e",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"RevitExtraction\";",
      "Id": "89d946cec41d4cef8d51f0e15e9e97a3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "438c5f91de99434c9820502f1f6ad481",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "655cd147b6e74a8eb9056c07a7a88a11",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ba90e2c084ff4889b3a2e76e25fa44a9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "0c4cdd50fa184904a86493ef41d88760",
      "Inputs": [
        {
          "Id": "31b12756167d4259a409e50c5d0c6fd6",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0adbb13263b46a891787377057a9451",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8083e515df024aa99a12489730739929",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] Attachment URL",
      "Id": "2d8b08c17fae46d581e71756bd0ae2ea",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "67687313a1724b8e97e50f3edb1afd49",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "be7289fb580a4aef9e08f016086fe262",
      "Inputs": [
        {
          "Id": "eca4a53c93cc4b4f82c8a305c5eb7d4a",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8dc8d9ba0e743b2b0227fb40cc2931c",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c9329e2efccd435ea58ec52bb233452a",
      "Inputs": [
        {
          "Id": "fea81ce838a94525b1ca1388de983d4c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "36952d512a6841df847c1ddfabdaaa53",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "096957a335b6414eb41a1650364f4c64",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "b07535624b304a9d977bf5103de9a72f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c6971f66f094bdeac9c3f67e81c3889",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "d4f372b6ace645c3add0558472554143",
      "Inputs": [
        {
          "Id": "8b11ec51e986450db3b0845e2631aa76",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b42a29372357447b969ae37c358237a6",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fef1d2aa51ac4632a574919c2c224d01",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Attachment URL",
      "Id": "6efd984eceae4cfc9a5c53939c524ed3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "87da597e25624b99808882f8d056d9c8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "f9f7c49cb2b44041908dd6da6c31a078",
      "Inputs": [
        {
          "Id": "11377d7b571e4274be2e13045c2928a9",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74fbebe9555f4cf6800199c440a86498",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9633d2a43cb844db8c280e9b7027a11d",
      "Inputs": [
        {
          "Id": "a9ac5ac532ea4b948bf7260eae23a046",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da4be8d121944d29aee66ad790c1b975",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bbf382fed424a4dbbaa60e487864661",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "aa30fe593d644ba8a21eecdaa32c3708",
      "Inputs": [
        {
          "Id": "ec23b914852f494ab6bbcd106c005a6d",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "968a6dc728d24be39834ad548b6da639",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "87b61a99552a472ab31af39b31afc0d6",
      "Inputs": [
        {
          "Id": "b7a63ffe6a454ae7bbfa45b16969006d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3edc13aa3f744416827274166a432300",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b31314d675245ce9261d98ed3b5808a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "65f97bd90fc84413a9073417b152ee52",
      "Inputs": [
        {
          "Id": "058ad19d32214445bd422fd7c6a150c8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6305152de3fc4b4ab481280781aa5343",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78586aaee1474ac4aec13451c89c7bfc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "309521b8ae7647d98283ab9647a10cb8",
      "Inputs": [
        {
          "Id": "38b0044833ad4efeaab2ab185f4ffd60",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb3dbbecdbf3471c8eca2894937b6b31",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d1f435e6495468d8011773e25c110d5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "68ab4720e339450cbf459f2443c07b25",
      "Inputs": [
        {
          "Id": "25d430ebe9844361b6aecd296ff10260",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0cd603598bc4d0c8d787d0e490778ce",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dea3405c6a3f433a97c2685856eb5ef8",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "158a6533afee45bb82ffb4be82e43caa",
      "Inputs": [
        {
          "Id": "2213a11239bd457585b1fc5f4dc83682",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3594a2f99acd48a4a9b9b4f0cb528fd2",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "78fef0d35686440cbd3f0d9f1ea79de8",
      "Inputs": [
        {
          "Id": "c838072c273942e787a00f7170abdbc5",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2163dc91b7be4544b7a23fc247088cc8",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "CA: Department",
      "Id": "b7c8bc404241475f91908983df63a541",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "56474a77b8814ab7bc3e8076bc192d18",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "512b04951ee04631966d626c5e0a5c85",
      "Inputs": [
        {
          "Id": "a30617d0e9e544418745877c694236b6",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "344b66f4c3c846bebbb62cebe5f0e290",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0f4652db2a14ffb99b454c1144cf0cb",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0968e0e98e045678ec4287ef988b9e4",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "993071ca267a4f599aac4657289be8bd",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53fd3fbafaca4630890197d6fea98681",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "209af2beb19e41baa33ab9beb2b3403c",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abc01193cea2494aaa3699efea9a92e8",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] CA: Department",
      "Id": "63fb40e78a104f7ab9c54132a0bfe66a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4e14cdbc5fd8456c994799e1751af9b2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "48bd29da1569465284ad48ffc6121729",
      "Inputs": [
        {
          "Id": "52cd9c1e7ba04bfcb77188ab808956d4",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab69ae58dfa04df0a623464fce7309f0",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e6adc738382489393183a03dbb04c79",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "b97e1ac2f3c34563b2f9c84dcd20458d",
      "Inputs": [
        {
          "Id": "e9f3194e0d2f47cda67d029555356a64",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d93b0c2a6ac4bcfa6cb5419e8a912f9",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9240e7e7b277452caeb8b557bcdfcd8e",
      "Inputs": [
        {
          "Id": "b6162ef3e3c34fac8673d0b451538b05",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f876147e6134ec7b885523c56b6105d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fea013196f14de59956a6ebcbbd1849",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "8b266ccd01204145b5cf6b0278944b5a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c8f48b070b3a45e7bced0272262ef67f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "5ff45027f59b4fa7ae9cada5dd06038e",
      "Inputs": [
        {
          "Id": "16bb832cfc784695851c09232f1c4546",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "093821c5c73b4f9e9f3b03bbc2bdaf0c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "593fa7329e6844bcbafc7b27bed5b082",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "60ec868aaa89468bb8fe900251b4b7e9",
      "Inputs": [
        {
          "Id": "c42fd61cbcad41d1969d2d527715834b",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8baafbf83414c51a54e822f4f3fb051",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "034f41891df347c5ba45b587cc770e68",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e675e2225aab4a229024b4d4194e5429",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d5ec6e4babe447d85722254da7529ae",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a4bf3dd24dd45149f8e33767468f353",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78a1f8d5a8084c02a41036b119fe9a99",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41d6137aab27455e9dc2811970fba341",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d5e48da9bc734223980604cb8696af00",
      "Inputs": [
        {
          "Id": "cab1ec2138d5479b996628c84326ba6c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a8dd46b9f174f53922996eafaef5257",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91cacb7c77bd43f2ba2a0bfd3f1d521f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "4ea7c8a3978746daa899ca2df59bf1ac",
      "Inputs": [
        {
          "Id": "14fdc9513a32402884f7acee31b5d6ea",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88fee51dc91448368760ac326059141d",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e7444450421428e9ef43dcbe135bbba",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "93a3baedc6d547f39f970efac8f5f296",
      "Inputs": [
        {
          "Id": "96b96a713f10476fbf41d83495810380",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0b0cc2ad3564b46afe51c84f4e3db74",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "CA: TYPE",
      "Id": "6c1c82c4ab8c46509dc2d14471b514c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b206b55d6d846df87cee400e131f852",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "76a5ff19045e470791ec7437fe7e9a9f",
      "Inputs": [
        {
          "Id": "3e0275c10fa74af4bed41602de8a92f2",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99bea8e310a8434198587aeb5ad1e8cb",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "df8c5804ca624bc880c28f359911e2cf",
      "Inputs": [
        {
          "Id": "9a492991e2ba4e8e95642bf5b1b3e5dd",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98208ce7099c4c40a24626dc4f214215",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e00c6b5f5fea45808034c320ddd7d3f8",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] CA: Type",
      "Id": "8507e033605547f4869f2ec646bb6dbf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66f05ef7709343beb38aa0098616e10f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1a40f94dbefb497582b2ccedf328c40b",
      "Inputs": [
        {
          "Id": "27f76b355c374ea79d39545d04aade6b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7d9d3dca2034678b452552830058444",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76d46dbe2dbc40d49214ae83b228c965",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9836bc253293439aa233f41980eb3369",
      "Inputs": [
        {
          "Id": "fdc47f6098b24ef78e218c774c456015",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a0df01904c74fe9a93ce2e9666753ac",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "8d5ef2cefdde46e6a6b8efc34b07a775",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d5cefdc0814340ac81a9d75fc9b0444a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "2ab8844c4da34c17b80c617113cf343c",
      "Inputs": [
        {
          "Id": "7628e0f579e14583a608ac2035e210cc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2217307cd7c548818fda1786bc6634a1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8519f7119b3496489fa04613e0fae03",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "247eb40c20684daaabee9d14976c4b19",
      "Inputs": [
        {
          "Id": "99587a4dacad4bdf81c6685f7308127c",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a75f3f817304c09bc07ae475be1f78f",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "233afff8ba784102a1e2b299c9f4ee58",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbc3e045129142cbaf8b0e7f1b89285c",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9cb27541be59470ea49b5828502a2f39",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66c8bbc991594fd3a707ae72239618e6",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "661ca5d1eef64f7197821fcd1373268b",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de54b4cf654e47d59a35aca78241aaca",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d9b27dd29b0c4c33b2350ce44d9f6b14",
      "Inputs": [
        {
          "Id": "fa32a2fc968e47f4b0dc140c11e06ddb",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ecbc532b3d9482a93b042804818da6b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0bb0e7c1f16446c88f71c8fe84b30fd",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "a0aee2a6b64640ff986a696d59bb4217",
      "Inputs": [
        {
          "Id": "518c8c4ce0394e5398ba514aaa3fee91",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c92b7cb6a36e497da44985daa7fdd700",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fb9748274304baba1bc8b7e76849798",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "1f77d74129e54112bc6de2ef199064cd",
      "Inputs": [
        {
          "Id": "3a30df6e7b5c4556a357cb1b7ec618c3",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05f93a10951747da9991d7ebd08e6ab1",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "CA: LF",
      "Id": "da9de1052f8b4be0a8e7315cb87c4ddf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c7e4591806104ebba0f5c3d24f89f292",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "5a7bd2a1732a440daafc9e8a36b6c465",
      "Inputs": [
        {
          "Id": "fa7a0f855f7840e3858672efd7085829",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c54bad90363842a5aa9ffe48e2203058",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "2dfc1cfcfadb45c5993e33dc5f715857",
      "Inputs": [
        {
          "Id": "0527decd9eb64ffb91b660836a40a2a5",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6804b69be1e84d72aa5d7b98a0c3c69b",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c801efaec5374f3ca8d5607a88221da5",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] LF",
      "Id": "3fde08b476fc4f909e59fa19ed1be613",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f754a4a0aa77422096a0392abf4eaeb3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "a7dce11432b44bac8b3e0ddff2b082fc",
      "Inputs": [
        {
          "Id": "7014507496b24cf9913cf120b5dc8289",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fa6a7664ab044b0a36e926b4956e507",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "49f851e5d9074e6d8f8dbaa1c6c65611",
      "Inputs": [
        {
          "Id": "6e1573e5303740888c2628b404b89670",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4a7037603bb492e9113f38d8dc23787",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21b04e8899324222b22fe6d5e8285d8d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "db26e6b026004f07a6c5743e4e6dae26",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2a28a2d452fd4e4c92ee616bdda9e1cb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1a513cb8806d4f44a9f44eea2e835308",
      "Inputs": [
        {
          "Id": "fad37fe256a446a383e100127d305407",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae8008041a084594b706b123f36879b8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d0f548a771d4029991700ef9c6b487d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "bf15e2414cfe4a66b72972d5a80866d8",
      "Inputs": [
        {
          "Id": "2b47361538ec4116aa7f4f568077814c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9759258c491241859c790977ead35fe1",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c690b99a488a4b299a21f60ff7f10970",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "0de3b26912ee4d3aa0d836237c43c34b",
      "Inputs": [
        {
          "Id": "488dd98b6b27418ab73a456484a14023",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0618d07a8ac4d60a95cb99376174098",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0db82a0dcb9a429f930ee6b7093084a3",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "19c402a5947b47618be416bf9644b0e3",
      "Inputs": [
        {
          "Id": "cb58139e2b5b4ca5b63ca808ead91c1a",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de781613dfc54bc094ced65d0b974d5f",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "7074d33ea2aa458e9bfc4606b6e370e6",
      "Inputs": [
        {
          "Id": "e5ae2126f6d241639e32344c3427a044",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2b6bee54ff5407db508d70a63028ae2",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45bf6e02e42247069ede2adb919d5572",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6aafc4ae92fc4fd2bfd3cfff2d19a8ba",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d5ef4fb0594548628876398a4b699b21",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d767696f38244f4836dff7f58b3818e",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecaf682810b94de5b3fc9ca33237d90f",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69c0669a0f2946aabac8492dc583d370",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "CA: Count",
      "Id": "b19018f281714a6d84d92b18e21ddce6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee403e09449e4ff895eced69ebd21f04",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dc78e93d45d74e0587e7bbbabac74e78",
      "Inputs": [
        {
          "Id": "1c6c9b4ee1c4468f9c4c69e50d9ce00d",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4836564d09b24d2898ae025da7640060",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "18115abf99e54d8aad0e186bf794a425",
      "Inputs": [
        {
          "Id": "a953d3de40bf402eb6492116b3691846",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7665e3b47c74443d9205e74aa7118543",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "200ce610c258449ea8d8b7d9da91f239",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] CNT",
      "Id": "0953309c24c844e992ede30b044b6421",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f862d300317d476a9cbf0133ac3f14ff",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "5ebd3e366e504464b907ae0f65c3cbd2",
      "Inputs": [
        {
          "Id": "10e2e038715e441ca0ea08d41f538f31",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6689afdb7d347f9be21e4b8509c11cd",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b29ab75e2d244ff18e23853a98c986c1",
      "Inputs": [
        {
          "Id": "b58bcce142e3412f893f0f649b59ce72",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08ad5d6891074ee59c0295a93e999f0c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3f14cef492a47c0bdbfe8b6fd0a03eb",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "0e61db4d97bd420e8dccc8ca0d051cf2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a75a224cf1174323aa32041183bc2596",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input Data\r\nList1 = IN[0]  # List1 (the original list of Supplier Items)\r\nIndices = IN[1]  # Indices from the first Python script (matching indices)\r\n\r\n# Initialize an empty result list\r\noutputList = []\r\n\r\n# Iterate through Indices and place the corresponding Supplier Item from List1 into the correct position\r\nfor index in Indices:\r\n    if index is not None and 0 <= index < len(List1):\r\n        # If the index is valid, place the Supplier Item from List1 in the corresponding position\r\n        outputList.append(List1[index])\r\n    else:\r\n        # If there's no match (index is None), append None to keep index structure\r\n        outputList.append(None)\r\n\r\n# Output the updated list with Supplier Items placed at the correct indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "505811443093402bbce1a453f2687c77",
      "Inputs": [
        {
          "Id": "1156534774894dde9340cf479601b219",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f94d28e9c9db4d738d27144eaef21935",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6fd67f7046541dc9976dfa0dff07e27",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8df63ac7687848bcb4860b8277646824",
      "Inputs": [
        {
          "Id": "74d5c0466df445a58e18d5869eb378f7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d66f25fea6c84e5595862b18f30633f8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "316c7beac4ec4be6997d27414d79cdb4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "e314582d6f7b473bb4f3d2353708cbd2",
      "Inputs": [
        {
          "Id": "2ac58a7ee6b14329b0679ac19000f405",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b67cd3064db044c5855f31ed778603c7",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22527f110b274b2781293a9924f464d6",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "3b498171d6ed4500822dfc7da23ac55d",
      "Inputs": [
        {
          "Id": "3e1e8361912d453f8052e34e4755ac6a",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65d1987decc3422fa06af8fb1d848ab5",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "199a0c944a7b43aeb5eae1518da4d61b",
      "Inputs": [
        {
          "Id": "d8cefc7338d74643bb2eacbb52d67127",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d87e5d88946849bdbb21530696b5233e",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d617e719e5a4bfaaaecc2881b4ac739",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aba57b004f844b609383ae0a4c33094f",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1583c27b8f34e38a431e1bbf4feded0",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fda0f0c3f214a3ca1ae025796e5324d",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a8306dc6cde46bb8c396538424802b4",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1962fbdc9fb4190865e9baa501fd788",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "CA: LSF",
      "Id": "69e74b97c2a9424086f28b5c30a5066b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "37044fc34c0244088140bddc30f19fe4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "7d4e4f92779345ba9ea4a22d6c746a0e",
      "Inputs": [
        {
          "Id": "f57a403ee3ed434b825b4cab3a1da52a",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a7b5e073c4e4579b48547ade53a0b40",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "d3177e004b5a4425a1ca3753453f294d",
      "Inputs": [
        {
          "Id": "6ff708dbeed04f8a9d2913aa397ba1aa",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "520c96f7faf645cfa505919cf2f88c27",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cccd1cd373764f55ac98a1f36800d405",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[O] LSF",
      "Id": "24045bd3ca5841b29799d1765368a4b4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e145e18fb6d3405baba91f25bba78347",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "f389084cd5e34f1c8776094b3a356ab0",
      "Inputs": [
        {
          "Id": "fcd87b896cb947a89291cd92dcb73f79",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccadd1a6c09c40ae8df17faa787c37d8",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "513f08ffdf0847f5a1bec07066d184bb",
      "Inputs": [
        {
          "Id": "6e1edc430c464369b183d7e1119ee79f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0002e420a975404d8a484312eb26f018",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9cea550b9f04bf390f89d2d5ad43461",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "4b909e650ad341e79ac386a5caf9c8ff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d46cf503a2db4fedb449f68421c3787f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "b628bd96494d43eea6c12ae9aa65cdb5",
      "Inputs": [
        {
          "Id": "bf498668202d46d0984f5227df29f8ba",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03c9dca730134eefa56864ad48ec3e1a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "a1a8f9bb641942488e995b31d441a23d",
      "Inputs": [
        {
          "Id": "875b4a5658ba4c23af560fe24039fdb2",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61d579be4fc642c5a684714b137deff6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "4fb8be1b25704af7b7dedfc970b10ff1",
      "Inputs": [
        {
          "Id": "0a03ec8ecd334ebabdedce2bfea020c0",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d336a8f002694b3da0ed9578ff2c0e5c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "7460620704cd4ba582e7675820143f9a",
      "Inputs": [
        {
          "Id": "6afc7d419bb44d389023e0e6e6b97878",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1376d56e63104db9b36a1cc3feead7bd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "ed5c42823c8a4b86b3ec59c203775bb2",
      "Inputs": [
        {
          "Id": "f068e5828d994edc95c5303be9e96c7f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c68e2e5f5a2b44598efc29ffa9bb7879",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "fa9db5dd0c2145539c7966c95d23ebdc",
      "Inputs": [
        {
          "Id": "00ad1ab403624de7a933efcdbdbce5d3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1572f00f271c4b4c9b8312451a318664",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "a777f2953f6342d39c12b886dc486455",
      "Inputs": [
        {
          "Id": "22d62416bb5c46359875e3d65ee5af04",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "679465a45162433fb913e7467c917b57",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "b7b8666a56c64c5893e0ff39808d20bb",
      "Inputs": [
        {
          "Id": "db8e5eae3d164c7a8ba32a10bd944523",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "007f684aad92452eb872adb395e2f7a3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Inputs (maintain original order):\r\nMasterFamilyList = IN[0]  # List1: Master Family List (source for matches)\r\nTakeoffList = IN[1]       # List2: Takeoff List (to find matches in Master Family List)\r\nweight_perfect = IN[2]    # Weight for perfect matches (e.g., 1)\r\nstart_row = IN[3]         # Row number to start searching (0-indexed)\r\n\r\n# Initialize empty output lists\r\nmatched_items = [None] * len(TakeoffList)       # For matched items from MasterFamilyList\r\nmatched_indices = [None] * len(TakeoffList)     # For the indices of the matched items in MasterFamilyList\r\nreordered_items = [None] * len(TakeoffList)     # Reordered matches based on TakeoffList\r\nweights = [0] * len(TakeoffList)                # Weights for each match (perfect match weight or 0)\r\n\r\n# Function to clean a value by removing non-alphanumeric characters (except numbers) and converting to lowercase\r\ndef clean_value(v):\r\n    if v is None:\r\n        return \"\"  # Return empty string if input is None\r\n    if isinstance(v, (int, float)):  # Convert numbers to strings without unnecessary precision\r\n        v = str(int(v)) if float(v).is_integer() else str(v)\r\n    else:\r\n        v = str(v)  # Ensure the input is a string\r\n    v = ''.join(char for char in v if char.isalnum() or char.isdigit())  # Remove non-alphanumeric characters but keep digits\r\n    return v.lower()  # Convert to lowercase for uniformity\r\n\r\n# Iterate through TakeoffList (List2) and check for perfect matches in MasterFamilyList (List1)\r\nfor idx, item2 in enumerate(TakeoffList):\r\n    if item2 is None or item2 == \"\":\r\n        continue  # Skip if item2 is None or empty\r\n    \r\n    clean_item2 = clean_value(item2)\r\n    \r\n    # Iterate through MasterFamilyList (List1) for potential matches, starting at start_row\r\n    for i, item1 in enumerate(MasterFamilyList):\r\n        if i < start_row:\r\n            continue  # Skip rows above the start_row\r\n        if item1 is None or item1 == \"\":\r\n            continue  # Skip if item1 is None or empty\r\n        \r\n        clean_item1 = clean_value(item1)\r\n        \r\n        # Check for a perfect match\r\n        if clean_item1 == clean_item2:\r\n            # If a match is found, update the output lists at the original index of TakeoffList\r\n            matched_items[idx] = MasterFamilyList[i]    # Matched item from MasterFamilyList\r\n            matched_indices[idx] = i                    # Index of the match in MasterFamilyList\r\n            reordered_items[idx] = MasterFamilyList[i]  # Reorder matches based on TakeoffList\r\n            weights[idx] = weight_perfect               # Assign perfect match weight\r\n            break\r\n\r\n# Output tuple with matched items (from MasterFamilyList), matched indices, reordered matches (from MasterFamilyList), and weights\r\nOUT = (matched_items, matched_indices, reordered_items, weights)\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "e70cd237349f4629b0f55a31ccbe63fd",
      "Inputs": [
        {
          "Id": "6756f94bffef47a58eedfd08ca7bfb18",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0506f72125124314901c88cf0df86080",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9ae4fde0ee6463b929f4b575ebd7d1c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d341247020e34a99ac3ccf4c84b061dd",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7313bfafb36f4c8bae03fe5aeb38e100",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e6b47acfa6d046a58f789a4a7be38c35",
      "Inputs": [
        {
          "Id": "633cd65ff4664e67b6708396cea2c551",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b2fd38422bf42fca105b4523c7b0d1a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eaae4605e23f48f9979d7818f60b41b2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "31f31af949c9476aaea5ec500729e673",
      "Inputs": [
        {
          "Id": "e4578c92a2ca44de9be72a19b1c5c372",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a530e3e8689f43c3bb4d3c937a0754ba",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41fab5b6121f4d90b41f24d4f473edc3",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "fdd912a33db0462fb8384cad201163ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f6511c6d8679443684b6ca69b8cf9255",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "90fe975f1ad9466e81837d1b2181b159",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "440f8c15b36b447d94e3981521b8b9a5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f4a7d74c47a549fe9ea80eb41fd02fe4",
      "Inputs": [
        {
          "Id": "2ab37c026b05446e858ff63456620fe3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10c89028a14348e8908f6b68f4658d58",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a40aee3d0d8b4f828cd5f536b19398ec",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "da8f77379727476ab886fb85a497eca0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3f277886395741b5b5c065aa2eda2be9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Inputs:\r\nMasterFamilyList = IN[0]  # List1: Master Family List (source for matches)\r\nTakeoffList = IN[1]       # List2: Takeoff List (to find partial matches in Master Family List)\r\nmin_chars = IN[2]         # Minimum number of consecutive matching characters\r\nweight_partial = IN[3]    # Weight for partial matches (e.g., 1)\r\nheader_row = IN[4]        # Row number of the header in the Excel file (typically 3)\r\n\r\n# Initialize output lists with None to preserve order and length\r\nmatched_items = [None] * len(TakeoffList)       # For matched items found in MasterFamilyList based on criteria from TakeoffList\r\nmatched_criteria_indices = [None] * len(TakeoffList)  # The original indices of the matching criteria from TakeoffList\r\nmatched_criteria_items = [None] * len(TakeoffList)  # The value from TakeoffList used as match criteria\r\nweights = [None] * len(TakeoffList)  # Weights for each match (only assigned if there is a match)\r\n\r\n# Function to clean a string by removing non-alphanumeric characters and spaces, and converting to lowercase\r\ndef clean_string(s):\r\n    s = str(int(s)) if isinstance(s, (int, float)) and s.is_integer() else str(s)  # Convert to string without adding .0 for integers\r\n    s = ''.join(char for char in s if char.isalnum() or char.isspace())\r\n    s = s.lower()  # Convert to lowercase\r\n    return s\r\n\r\n# Iterate through TakeoffList (List2) and check for partial matches in MasterFamilyList (List1)\r\nfor idx2, item2 in enumerate(TakeoffList):\r\n    if idx2 < header_row or not item2:  # Skip header rows and empty values\r\n        continue\r\n    \r\n    found_match = False\r\n    clean_item2 = clean_string(item2)\r\n    \r\n    # Iterate through MasterFamilyList (List1) for potential matches\r\n    for i, item1 in enumerate(MasterFamilyList):\r\n        if i < header_row:  # Skip header rows\r\n            continue\r\n        \r\n        clean_item1 = clean_string(item1)\r\n        \r\n        # Check for a partial match based on the minimum characters (concurrent matching)\r\n        if len(clean_item2) >= min_chars and clean_item2[:min_chars] in clean_item1:\r\n            # If a match is found, update the output lists at the correct index (idx2)\r\n            matched_items[idx2] = str(int(MasterFamilyList[i])) if isinstance(MasterFamilyList[i], (int, float)) and MasterFamilyList[i].is_integer() else str(MasterFamilyList[i])  # Matched item from MasterFamilyList\r\n            matched_criteria_indices[idx2] = idx2  # Keep the original index from TakeoffList\r\n            matched_criteria_items[idx2] = item2  # Append the item from TakeoffList used as match criteria\r\n            weights[idx2] = weight_partial  # Assign partial match weight\r\n            found_match = True\r\n            break\r\n\r\n# Output tuple with matched items (from MasterFamilyList), matched indices, reordered matches (from MasterFamilyList), and weights\r\nOUT = (matched_items, matched_criteria_indices, matched_criteria_items, weights)\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "99ce714eaee242859195637b4a13b993",
      "Inputs": [
        {
          "Id": "b372736ff4884b1cb758355996fa088f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21f55a8c3b9544d3a98a9c570faa60b3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "695dcb8e548742b7891b602b1ebc8f85",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2dea3fe03330494e8088b3c4d05ef6fe",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1498c3c173284e3a9529805d51cba59d",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e61a2a5c3fd1417cbdf26dfa5820d387",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "aada2ea8fff844b09dccc55e258fee7d",
      "Inputs": [
        {
          "Id": "e8fc9632bd054aa0ac4f7bd88ce4aa6d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93db6eed036146668a6082d01c34d483",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d03b27661004853a06305a15dc5cd1b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "02eafdeacc7346708556ab1d772b6b42",
      "Inputs": [
        {
          "Id": "bd7800e782d84dbe8a45fe84a9a618bd",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62af6b83ae024eafb098bce020fa95e9",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce9c85468c9a46cb9a91f94477697e66",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "2decd021f7a54940bee78e90b51e94ba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1367e00902a44f559d3acdd3bfc335a7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "c7d3efc760a640ef83dd87691639c2cc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4f72aa46044e4a9ebe9e3411301c83c8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "835957089f54434381bc20f06c40efc4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "39680683dd4747399843bde396235c2d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "311652d098534f999335abdbfe13e1ad",
      "Inputs": [
        {
          "Id": "d5f30fbdd63d4cac8c628dd054bc1528",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d4a76f66d5c406fb6f20d197c6a379d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd4c973735324be5bfa8f4dfebca45e9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "641b321f6e084f3ba30bf13bb245cd26",
      "Inputs": [
        {
          "Id": "0a3b9c142d7d460b9e65e9bb31eb0dd7",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7c6772a1f0c4619a11726ef47131cef",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "397d226995f2496a8f1e69af58203b4c",
      "Inputs": [
        {
          "Id": "e428e7e8245f4b2487678f589b599011",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f60b9150a13488783cf77e1ea21067c",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f157937768724646a52b5ce731add756",
      "Inputs": [
        {
          "Id": "99e061e1f0c2405791c025c50e2b5f92",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9d01c4e29414677be87398217a9fd54",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "84ea68f1d07348ef9bf906f29268b76b",
      "Inputs": [
        {
          "Id": "4e3520a585f041dfbf62343624d8232d",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0e76f90100b4c0fa8cfbfc7c945655e",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "6;",
      "Id": "59c5eac59663415fbe292067f8e79f07",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "49f4f0a62d7e4aa2b92abd658b775ceb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input: List of items\r\nlist_items = IN[0]\r\n\r\n# Initialize the count to zero\r\nnon_null_count = 0\r\n\r\n# Check if list_items is not None\r\nif list_items is not None:\r\n    # Count the non-null items\r\n    non_null_count = sum(1 for item in list_items if item is not None)\r\n\r\n# Output the count of non-null items\r\nOUT = non_null_count\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "2b5c5d3ff5424aa48d4efebf92ed2b5d",
      "Inputs": [
        {
          "Id": "bbf1635005214ac4b6106fd2257fc06d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87167a2633ca44f68f4f617a431c4fc2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "47ccb92e1b36432d8b22346797e732ff",
      "Inputs": [
        {
          "Id": "0f94c5d44fa746ddb28c8a0424e07b50",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57c2202181cf47258cb7f5b199351771",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input: List of items\r\nlist_items = IN[0]\r\n\r\n# Initialize the count to zero\r\nnon_null_count = 0\r\n\r\n# Check if list_items is not None\r\nif list_items is not None:\r\n    # Count the non-null items\r\n    non_null_count = sum(1 for item in list_items if item is not None)\r\n\r\n# Output the count of non-null items\r\nOUT = non_null_count\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "8d8b3a4bd33b4ca5abd501e0151a0554",
      "Inputs": [
        {
          "Id": "c1f5e074f1f64ea5b1539a1b3570454f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d75713c584442e7a1e01c7407c72c3c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8780bb8e3ad54890a8c2b675ede1b066",
      "Inputs": [
        {
          "Id": "db597c9789e04633b8a0a79a9e06ccb7",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e76687430a348b5ab66e5411d8808bf",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "ef0152edfda04202b9821860e4379e73",
      "Inputs": [
        {
          "Id": "903386e4176945a580133eb643a1eb50",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b4fe3dd95fe4d95bdfdcb567c7b486b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "fc6c784ea1694ca58fedaaa4a02805df",
      "Inputs": [
        {
          "Id": "b3bb5b1d0cf04ea399a1032f7c2248ef",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16cb74ac9ba640f2a9465939ad8d31d8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "df48a14dd3954c2a8ced2ab502741acc",
      "Inputs": [
        {
          "Id": "c83c59ee025c4077b00c602663e054b3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8282d1b6f1174016b88c4f5ecd26a89c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "9431d9bb52df4235af277d64d8ce489c",
      "Inputs": [
        {
          "Id": "f8493f95ff654659af98547babe634b3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb02120d29934f7892534bf4aa6baf73",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "3e082f1e14a148ba854acaa9de5181c4",
      "Inputs": [
        {
          "Id": "8a4947c271414520ba89518b2ed198f7",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbda97260bc0486fbf69b3428a90c6c3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "e113f777892841ceaff65b8037f553b7",
      "Inputs": [
        {
          "Id": "7d0a38fb28924b8ebc4cff599af88507",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a1828c4d45f4b35b710800448a0e897",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input: List of items\r\nlist_items = IN[0]\r\n\r\n# Initialize the count to zero\r\nnon_null_count = 0\r\n\r\n# Check if list_items is not None\r\nif list_items is not None:\r\n    # Count the non-null items\r\n    non_null_count = sum(1 for item in list_items if item is not None)\r\n\r\n# Output the count of non-null items\r\nOUT = non_null_count\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "d9ab1c2e64bc4394830c08276a0aa888",
      "Inputs": [
        {
          "Id": "7817aa0e7ca7446696c241670b915e89",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a15915e768e485c982163f7efeaac3f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6185fa53275e41d3add9a0fd281f10b6",
      "Inputs": [
        {
          "Id": "4e4f11db06d947659064b4733f636cd0",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49e3aa1b612b4dd9a1cf6bfd69fe29c7",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a88f71a2d41f4d6b9bff94388d4c3cba",
      "Inputs": [
        {
          "Id": "768e40cdd8f94c43a2aa2367e072f161",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7715b728561c4f98ad3559e1602d8c58",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "ca46cf8b972c4efaa6c47c47fb217b91",
      "Inputs": [
        {
          "Id": "42dbc3241e2d4a52bb4c8d59489a8bc7",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad784dae2ab8479d9b3608e894c50c76",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "df35d30aa1394161a1ef46c916196c1f",
      "Inputs": [
        {
          "Id": "01d301eef0cc4d0cb4faafc10d241356",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d01fd54523db4b44a58897a3fd0fd112",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "11803228efee4c6f88bc14b312523f20",
      "Inputs": [
        {
          "Id": "6f6f73584b8349099b49cde0c25180c3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee2c670ed8824204966382139831401f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36bb9417145644f98e9ddf049fd875a8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "94ad8ddd02c548cd8a80afa1680efaf8",
      "Inputs": [
        {
          "Id": "13ee344ba39f4f109cea1d662357fe53",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad9837a301d34cc3920f948154778d99",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3edd1d49c32481184b941b589306a3c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Inputs:\r\nMasterFamilyList = IN[0]  # List1: Master Family List (source for matches)\r\nTakeoffList = IN[1]       # List2: Takeoff List (to find partial matches in Master Family List)\r\nmin_chars = IN[2]         # Minimum number of consecutive matching characters\r\nweight_partial = IN[3]    # Weight for partial matches (e.g., 1)\r\nheader_row = IN[4]        # Row number of the header in the Excel file (typically 3)\r\n\r\n# Initialize output lists with None to preserve order and length\r\nmatched_items = [None] * len(TakeoffList)       # For matched items found in MasterFamilyList based on criteria from TakeoffList\r\nmatched_criteria_indices = [None] * len(TakeoffList)  # The original indices of the matching criteria from TakeoffList\r\nmatched_criteria_items = [None] * len(TakeoffList)  # The value from TakeoffList used as match criteria\r\nweights = [None] * len(TakeoffList)  # Weights for each match (only assigned if there is a match)\r\n\r\n# Function to clean a string by removing non-alphanumeric characters and spaces, and converting to lowercase\r\ndef clean_string(s):\r\n    s = str(int(s)) if isinstance(s, (int, float)) and s.is_integer() else str(s)  # Convert to string without adding .0 for integers\r\n    s = ''.join(char for char in s if char.isalnum() or char.isspace())\r\n    s = s.lower()  # Convert to lowercase\r\n    return s\r\n\r\n# Iterate through TakeoffList (List2) and check for partial matches in MasterFamilyList (List1)\r\nfor idx2, item2 in enumerate(TakeoffList):\r\n    if idx2 < header_row or not item2:  # Skip header rows and empty values\r\n        continue\r\n    \r\n    found_match = False\r\n    clean_item2 = clean_string(item2)\r\n    \r\n    # Iterate through MasterFamilyList (List1) for potential matches\r\n    for i, item1 in enumerate(MasterFamilyList):\r\n        if i < header_row:  # Skip header rows\r\n            continue\r\n        \r\n        clean_item1 = clean_string(item1)\r\n        \r\n        # Check for a partial match based on the minimum characters (concurrent matching)\r\n        if len(clean_item2) >= min_chars and clean_item2[:min_chars] in clean_item1:\r\n            # If a match is found, update the output lists at the correct index (idx2)\r\n            matched_items[idx2] = str(int(MasterFamilyList[i])) if isinstance(MasterFamilyList[i], (int, float)) and MasterFamilyList[i].is_integer() else str(MasterFamilyList[i])  # Matched item from MasterFamilyList\r\n            matched_criteria_indices[idx2] = idx2  # Keep the original index from TakeoffList\r\n            matched_criteria_items[idx2] = item2  # Append the item from TakeoffList used as match criteria\r\n            weights[idx2] = weight_partial  # Assign partial match weight\r\n            found_match = True\r\n            break\r\n\r\n# Output tuple with matched items (from MasterFamilyList), matched indices, reordered matches (from MasterFamilyList), and weights\r\nOUT = (matched_items, matched_criteria_indices, matched_criteria_items, weights)\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1ca124736a8b4f59b91fbe30cb429d3e",
      "Inputs": [
        {
          "Id": "7a96020107e1426f85c9114c4a186b22",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfb8c9a39d174bf6952003bcc4fbae72",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "534efb5fba7d481e97bd16bef65999cb",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ca98b42a1e94add8fd0c006a477b34d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03b8f3fa82b4473b98481192571f5c7f",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33bbfb6d108248bdbd3e543854a3f326",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a0be9e037be046c7a27a86cd946b43e0",
      "Inputs": [
        {
          "Id": "aa433f8fecae403ba86c41274347b073",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e336dada29f44f5b8c56ffa9b6ccf77e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f17bf3ec221646d789ea66f2cd19cf3d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "7dcaffc4132744f4a62366582eb1a8be",
      "Inputs": [
        {
          "Id": "81aa4c025b6640c6a6f28ec2dd7e01b3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19b0b08ae76a41deb4ced9966fde69de",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "026ad7320bf642eb89d439e78380d95c",
      "Inputs": [
        {
          "Id": "242864eb52a4469382f89386b6bbe1fb",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "761ce3928aa14d4b8c0cdc9b8925efd9",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "5643440ab12c45fbac74996a08876328",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d204f01c2a246c3a354853e666b2b01",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "5a7e9f84e0fc4c2795a5687788ac3ea3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a0af3b1403b4991848a55fe858d9606",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "004cd6a75089458fac129e50c5e8ca8c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2f20a2262c0b4318a6effde51dbf1204",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "5;",
      "Id": "b9e0aa34feb841f6b59c15318e2b2a7e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b78fcd83bb94389a56ac48021a4cc01",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "50b6c13dde984fefba1b7ee4d1aec3ce",
      "Inputs": [
        {
          "Id": "2f2b13f834aa405a8f49d207621ac30c",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d683e963020e417ab3630360344c2254",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "bfcc79cdf8b948dd80dd9dbaf5ef87e7",
      "Inputs": [
        {
          "Id": "4c6e504ea37d40959bd3457f9417de39",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81c1cfc5a020481194b19a662e162f90",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input: List of items\r\nlist_items = IN[0]\r\n\r\n# Initialize the count to zero\r\nnon_null_count = 0\r\n\r\n# Check if list_items is not None\r\nif list_items is not None:\r\n    # Count the non-null items\r\n    non_null_count = sum(1 for item in list_items if item is not None)\r\n\r\n# Output the count of non-null items\r\nOUT = non_null_count\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "9da3d4cb99c54b87b910e0952f29812a",
      "Inputs": [
        {
          "Id": "388e29ea7ee64cb5a80eda2534fe9feb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06b37159b1664dddad314677c2c8eabe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "eeb32051f74e4cd5b6548c911fb9e0ef",
      "Inputs": [
        {
          "Id": "3c6150e00107440d8cceb3d5ce779cc3",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "981c5339943b4dc1850b63f5d783aee1",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "6b841d9e5e2949a28afb844ead11e74c",
      "Inputs": [
        {
          "Id": "f6ae17e6f4cc4b91b2215c91be900194",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd54a9fc460e4d268d98a4eb519b1d30",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "7f06e0fece7b48c0899cb9a16272a171",
      "Inputs": [
        {
          "Id": "22b63af8dd8c4fecb328311a5fc7a428",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9537a815684746ec877869f461a90c72",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "39db6ecba70a491289ee24a1ba954f89",
      "Inputs": [
        {
          "Id": "7a2bb05d71804401ac8b9f72805fc366",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf39c287c6f042e280deedbd490ecc70",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "36f7bdad7f874bfe87f6cef3a4b04572",
      "Inputs": [
        {
          "Id": "7b4d7e9b44744b99b1e522ab13494cce",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0d7f11535e042fe94da6f15d3bca17c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6901c997e57546d382937fe4f7edbd0c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "94e662c0d05249508c43fcc0093712d5",
      "Inputs": [
        {
          "Id": "57c039ad35ac4cfe983b155cc9250209",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cff3e36d18842e7ab25397aca6d773a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74a9801eb1fa48b1ab9f2bb5c6c285e0",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "bea85e63487745a1bd50fd527425344a",
      "Inputs": [
        {
          "Id": "af6d1a41bea34e89aa34028331cf70c7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "178934d8209d4761b0e9e5f2b034f8ff",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d66efc9bd294e8dba291ac4c4ca8584",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Inputs:\r\nMasterFamilyList = IN[0]  # List1: Master Family List (source for matches)\r\nTakeoffList = IN[1]       # List2: Takeoff List (to find partial matches in Master Family List)\r\nmin_chars = IN[2]         # Minimum number of consecutive matching characters\r\nweight_partial = IN[3]    # Weight for partial matches (e.g., 1)\r\nheader_row = IN[4]        # Row number of the header in the Excel file (typically 3)\r\n\r\n# Initialize output lists with None to preserve order and length\r\nmatched_items = [None] * len(TakeoffList)       # For matched items found in MasterFamilyList based on criteria from TakeoffList\r\nmatched_criteria_indices = [None] * len(TakeoffList)  # The original indices of the matching criteria from TakeoffList\r\nmatched_criteria_items = [None] * len(TakeoffList)  # The value from TakeoffList used as match criteria\r\nweights = [None] * len(TakeoffList)  # Weights for each match (only assigned if there is a match)\r\n\r\n# Function to clean a string by removing non-alphanumeric characters and spaces, and converting to lowercase\r\ndef clean_string(s):\r\n    s = str(int(s)) if isinstance(s, (int, float)) and s.is_integer() else str(s)  # Convert to string without adding .0 for integers\r\n    s = ''.join(char for char in s if char.isalnum() or char.isspace())\r\n    s = s.lower()  # Convert to lowercase\r\n    return s\r\n\r\n# Iterate through TakeoffList (List2) and check for partial matches in MasterFamilyList (List1)\r\nfor idx2, item2 in enumerate(TakeoffList):\r\n    if idx2 < header_row or not item2:  # Skip header rows and empty values\r\n        continue\r\n    \r\n    found_match = False\r\n    clean_item2 = clean_string(item2)\r\n    \r\n    # Iterate through MasterFamilyList (List1) for potential matches\r\n    for i, item1 in enumerate(MasterFamilyList):\r\n        if i < header_row:  # Skip header rows\r\n            continue\r\n        \r\n        clean_item1 = clean_string(item1)\r\n        \r\n        # Check for a partial match based on the minimum characters (concurrent matching)\r\n        if len(clean_item2) >= min_chars and clean_item2[:min_chars] in clean_item1:\r\n            # If a match is found, update the output lists at the correct index (idx2)\r\n            matched_items[idx2] = str(int(MasterFamilyList[i])) if isinstance(MasterFamilyList[i], (int, float)) and MasterFamilyList[i].is_integer() else str(MasterFamilyList[i])  # Matched item from MasterFamilyList\r\n            matched_criteria_indices[idx2] = idx2  # Keep the original index from TakeoffList\r\n            matched_criteria_items[idx2] = item2  # Append the item from TakeoffList used as match criteria\r\n            weights[idx2] = weight_partial  # Assign partial match weight\r\n            found_match = True\r\n            break\r\n\r\n# Output tuple with matched items (from MasterFamilyList), matched indices, reordered matches (from MasterFamilyList), and weights\r\nOUT = (matched_items, matched_criteria_indices, matched_criteria_items, weights)\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "80ef572ffa434fbf915621e0ad84e163",
      "Inputs": [
        {
          "Id": "cff43d77866e4a0e8c39df1bcbc182a2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0d9f3636d334f5494f55c2d28516442",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7beaf6ec92af4f0797da9a6462f5edbc",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7879ef3a2a6742988e24a0606163975c",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c76847a44284adc8bb0c655d12d77ff",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e654fdd2168e47309d142764c08a7b67",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "5ac33df8da4d41acb50e42f9993dd4fb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da5655a21174475f8705eebf84d915a5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "fee1cea7ed044ce48ce76de2c31bf533",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ecf491fbfe194e77b9ab51f729b6b446",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "a08102cad665456db01db88c5c9214f3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "08de9b230df54a46aca9221cd86004ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "8f0162fa3b6e4b7995d77748763247e1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "39636de65256478f93710e9488ba3716",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "709cb3a8490e4294a5aa98a7d1223d57",
      "Inputs": [
        {
          "Id": "739269dfe9d147ce819fb96ffc09aa3b",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2392b978d183470c86d757564b5a4894",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input: List of items\r\nlist_items = IN[0]\r\n\r\n# Initialize the count to zero\r\nnon_null_count = 0\r\n\r\n# Check if list_items is not None\r\nif list_items is not None:\r\n    # Count the non-null items\r\n    non_null_count = sum(1 for item in list_items if item is not None)\r\n\r\n# Output the count of non-null items\r\nOUT = non_null_count\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "967633855df2420ea99566735690790a",
      "Inputs": [
        {
          "Id": "21bcf78dd2c44c1ea0f08d6ddc88139b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "579d470642244fdb9c39a4953a32ed39",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2916e84fb1054f68a9a4346f8bdbf73a",
      "Inputs": [
        {
          "Id": "23ef7c59bb1b4ff5b755ee0d1531d1fa",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2dc01c0aac846f2b9ad7835a7b36884",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5a77ce8bfc9545f6be59aacdf67f2e9c",
      "Inputs": [
        {
          "Id": "9c8a38097fae4a90a3bd066aaa69ca45",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95014d3226334171b45d9d61022f79b9",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "138ae0638c0742ae819a553290067a1d",
      "Inputs": [
        {
          "Id": "5ed8fcc768d7446db7ed32909f38fd06",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3fb7685d39f4cc7b23e4e89c6c9c57f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "cb8e98ddef8a44f09df0550ab8d7c263",
      "Inputs": [
        {
          "Id": "a54cfb2c5f03476bb86a82bf2ee41860",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2f6e4a467d2404f80e5b57bf59640e7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "54a63bec891843888ba2e9666f64696c",
      "Inputs": [
        {
          "Id": "5928a99d1ebb47b09dedaa5bbf40ca72",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "697862edb4c64a10a3e868e130462bbb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "579cab4efbd749e4a5782b62e826c58d",
      "Inputs": [
        {
          "Id": "25f602dab6da4a3f9c20f0af2a81e8e0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ae3718de4ca4b869fe057975d659c06",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e353b41c48942b78fbf140741a1b9af",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0026ce7121dc4d04a5326e976aed939a",
      "Inputs": [
        {
          "Id": "916469d2d3154f38bf3891ec2b1e08d8",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ac41fe89df94f76be97f6b5a24d8698",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36bd80a2cf414fe5b4a55e7b8c824b4d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0c2ef88202ef41199275343caf0ebed5",
      "Inputs": [
        {
          "Id": "2131434e904c42409f7bc0a7efac318a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9452f8d50c449a7babd51a03ebdc7f0",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77acba851b794caa826eaf230a851c4d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Inputs:\r\nMasterFamilyList = IN[0]  # List1: Master Family List (source for matches)\r\nTakeoffList = IN[1]       # List2: Takeoff List (to find partial matches in Master Family List)\r\nmin_chars = IN[2]         # Minimum number of consecutive matching characters\r\nweight_partial = IN[3]    # Weight for partial matches (e.g., 1)\r\nheader_row = IN[4]        # Row number of the header in the Excel file (typically 3)\r\n\r\n# Initialize output lists with None to preserve order and length\r\nmatched_items = [None] * len(TakeoffList)       # For matched items found in MasterFamilyList based on criteria from TakeoffList\r\nmatched_criteria_indices = [None] * len(TakeoffList)  # The original indices of the matching criteria from TakeoffList\r\nmatched_criteria_items = [None] * len(TakeoffList)  # The value from TakeoffList used as match criteria\r\nweights = [None] * len(TakeoffList)  # Weights for each match (only assigned if there is a match)\r\n\r\n# Function to clean a string by removing non-alphanumeric characters and spaces, and converting to lowercase\r\ndef clean_string(s):\r\n    s = str(int(s)) if isinstance(s, (int, float)) and s.is_integer() else str(s)  # Convert to string without adding .0 for integers\r\n    s = ''.join(char for char in s if char.isalnum() or char.isspace())\r\n    s = s.lower()  # Convert to lowercase\r\n    return s\r\n\r\n# Iterate through TakeoffList (List2) and check for partial matches in MasterFamilyList (List1)\r\nfor idx2, item2 in enumerate(TakeoffList):\r\n    if idx2 < header_row or not item2:  # Skip header rows and empty values\r\n        continue\r\n    \r\n    found_match = False\r\n    clean_item2 = clean_string(item2)\r\n    \r\n    # Iterate through MasterFamilyList (List1) for potential matches\r\n    for i, item1 in enumerate(MasterFamilyList):\r\n        if i < header_row:  # Skip header rows\r\n            continue\r\n        \r\n        clean_item1 = clean_string(item1)\r\n        \r\n        # Check for a partial match based on the minimum characters (concurrent matching)\r\n        if len(clean_item2) >= min_chars and clean_item2[:min_chars] in clean_item1:\r\n            # If a match is found, update the output lists at the correct index (idx2)\r\n            matched_items[idx2] = str(int(MasterFamilyList[i])) if isinstance(MasterFamilyList[i], (int, float)) and MasterFamilyList[i].is_integer() else str(MasterFamilyList[i])  # Matched item from MasterFamilyList\r\n            matched_criteria_indices[idx2] = idx2  # Keep the original index from TakeoffList\r\n            matched_criteria_items[idx2] = item2  # Append the item from TakeoffList used as match criteria\r\n            weights[idx2] = weight_partial  # Assign partial match weight\r\n            found_match = True\r\n            break\r\n\r\n# Output tuple with matched items (from MasterFamilyList), matched indices, reordered matches (from MasterFamilyList), and weights\r\nOUT = (matched_items, matched_criteria_indices, matched_criteria_items, weights)\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "457517162dd84207ba73adcf12123a86",
      "Inputs": [
        {
          "Id": "049ae30b830d478d932da14e5e88f7a8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab68fd967b8544a282c40a9071e832c9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26df9547e4ad48c3a3a0f8ff2ebe2182",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27a74ef79a464d34931aec4a77513155",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0364506491a416b91fe786e63ae1099",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa9da5570df8429eb8fe5799e852598e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "4283b3a6f8cb4b20bd3c31a299a4a2af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "13b54665f56f41758b552119b4cc0f1a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "716a7dda4b2c487cab84eaf43836fb3d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7c67232bca64e558032614ff3734963",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "8fd9ae51812a42f3b28b6de5f345ec4c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cab47e00c4554f12b27d88e67d6e7603",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "4ec3d72878a84b53bbfaca629eba33b4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0b9fb781a8e47f9b23984efc2494345",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "5;",
      "Id": "2bd6055a47334fa9b342528e2cf0a8a1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4636fe31556f49b6861b6e7c2ecf8737",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "65553dadf51642eba8d17aeda7e4b272",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1d6f0fdbe728442e9f7f46c734280a70",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "843edc5a4b1e4744bc1e1d1cd76c18a3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b8c87cfddbb4210825637e804bda293",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "42d63c7d751f44bf866c4131dd22c3cc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61c9548a045a45f78ca948e00aa1dacb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "386d749fe0d6444c8c6b8a04aa15b8aa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "962fa739124746d88216aef07be33ab8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load necessary libraries\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Inputs: Each input is a tuple of four lists: (items, indices, reordered_items, weights)\r\nperfect_match = IN[0]\r\npartial_match_1 = IN[1]\r\npartial_match_2 = IN[2]\r\npartial_match_3 = IN[3]\r\npartial_match_4 = IN[4]\r\nrows_to_drop = IN[5]  # Number of starting rows to drop\r\n\r\n# Initialize output lists\r\nfinal_matched_items = []       # Best matched items from Master Family List\r\nfinal_matched_indices = []     # Indices corresponding to the best matched items in Master Family List\r\nfinal_weights = []             # Weights for each match, with lower weight indicating higher priority\r\nmatch_criteria = []            # Original match criteria from input matches (used to verify alignment with Takeoff)\r\n\r\n# List of all match types for easier iteration\r\nall_matches = [perfect_match, partial_match_1, partial_match_2, partial_match_3, partial_match_4]\r\n\r\n# Determine the length of the shortest list in the matches (to avoid out-of-range errors)\r\nmin_length = min(len(match[0]) for match in all_matches if len(match) == 4)\r\n\r\n# Adjust min_length to account for rows to drop\r\nmin_length = max(0, min_length - rows_to_drop)\r\n\r\n# Process each index in the input lists, starting after the dropped rows\r\nfor i in range(rows_to_drop, rows_to_drop + min_length):\r\n    best_match = None\r\n    best_index = None\r\n    best_weight = None  # Start with None to signify no match found yet\r\n\r\n    # Iterate through each match type to determine the best match for this index\r\n    for match_type in all_matches:\r\n        # Ensure the match_type tuple has exactly four components to prevent unpacking errors\r\n        if len(match_type) != 4:\r\n            continue\r\n\r\n        items, indices, reordered_items, weights = match_type  # Extract components from the match tuple\r\n        \r\n        # Ensure that we do not exceed the bounds of any of the lists\r\n        if i >= len(items) or i >= len(indices) or i >= len(weights):\r\n            continue\r\n        \r\n        item = items[i]\r\n        index = indices[i]\r\n        weight = weights[i]\r\n\r\n        # Select the item with the lowest weight (highest priority)\r\n        if item is not None and (best_weight is None or weight < best_weight):\r\n            best_match = item\r\n            best_index = index\r\n            best_weight = weight\r\n\r\n    # Append the best match found for this index\r\n    final_matched_items.append(best_match if best_match is not None else None)\r\n    final_matched_indices.append(best_index if best_index is not None else None)\r\n    match_criteria.append(best_match if best_match is not None else None)  # Ensure criteria matches final match\r\n    final_weights.append(best_weight if best_weight is not None else None)\r\n\r\n# Output the final selected items, indices, match criteria, and weights in the required format\r\nOUT = (\r\n    final_matched_items,      # Index 0: Best matched items from Master Family List\r\n    final_matched_indices,    # Index 1: Indices of the best matched items in Master Family List\r\n    match_criteria,           # Index 2: Original match criteria from matching logic inputs\r\n    final_weights             # Index 3: Weights for each selected match\r\n)\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "f150802cb94a441e9b1fcbb69a0fe5c2",
      "Inputs": [
        {
          "Id": "8fd3088502984d4da1138e6966a617bd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64ab9573e11949738555bf7616108922",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "913e1e052be34eb1befbe340ffc6dd44",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee89731156fb4a77809deecb6ee81491",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bf12c9e8f804ff8bac3e4e9060b2827",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f42038032b874c5abfc370598fb59ff0",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ebe41e12e304b37b7019030f94aca9b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1c34d702615b4b8c955135cdc933f114",
      "Inputs": [
        {
          "Id": "f39633bebdea4159ac49e129cba4421c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "194a1e88926241fb9b5f908f929ef8cf",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "359c1c69e7b543bf960693ef9de4609f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "27ee850eb2444c95968eb17458b07a9e",
      "Inputs": [
        {
          "Id": "912ca6cbe44542b78ebccdceea8b28e0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f89cf9b724d04a41989b34c9b39ddeee",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28e76a33d6cb4d3ca28a6510980123e7",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "91d98ecb544d4859ba5950074ae89c78",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee8c48a55a444769aea5facbbee92f89",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "b5f5230c6d654ec593a5ebcd672703e0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "524212b4f2384546878f7d9fa722be09",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4524c8dfe37a44dea5c4275ae5217c9e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d09a11658bb2491385126c37eaa8d068",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "69f5b7a69e074a619c63124850e9866c",
      "Inputs": [
        {
          "Id": "e92479983be44862a52b88a8b830f898",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b0593f6f437461d944645f58016b83d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0443ffe1a91142d598a26ec5b87bf16d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "808ac222d1d141429431d3d78a9b2503",
      "Inputs": [
        {
          "Id": "400b5cbd7ebd4a939ad47bb9b1d3734b",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2eea26ca60974b0b886a5e8f9fa67f5f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "9ded816e3cb34bee8e78b33afd5e998b",
      "Inputs": [
        {
          "Id": "650bf5bf4c9043028ff0c39896ce7dda",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d2c63c005ce4da790c488a780376cc9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "2dc6769495db408b8f3dc8b168004ec8",
      "Inputs": [
        {
          "Id": "fcaa6e5e22b24ea3ab3679f8a031e998",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "330f496f4e1840319de2729c2a452034",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "84ea3f8ee75946f0a6560f3780e42e3f",
      "Inputs": [
        {
          "Id": "11cb12f80e894e9b9d80ab189efc365a",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f76025e78b247efa1874c1f99527a0e",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b71461878c254985bb9de7ffed34f332",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "[D] Strength",
      "Id": "2c43e1005fa54937886f1784810b1e77",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91e705a4f89d458984d7161c3c22720d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "abed8de685c74f26a64096c06f4e51bb",
      "Inputs": [
        {
          "Id": "0d3628a5fd164697b870f78f8d314f87",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c52de5d591ed4a6c9fd79155fd3f883b",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c8ca98544cbd49efb899eefc34e85c3c",
      "Inputs": [
        {
          "Id": "b09be7458e514a95ab803ad0ece006da",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3a0ece7134444c4bb32c5e17c6df092",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ddefef15dd04cb595d57ee9747fb335",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "5dda519562144df0bad876cbbf5a6290",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "80e6874cb79a4e40bdd23b3f225dfbd0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "1cbf65d3ca1949d89230f34cc45fd97a",
      "Inputs": [
        {
          "Id": "1aa1b1039d084ce6bffd1577f9bd7dce",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53bd6d34399342bdbae857749192b2c0",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca87a9249593440ea1e9f0aa85fe9931",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3ceed1b0c744ee88064df657739c15f",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ee4fef17c964b5aad2a3eb6ebdcc256",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "661959cf1c614a31b930588da8531c73",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb22d08ac8f74196890c258fd00ba392",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9b5067821184712b34b9df58a18a4a7",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f54fd8f5e4094164bc18f772dacb9f64",
      "Inputs": [
        {
          "Id": "b194f514b1514216a0b2d7e2dd207af1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc51c8fea064472ab528de8d8760f443",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c3624c35cc14fbf8d07581c2447516a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "9fdcd3a672e045e1a532a18243c68d05",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "88d83fe0944346f08c9513f770c5c551",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "b34862855b62460184530eb3b0dc90e0",
      "Inputs": [
        {
          "Id": "9e832e65e5f04a75af9935aa0117689c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "163c9ecd7aed486685ce4a52d72c2109",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "bd7f6a58631f4179b6d72e394c9a76aa",
      "Inputs": [
        {
          "Id": "348566cbc34d4aa48a5924b866d48b7c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e2304a0522a41c69ff22fe7c8c094cc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "a98293a8ce5046d88f797f93ab99b423",
      "Inputs": [
        {
          "Id": "6b7db2c8865b4fc59253b834f58ae708",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4781893c5d534616b19b02f36abd152c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "25d2312cacee4019ab9465d0cd446334",
      "Inputs": [
        {
          "Id": "e97fbff11dba465db853b3a52a760737",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64459168da6b41ab8acb4b8ab437c54c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "4692f08fe70d41ed821a4d21c638f42b",
      "Inputs": [
        {
          "Id": "8202cee8d09842f38e745a73daebd0d4",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18ac05c7b9a14392aaf5478c81cef8c7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "2d6fe0e3346b4ea69e0ee30c43567171",
      "Inputs": [
        {
          "Id": "80a14d027226417b89973cc6b7da1ae6",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e2266fa9d024d52869b87b7ae0638ab",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "812ebd73a6fa400db83e92d78dc38447",
      "Inputs": [
        {
          "Id": "2bd071fd17ca4b2d8feab8535bcf3456",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "993f81ca7f6645cc8de5eea6d6ac9567",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "dc0ac8071ede47139a5351fb1c285e3e",
      "Inputs": [
        {
          "Id": "8b39e0dd402f4b73bd688fcd98a7b8f1",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4dfd75d0f53e4e8d833a1767186ffd0f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "73db9aa2b4434c2ab49e43707490f4b9",
      "Inputs": [
        {
          "Id": "fd15a00ffc0949abb4d1ce4c2ded0165",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e7825db8bca4d9086f802bc63cadb23",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "66cb63ab360042b4a6c253aaecf46eee",
      "Inputs": [
        {
          "Id": "3165cdf0f41149db8e9b26dbfc3a245e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f50997114df043609638fc3efa1bbef5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "46e436cf260b4628a26f6bb6bcfa1ae5",
      "Inputs": [
        {
          "Id": "e3d33363ff5f47be85f1fafcd82b8290",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cda835fab07146909df89d0bbf9ee766",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "f0dee5618a6c486b94511353d39585b5",
      "Inputs": [
        {
          "Id": "e98b174afc02401fb27bf85cfb3d01a2",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a35b8398398e4e4298a47abea259e157",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "cdf65203de384e298fe9bc0f8ee38433",
      "Inputs": [
        {
          "Id": "aec3c7cbfedd42d3b5c5fd0f96a5b372",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a53639acd03473bbe758f55190822c1",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98597a055553423d9af33b7cf3e2762e",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78a0a34693f24582a0f806b998e0f5c4",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f3d9a60eada49efaee4158bac31bce0",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbd5de9f7636405cad346481818222e6",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e1ae141819d47008b0ac71559df3933",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d31e9eeca5b942be8ad2dcf9c77d7ccf",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "aa4bd44f9352474ebf5366a9a268fe7b",
      "Inputs": [
        {
          "Id": "275f5cc5bfe942a1a9221c18aade8b6f",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bc360ddd7a94b09a0bdfe3a0c9bf508",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62edd8a8bdd645e6b26828b4e6d727d6",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Is Match?",
      "Id": "7ecb2e5df844401aab7832ab9c3c4bb3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4f21e7a07cc447c8b56a777bf018506c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "68f1a47643c14bc38ef118432b845d31",
      "Inputs": [
        {
          "Id": "d3ff7b0a6dd9468bb3a3f6597e291cb4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22dd899fc6cf49b88ade064ccad97a4b",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3a6fe612b1fd4f858e2815ace6ac4bb7",
      "Inputs": [
        {
          "Id": "d3d29ed288e74d2799ee8d4fea66e4c5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a39e5999189a4bd7b04d647c8d4846a3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f416de62876a4fb09bbb1a006062d836",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "15c557b9cc88460b9a1e9d291b75bc3a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "55a38a79165e40e794b0cf2b7ac0ecff",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Inputs\r\nIndices = IN[0]         # Indices with row numbers where \"Yes\" should be written (and None elsewhere)\r\nyes_value = IN[1]       # Value to write for \"Yes\" entries\r\nno_value = IN[2]        # Value to write for \"No\" entries\r\n\r\n# Determine the length of the output list\r\nlist_length = len(Indices)\r\n\r\n# Initialize output list with \"No\" values for each row\r\noutputList = [no_value] * list_length\r\n\r\n# Iterate through Indices and replace the default \"No\" values with \"Yes\" at specified positions\r\nfor i in range(list_length):\r\n    if Indices[i] is not None:\r\n        # Write the \"Yes\" value at the specified index\r\n        outputList[i] = yes_value\r\n\r\n# Output the final list with \"Yes\" and \"No\" values based on the indices\r\nOUT = outputList\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "66f3e7cf00dd47d79185725786e11bf1",
      "Inputs": [
        {
          "Id": "bc70561c22cd41668e8254665c3f38f3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61e428694c414f60a5135a33236cd8dd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86056a387a194a8ebe6b85a5a8a1ba00",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1beeb2af80914d00a05df54fbf3d6b92",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Yes\";",
      "Id": "85933ee157bd427ea32f190667c92d9b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2604ece1c8f246a7b3cd7ede80653ac9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"No\";",
      "Id": "c2d6333ad7914ae393e4f3c62665f955",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d91a8f02eb304586856c9a26958f092c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "0f03e9286a4644a8abc36f0d71b7d200",
      "Inputs": [
        {
          "Id": "b23c30f580a74feaa79b3f15655ad627",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a59d1289c1e4d27b17f74a0b047c07d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "eebc6656f4eb4d878a1c413f9be86726",
      "Inputs": [
        {
          "Id": "df1f5219695549dd85598e1ee6c609a5",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57f4ff1b59b34194a59197d60808b918",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ed24dbd49d9346a492732de34acbff68",
      "Inputs": [
        {
          "Id": "e5072c2ec0a84f1eb0ac77133b95eb41",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0666e4092f8e400e9c74f14cb841acbf",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Input: List of items\r\nlist_items = IN[0]\r\n\r\n# Initialize the count to zero\r\nnon_null_count = 0\r\n\r\n# Check if list_items is not None\r\nif list_items is not None:\r\n    # Count the non-null items\r\n    non_null_count = sum(1 for item in list_items if item is not None)\r\n\r\n# Output the count of non-null items\r\nOUT = non_null_count\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1b36cafffea143ecbb22caee5a60d67b",
      "Inputs": [
        {
          "Id": "5e628269a412444e94f79a3d0c2f59be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d4fd39bbced40548b1b98e8f95207eb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a8af2c96a96c44358bef2f9957e60341",
      "Inputs": [
        {
          "Id": "9e4d1d47dda148bb9a5e1012264ba62e",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "496ef5391933465c93555d543477f723",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "7eb90173e9e44887a60331f08850a424",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "358f95f7a6bb43a497b44dc15b4d5d98",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5b181c1e5f034fb8993d6d3ad087ccfc",
      "Inputs": [
        {
          "Id": "4832d7818c6c4d0a89e1cb5f6b5591fa",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "deaae8367fbc4f3d8accef3b8416c454",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "0301e591419f4ccda4feebea10665367",
      "Inputs": [
        {
          "Id": "2d0c31af32294de4b371cf5b0e25c4af",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "669f80b2282e44048caaaa9e6b7fd987",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "5c28a3f486114a1c93e9062ac7e8ce0d",
      "Inputs": [
        {
          "Id": "0599d3ab7bef4e22994b99883591969b",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "981fd6c116084fb7b04719552592c69d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "81932197016f40229ffb2df836c6058d",
      "Inputs": [
        {
          "Id": "e9db7e77e3b447d0a5f846bf629233ac",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cbe0794a6d340f1b23106b2aa71754c",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "98e4d1ab51b742578979f267711c7b35",
      "Inputs": [
        {
          "Id": "e6c03047fabd49c79a1db4f7523afa8e",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d605c9deec64ff783e596e3ec4162c2",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "651097d4f8fc4214906d23bc3883b7ba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9e84443b43748bf8342f650ed4b7e67",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "ccd4af2956914564909e3800cc763303",
      "End": "66e5d5715db24fa4890ef410b6918ba0",
      "Id": "8c4f1682f2614a9d8ba2bc7a030190f2",
      "IsHidden": "False"
    },
    {
      "Start": "ccd4af2956914564909e3800cc763303",
      "End": "0a03ec8ecd334ebabdedce2bfea020c0",
      "Id": "72548b4d293947a3a41513ee39b25dea",
      "IsHidden": "False"
    },
    {
      "Start": "ccd4af2956914564909e3800cc763303",
      "End": "6afc7d419bb44d389023e0e6e6b97878",
      "Id": "f84b5e67a6104455b4440b37e1ea0294",
      "IsHidden": "False"
    },
    {
      "Start": "ccd4af2956914564909e3800cc763303",
      "End": "0d3628a5fd164697b870f78f8d314f87",
      "Id": "833709d8b8bd4d1d927818f3be820628",
      "IsHidden": "False"
    },
    {
      "Start": "ccd4af2956914564909e3800cc763303",
      "End": "7a6628c9c4a94f90ae4287579a81deff",
      "Id": "2201af218535476dba0f871788f1090c",
      "IsHidden": "False"
    },
    {
      "Start": "ccd4af2956914564909e3800cc763303",
      "End": "4832d7818c6c4d0a89e1cb5f6b5591fa",
      "Id": "c6fca04021a54a73b3bb71f5aeee6a0b",
      "IsHidden": "False"
    },
    {
      "Start": "3a8de51812c4468c8e77223deda65d2c",
      "End": "244bfe86b8964a2ead9c85003d9c16d0",
      "Id": "8aaec72f73cb498c8c834e0362b085a3",
      "IsHidden": "False"
    },
    {
      "Start": "f3ea5e98a90f44f2b00d59379ce46e6e",
      "End": "3d140fdf75aa4e47ba0d892e01103e34",
      "Id": "1731d60dadfe45a29781deffb1508160",
      "IsHidden": "False"
    },
    {
      "Start": "06f6ef19d70b4adab1a43c178ecc064c",
      "End": "4cd5bfc3f1964cd99b3c5211b91ca812",
      "Id": "9ccab69ff85243c09b5f2e2095e3bd08",
      "IsHidden": "False"
    },
    {
      "Start": "3fde9a9af8624c21afe8fd1d7a516a29",
      "End": "476a460aa5cd415fb38219e582e99503",
      "Id": "2bf06bdc266f42bba0e29d4d89e11492",
      "IsHidden": "False"
    },
    {
      "Start": "3fde9a9af8624c21afe8fd1d7a516a29",
      "End": "e181ef2813714f7fa5c5b9ef682bb8e6",
      "Id": "449295b376da426e9ab679955c6caa71",
      "IsHidden": "False"
    },
    {
      "Start": "3fde9a9af8624c21afe8fd1d7a516a29",
      "End": "bf498668202d46d0984f5227df29f8ba",
      "Id": "1ee475f1e00c4070ad97429dbf3646d5",
      "IsHidden": "False"
    },
    {
      "Start": "3fde9a9af8624c21afe8fd1d7a516a29",
      "End": "875b4a5658ba4c23af560fe24039fdb2",
      "Id": "e0a38a9d00304f6db4e94f97bf7121f1",
      "IsHidden": "False"
    },
    {
      "Start": "535cde4f5bd04f9db39e055e7ad2b3a8",
      "End": "4062ecefeb0a45b183c3f8e4ff619806",
      "Id": "d954ae6a9b0c4a398111de1c358e860b",
      "IsHidden": "False"
    },
    {
      "Start": "7c7e74e34f01425789e98fc8cdbdb925",
      "End": "ede476da64fc47c09c49645cdbaaec4a",
      "Id": "d416de9743cd428c82f1148383efdcf2",
      "IsHidden": "False"
    },
    {
      "Start": "89af2826becc417a99eea46c2a8e88dc",
      "End": "3dbc0d0f44e64fd195629c8d53dc48f3",
      "Id": "7d60e98a042a47a394ae5bce87f0eece",
      "IsHidden": "False"
    },
    {
      "Start": "8b703081e2674d0aa9553a397f6373cd",
      "End": "50af0042662042b095448af07a307227",
      "Id": "f413ac65394b48008ba1d3b2ebe5af08",
      "IsHidden": "False"
    },
    {
      "Start": "23030948daf64001a5b3927311ba446a",
      "End": "f8d3cb818218429ab206b5ad51cdb92f",
      "Id": "74ad5bbe69f24a23b43fc0989104fea3",
      "IsHidden": "False"
    },
    {
      "Start": "425b280e0f1f41279c7e7dcd6789ff37",
      "End": "e7d0a24504404e5b9c959f1c00227016",
      "Id": "a0d1a8df0f4744d7becbb8948af6a9bd",
      "IsHidden": "False"
    },
    {
      "Start": "41a72a517a834593b57ea64fdb463b66",
      "End": "107d168db4ad4f1b991cb9dfc0ddd1af",
      "Id": "6450a3b0687947c2aec66b9e8626c195",
      "IsHidden": "False"
    },
    {
      "Start": "cffabd1f178b487fb35fc672474dbcc0",
      "End": "464b4feeaad54d2bb1dcfc1b48709b18",
      "Id": "611240b6e485477f8b6a41717dcf4a48",
      "IsHidden": "False"
    },
    {
      "Start": "33af2ba4047d48c7b87d4e5ca972ba52",
      "End": "c62740cdd1614714b36dd8614544e842",
      "Id": "563cd6c548704a83bbea9dcdd9a7f6ed",
      "IsHidden": "False"
    },
    {
      "Start": "bde2235630d548988c55fde75ec32eec",
      "End": "fdea8e7af8364a8bb98be9610e23924d",
      "Id": "4b16813843c74d01898901025e7425b0",
      "IsHidden": "False"
    },
    {
      "Start": "ea46b6b900eb4b74a2c0c291e607c15a",
      "End": "694dfcc237cc4a8283ab8883f7cd309c",
      "Id": "fa427d88eef64e78827328f691a47cb7",
      "IsHidden": "False"
    },
    {
      "Start": "7642741e9adc49fb9df086422f860d7c",
      "End": "09898174326f4dd7b4483cf3e022fcb3",
      "Id": "8e27d23929da44f387ed869ddc112034",
      "IsHidden": "False"
    },
    {
      "Start": "3df7f28283ab457e873587cbaac57ff8",
      "End": "a09c16b7913845959ca36c7a748e153b",
      "Id": "9071356d99bd48809b8aaa11d428aece",
      "IsHidden": "False"
    },
    {
      "Start": "fb374e9187ec44619e66bd9a890ae3aa",
      "End": "a251c0ddc0e043f4aee29bfe4e5433df",
      "Id": "347dcc6cd5904ffeb76aa8ddc9c44a2f",
      "IsHidden": "False"
    },
    {
      "Start": "cc68ece7dcac49069d37db8abee5f454",
      "End": "9a76d455b12842a0bfec2c3b83aecb48",
      "Id": "82d95c96786a43b694d0c37f8f67ba4e",
      "IsHidden": "False"
    },
    {
      "Start": "23e194b153b549d28161d6a7b91cf0a2",
      "End": "d73ce692e0e24a939bda92661eb5a175",
      "Id": "a0d109be43894d5b949b7a6277b8f8c2",
      "IsHidden": "False"
    },
    {
      "Start": "01704a3d10b54f56b4347ab08c75bc63",
      "End": "1762642bc3ad47f18e9970543ae7abb3",
      "Id": "e584389f5f734f28adf24d14236516bb",
      "IsHidden": "False"
    },
    {
      "Start": "01704a3d10b54f56b4347ab08c75bc63",
      "End": "77f4aa89127648219d29e048a461096e",
      "Id": "b16a5223457b4d1bb1d36b60e3c8faf7",
      "IsHidden": "False"
    },
    {
      "Start": "ee2c75a8e25042a1b0c1205316e4cfd3",
      "End": "accd6c5d094e4221a8349254b8d33289",
      "Id": "cf222009a58f4b80808173482d40974f",
      "IsHidden": "False"
    },
    {
      "Start": "ee2c75a8e25042a1b0c1205316e4cfd3",
      "End": "2d0c31af32294de4b371cf5b0e25c4af",
      "Id": "b405f142703b4821ab240f0a957d8bbb",
      "IsHidden": "False"
    },
    {
      "Start": "39688b137bf345df8ebf1a288f56e68c",
      "End": "106375acbb5e41d88ee1c53dad634b91",
      "Id": "0a4241721f7845eabdd55f60e4d8803a",
      "IsHidden": "False"
    },
    {
      "Start": "24e616f0dfc74f2da8966ef170d62bcc",
      "End": "995f4fcd23f64ee89423e22debca5f17",
      "Id": "926b0909ee084702a809a4ea57db2f1c",
      "IsHidden": "False"
    },
    {
      "Start": "78aa56fe38f744b6adf20679f6bf71a1",
      "End": "ed31e93a0bd74bd38cf3f6214b880cd2",
      "Id": "1a47c18de60b4fd2a91b10708d84e706",
      "IsHidden": "False"
    },
    {
      "Start": "a2e3c196898a46b8a3bb43345aa99c22",
      "End": "176a44b6f861444b82513cf28087f807",
      "Id": "5a62ce5db236416286e7ed03dd2eb2e2",
      "IsHidden": "False"
    },
    {
      "Start": "75c8b2315f4b403f9f6aaca22de8b51f",
      "End": "3165cdf0f41149db8e9b26dbfc3a245e",
      "Id": "ca789c7764f34cafb756a416fd7808f4",
      "IsHidden": "False"
    },
    {
      "Start": "75c8b2315f4b403f9f6aaca22de8b51f",
      "End": "e98b174afc02401fb27bf85cfb3d01a2",
      "Id": "667b9a2e018643879f2341bd4334fc35",
      "IsHidden": "False"
    },
    {
      "Start": "bdd41377dc0040148adb4ef89d610e1a",
      "End": "7ce8134fedb54e45b5b4bd2898c24e4c",
      "Id": "df34f991f1d84417ae2e00b8b3940e6d",
      "IsHidden": "False"
    },
    {
      "Start": "b1b8767767a84e61b669078db1ca679e",
      "End": "dd4d3c2e7f8d43d7aeb2681e949c385a",
      "Id": "7336aed842014419a0491153aa3fe4dc",
      "IsHidden": "False"
    },
    {
      "Start": "af52899fc8404237a12db7232c27bf9c",
      "End": "99c9821bb4754959bb114430d2b38175",
      "Id": "abe2c5440d4341d187c13f50c4ecd5ce",
      "IsHidden": "False"
    },
    {
      "Start": "18152270c4ef40f395ba1f8acf550c7a",
      "End": "8c652a025374476697b3091e9d56b55f",
      "Id": "85507ce2286645f7bf60b557b6088f5c",
      "IsHidden": "False"
    },
    {
      "Start": "0578ae8de15746c3b1a98b13bc1194ac",
      "End": "301e94787d564b28a8714d8b4cdccd9e",
      "Id": "97bc9b65ae83407cbddba103ac0be613",
      "IsHidden": "False"
    },
    {
      "Start": "ca5886093565440cba987157c1febe40",
      "End": "570e0f6665a74df5976b6230e7282407",
      "Id": "e6419e089fd84303a341dba0cc1ad023",
      "IsHidden": "False"
    },
    {
      "Start": "8f25b9ec5db446408b1181fd90cb1270",
      "End": "4db6401e5b5c423a995204f3e37896ab",
      "Id": "4600aace41a84b52a252bdf104d11e47",
      "IsHidden": "False"
    },
    {
      "Start": "77ea12265449405691cd156e8155bd06",
      "End": "5e871446f346421592c7083e391ac411",
      "Id": "d3dac7181d394d998faf611379873d93",
      "IsHidden": "False"
    },
    {
      "Start": "ca12aace064844ed8ac8582b4b4e4573",
      "End": "ba4ffafba9a843c69b53654720a61096",
      "Id": "163f7a5f41e14e20a5ca1b74cf7919e9",
      "IsHidden": "False"
    },
    {
      "Start": "7abfb420f660462e82877310e3fda9bd",
      "End": "14a0da71baed4a9894439530170dfb1f",
      "Id": "0b4fb3b96e7542c897472d92f2c295c9",
      "IsHidden": "False"
    },
    {
      "Start": "8ea492ebb569441eae03726a3a6b7aa7",
      "End": "06d85d22635d4daf8b2817e04fc17710",
      "Id": "eafdb7c23940463d9693211b57cb5b1f",
      "IsHidden": "False"
    },
    {
      "Start": "fb30c0ebde96480c949d18b9b69adcf0",
      "End": "77c3d3e952cc45bb8744fd4396e5feab",
      "Id": "d90517f35df5443288f87ff121581a17",
      "IsHidden": "False"
    },
    {
      "Start": "90f65212d0d5424fa9f325220c2e2aad",
      "End": "3882e6dafe964055a156640de9c7d888",
      "Id": "eed68f0361ce41dda99bc96b2861edc2",
      "IsHidden": "False"
    },
    {
      "Start": "2a85abd353594029a5c7d0836c1d947f",
      "End": "1eaf31d764504c1782464b2472794a1f",
      "Id": "3467ca24cd55486380ff5a0c8afbafe9",
      "IsHidden": "False"
    },
    {
      "Start": "c04f0205c3d141678a8848b8aa286035",
      "End": "b89ce2f8db1e4c6f82ebc9af4390e7b5",
      "Id": "0dc680754709439998bb783a1f6aab31",
      "IsHidden": "False"
    },
    {
      "Start": "6e7086a171854f8082de366572cfbcb9",
      "End": "5be1117c2d5f4a31bb102497552a1554",
      "Id": "cb4249d1e0724429b5bb361abd102e73",
      "IsHidden": "False"
    },
    {
      "Start": "485d8a51d4ac492cbad24b254b78fd3b",
      "End": "2ea4e30141df4eb19b1f63d0e2c1efdd",
      "Id": "9ad3c3e885de4461b2159286e00bdf14",
      "IsHidden": "False"
    },
    {
      "Start": "f86bea01b6474953a3a711c5e1be6777",
      "End": "08467458bbb34370b7c47cb90e45909a",
      "Id": "f5cebdcf52ac4481ac6d838f570164f8",
      "IsHidden": "False"
    },
    {
      "Start": "be0c99f8c4934125a9285c6d6d7c2edf",
      "End": "819d90d8376347bdb6ea3b884f6808be",
      "Id": "82bcfe2c6aa340ffa9f402e249a417a9",
      "IsHidden": "False"
    },
    {
      "Start": "fe0e699b7dcf4d50b2932519dda79864",
      "End": "8168baa565d24f9ab18e32a64e7dd3d5",
      "Id": "003f1fc95ce647e5830e2872b942c8e4",
      "IsHidden": "False"
    },
    {
      "Start": "b959c26338004f6882dea0f86c8fa4c5",
      "End": "1b4ef407113a449fba3b61593abb4a03",
      "Id": "372bf1a7d41c46b88d56c7a487c10164",
      "IsHidden": "False"
    },
    {
      "Start": "8cc83c426dec418cb5e656116a8f7c8d",
      "End": "f335486603ed4fbb94d19b5fe8bc1468",
      "Id": "071d8266334e48f287cb923a5c7e7c6c",
      "IsHidden": "False"
    },
    {
      "Start": "8cc83c426dec418cb5e656116a8f7c8d",
      "End": "2bc0bf38e490474a95501e0f6f600f9a",
      "Id": "52db4d00c39e4bbca5c8adce5f77ff79",
      "IsHidden": "False"
    },
    {
      "Start": "f6f83239c80445d7955b14e261cb0261",
      "End": "ec82b2f1f2054ae5bfbd68e39a026e66",
      "Id": "fcc2deff3ed242008479494e97ccfdf1",
      "IsHidden": "False"
    },
    {
      "Start": "df4fc7e27adf4ca2a6d11539235e4cef",
      "End": "56988e9567ea423096985a682a935754",
      "Id": "08715cbc3ece4f7f9b7b62625371456a",
      "IsHidden": "False"
    },
    {
      "Start": "ea042da9190548e8bc766e08a8e3b80f",
      "End": "2b50bbde803145548e6375f1db4a16a9",
      "Id": "732bb668a85044aca53c4db101b43111",
      "IsHidden": "False"
    },
    {
      "Start": "8642fc3961274f0ebc5c001d7cb6aab2",
      "End": "65d2e1cb0ebd419c8d7bcb38e495ddd6",
      "Id": "a3049b7f68fd4ceabbf6ab9160d8ae9e",
      "IsHidden": "False"
    },
    {
      "Start": "28b127cdc2c1493cae3adc5d0e0261e2",
      "End": "c5e2492a30724cda9a39b8eacf610481",
      "Id": "03c013803ad143c9b155ae1aaa7ad316",
      "IsHidden": "False"
    },
    {
      "Start": "5b8c04e32c32474f93ae3489ba96f22a",
      "End": "80a14d027226417b89973cc6b7da1ae6",
      "Id": "9d557bf64c7141c8b73b0a3c1f98be64",
      "IsHidden": "False"
    },
    {
      "Start": "5fa4979070d74358b673d371e262dded",
      "End": "72ed558e0d3444a7a8b6da5f11ea2d3c",
      "Id": "75f7da48cc8f4196885ab554a8f7919f",
      "IsHidden": "False"
    },
    {
      "Start": "7a4b2f83b5c545bead21eb93b2a84d7c",
      "End": "2959ac81f6624f7a90c19aed094313eb",
      "Id": "5a3c78e3ac684e6ebad3e6c15ac71822",
      "IsHidden": "False"
    },
    {
      "Start": "090fa7d8ded44831b9f47daa12e26ff5",
      "End": "9ef22ae9638841cb89f397f458e3cef4",
      "Id": "7119a52dad7d4d73a9b54a0d7d3745d2",
      "IsHidden": "False"
    },
    {
      "Start": "06132b609d2f4607a83da2b09d65bec7",
      "End": "844f6929398e4f0e825eecd5d5ef98cc",
      "Id": "a468bbf6f373425fbc419cfafd4d2f29",
      "IsHidden": "False"
    },
    {
      "Start": "cad32a49f16a41e6b156e4dc59546301",
      "End": "9228cdb7c04148b4b481ddce2e822f9a",
      "Id": "0707b268facc4c1591e6420f47081120",
      "IsHidden": "False"
    },
    {
      "Start": "2f46a4f56f5741e7960dfe81e289c599",
      "End": "0506f72125124314901c88cf0df86080",
      "Id": "917c7f4e17b94441b56e4fa9d27fb088",
      "IsHidden": "False"
    },
    {
      "Start": "2f46a4f56f5741e7960dfe81e289c599",
      "End": "cfb8c9a39d174bf6952003bcc4fbae72",
      "Id": "0fa6fc99d7674c4597e103e141e36f21",
      "IsHidden": "False"
    },
    {
      "Start": "2f46a4f56f5741e7960dfe81e289c599",
      "End": "e0d9f3636d334f5494f55c2d28516442",
      "Id": "8de9f07748f44ca0bfe0fb437f19e1d2",
      "IsHidden": "False"
    },
    {
      "Start": "2f46a4f56f5741e7960dfe81e289c599",
      "End": "ab68fd967b8544a282c40a9071e832c9",
      "Id": "c6d998d74b794d0b98060d7b4de24cb3",
      "IsHidden": "False"
    },
    {
      "Start": "2f46a4f56f5741e7960dfe81e289c599",
      "End": "21f55a8c3b9544d3a98a9c570faa60b3",
      "Id": "56ef9e6f0224409584f98ca74b0553c1",
      "IsHidden": "False"
    },
    {
      "Start": "328f1487b81743fbadad1b96ed62a065",
      "End": "ed85babe648448989b0b6fba6a805e92",
      "Id": "ce210d1857d545409766de64442e277a",
      "IsHidden": "False"
    },
    {
      "Start": "76cfa1a3c18d49b4af279ce340aeeadf",
      "End": "7a96020107e1426f85c9114c4a186b22",
      "Id": "024c276e109745748395aa56f147c913",
      "IsHidden": "False"
    },
    {
      "Start": "76cfa1a3c18d49b4af279ce340aeeadf",
      "End": "cff43d77866e4a0e8c39df1bcbc182a2",
      "Id": "fb43f139c78e4d9780a5d7be8440b72e",
      "IsHidden": "False"
    },
    {
      "Start": "76cfa1a3c18d49b4af279ce340aeeadf",
      "End": "049ae30b830d478d932da14e5e88f7a8",
      "Id": "3913840505fc418cb7775f81ca7252dd",
      "IsHidden": "False"
    },
    {
      "Start": "76cfa1a3c18d49b4af279ce340aeeadf",
      "End": "b372736ff4884b1cb758355996fa088f",
      "Id": "4e8019051358448887caca114c30f348",
      "IsHidden": "False"
    },
    {
      "Start": "76cfa1a3c18d49b4af279ce340aeeadf",
      "End": "6756f94bffef47a58eedfd08ca7bfb18",
      "Id": "e4a36c2b019145e48637d16347e22369",
      "IsHidden": "False"
    },
    {
      "Start": "c2c0fbc6b0e54a719104976a44ef1650",
      "End": "6ea7d201d0014469addaaa35f388b7e7",
      "Id": "31a624075a0a448eaba6161f7cc9cb65",
      "IsHidden": "False"
    },
    {
      "Start": "b91cd701311d491494af7e8a4d9459b3",
      "End": "6f28df3019ea45faa45be8cdb2e01bcb",
      "Id": "17fde9d0b33b4cf4b7ba03b68375feab",
      "IsHidden": "False"
    },
    {
      "Start": "bd1942b6501c4ebba217a2980200e121",
      "End": "33adf4f346574ec99181b37445e996eb",
      "Id": "66989c30634c4bf49f57e9f9f2e70cbc",
      "IsHidden": "False"
    },
    {
      "Start": "cb6423159673415c98d46921847000af",
      "End": "1867ade787314012be4c01e9d0760114",
      "Id": "8c9e9c73eb814d73b8f80b8a9062c7e0",
      "IsHidden": "False"
    },
    {
      "Start": "d08466d2fad94e709c63d4455c4e6582",
      "End": "83e9d72dac1a49ea8563821f03395b49",
      "Id": "19584ff885b4430199a1a9e42309e292",
      "IsHidden": "False"
    },
    {
      "Start": "21464554963948deb503b0c01249b067",
      "End": "1c1c834963334e82862e809b9e19963d",
      "Id": "57a78deb60e74870a1f56b01099ed702",
      "IsHidden": "False"
    },
    {
      "Start": "07a35b52e2db4c169fc4442833333e6e",
      "End": "367037abe8294aeab85c60ee8d5f5a43",
      "Id": "03b03b04cf704ee288bc58bbbf3f370e",
      "IsHidden": "False"
    },
    {
      "Start": "9f407005cab346e482332745379b74d0",
      "End": "d165a85b27b9436b8530d184394d1a44",
      "Id": "b5dc6fe012ad477a939ee9ed60b890f7",
      "IsHidden": "False"
    },
    {
      "Start": "6bbb314b7add4b8aa6a47dd3aada1876",
      "End": "f007337bbac5488d90a34422d30e43b0",
      "Id": "2dd5545fb0ce4eacbeffbd22740e296c",
      "IsHidden": "False"
    },
    {
      "Start": "3f5dc6bd821046b0bd3b9e67bae853b1",
      "End": "ea4547320f6244b2a7aebb22920ff7f7",
      "Id": "6c5dc4a5d20a420d8224efb404457eae",
      "IsHidden": "False"
    },
    {
      "Start": "47a3cf4a39734457a42ffed57522a433",
      "End": "5eb4f4f25ab242b897c4ee9add985a97",
      "Id": "58985903b24d475e950a4024098710f0",
      "IsHidden": "False"
    },
    {
      "Start": "a0f2f6422dc34fa293b206efdbf20fa5",
      "End": "f17c1116ef1741d4bfb4af1940e7ac20",
      "Id": "45b898045d894b5a9eddd01346a7dbc7",
      "IsHidden": "False"
    },
    {
      "Start": "594fa06b8a54432eaa77a5e6bcb855ae",
      "End": "9b8667738b0649259050d292aca69361",
      "Id": "4b8dc756c18f4ae4849a4a75c7575e07",
      "IsHidden": "False"
    },
    {
      "Start": "15de9ac401824a25b880861d2db3dd37",
      "End": "9ddf2856b5db4c9abf0c209d1aac62f1",
      "Id": "cf1082f0e0194631b5a61f0947026022",
      "IsHidden": "False"
    },
    {
      "Start": "b5f54912a9a344b79a993133cee33151",
      "End": "d223d8c8c1394674b513852abc864c7e",
      "Id": "91ec4c3e8e7948c88ce908821467ed20",
      "IsHidden": "False"
    },
    {
      "Start": "20355bd27b144c41adc09a9e306e9f83",
      "End": "79f121e12afa42278cae1d21c890ab09",
      "Id": "9b773a9207db4143833fe1e78e57fe6a",
      "IsHidden": "False"
    },
    {
      "Start": "27f7db82484846c2bd147f9d21b5ae77",
      "End": "530900ab1a4a4f12854649608c843929",
      "Id": "cea50c2db65d4d229cb93972f5ed9577",
      "IsHidden": "False"
    },
    {
      "Start": "4fdc86c168dc4fa785a4ddd947fecc61",
      "End": "52e5cb5c6f1a4a71a6855cecad6eb94a",
      "Id": "3268026bdb834666815cc7cbc635c819",
      "IsHidden": "False"
    },
    {
      "Start": "431f85b0bf224f2c8fddd660a5915a5e",
      "End": "9f868ff9fb914fa8b35e6511b49f50d4",
      "Id": "136caddd797148cbafa2d91ab9ea560b",
      "IsHidden": "False"
    },
    {
      "Start": "0b771470f38f44b1ac3820b1282ac243",
      "End": "9e8cbddec0634cb4b4c4baf39151fb14",
      "Id": "82cb8dd20c9a45b2ad9a49e7a8b19a09",
      "IsHidden": "False"
    },
    {
      "Start": "0896ba833e844ef7a78cfcfb8251a5c7",
      "End": "52528a5c0438451a9c22fd04a3232666",
      "Id": "ff4b2291d0114d5880875cb69348fcde",
      "IsHidden": "False"
    },
    {
      "Start": "ccb9cf833d714c96b221e4de11cbe29a",
      "End": "12462b3d130645919987cdef52dc9c4d",
      "Id": "b7743ce9c2f140feafa8d48c07beea98",
      "IsHidden": "False"
    },
    {
      "Start": "deaafe1d6e2841d9ad0f5e634db76006",
      "End": "913a7f32d64b462984c48f866235ad61",
      "Id": "f14aeffbb34c4678828cb3e75ca6c9cd",
      "IsHidden": "False"
    },
    {
      "Start": "ee8ffd81153e4920bbb08e983b10f260",
      "End": "c2879e44aec24e6e8275c7bd92c1ee77",
      "Id": "61f2a1b6592844a48eafd0911ce8c0a8",
      "IsHidden": "False"
    },
    {
      "Start": "941a570f5f2e43698269dfd6b496dce7",
      "End": "622c0f889d6b4da59887fcc42ee2166d",
      "Id": "841b96729e2a4115857b0793d97da12f",
      "IsHidden": "False"
    },
    {
      "Start": "2492971545ec48ebbd14de11b0ac8631",
      "End": "0cc25d288d844bfa920e85277d09dd52",
      "Id": "ee15c68194144e179ed81b332502356a",
      "IsHidden": "False"
    },
    {
      "Start": "0bde76c24a41485f9c00bf5d8c96b691",
      "End": "3cb17408d1294f7c8f8bdeddc82b7cb3",
      "Id": "94dad53079654c629088f9d1716823d2",
      "IsHidden": "False"
    },
    {
      "Start": "37b6d3fa38244ec8b9bc4894e98f477e",
      "End": "caea9c00d6d34e8a90081464a02e71d6",
      "Id": "4c5fa1a474d247e68b1a2dc164ec02ae",
      "IsHidden": "False"
    },
    {
      "Start": "7ee21e0628b8456dbf6f6b12985537ac",
      "End": "cde855758f4940759ffc0eba7c51e7eb",
      "Id": "f0787f7cb9d84daca7eede03b788c8c7",
      "IsHidden": "False"
    },
    {
      "Start": "2a9cb1da3f894d43bb4d5f99f1b2880b",
      "End": "30b8383799974476830497bad5b749d1",
      "Id": "295fbb943f524e25af1cc4d726ce6a4f",
      "IsHidden": "False"
    },
    {
      "Start": "0936102b0c6447f6b3b10a2a695b6d43",
      "End": "ed5464538dfa424eb272b960d2b7cc97",
      "Id": "43ad7c5c9e43402fa57afe0c0661450c",
      "IsHidden": "False"
    },
    {
      "Start": "8b71248f7d4a44af81b997ad1c8c5784",
      "End": "b070f53a993d4404af52d014441a9cc4",
      "Id": "533db610b3074aba9fef230baf9f9244",
      "IsHidden": "False"
    },
    {
      "Start": "974e2c1994f741deb99a582386dbd579",
      "End": "44fcad86ee4b4501afe19b72ae68750d",
      "Id": "c1f70446c946427d8663021007b20ebf",
      "IsHidden": "False"
    },
    {
      "Start": "3ad8d5c8ae42432bb8781a250859449f",
      "End": "3521498104cf4d4b94a3bc2846327b57",
      "Id": "9409816fea0b41d29c7650696ef3e54e",
      "IsHidden": "False"
    },
    {
      "Start": "5c1a4250379441329cf1599666202f94",
      "End": "648fa879798d45fd99f0fcc0fd0f34f3",
      "Id": "d7993da1d3e2407db76cb29de4d1234a",
      "IsHidden": "False"
    },
    {
      "Start": "657ed06c7b8b40588fb80f8f1302907f",
      "End": "9f9491fe65434fac9c585d19e851d7e2",
      "Id": "01bdacdf0c8c43b2ae82652ae81f34e5",
      "IsHidden": "False"
    },
    {
      "Start": "d56a898dc471498fb478267e1be048a7",
      "End": "4f466d656e7c43e2ae6bbff14c2ee92b",
      "Id": "b3424783340e40bd85b5106d258f0f04",
      "IsHidden": "False"
    },
    {
      "Start": "af7cbcce72e8434bb886cdd315342838",
      "End": "2d6694d957684f87a9e9cac03d4ff6b9",
      "Id": "9a8b75a4c3c44f37a2496d6347143d07",
      "IsHidden": "False"
    },
    {
      "Start": "91210302e16847eab7a0526b327febdc",
      "End": "5df4ab988e2042768b00afd7d765cab6",
      "Id": "06a4061fc52744afbeb4cf6bb7654630",
      "IsHidden": "False"
    },
    {
      "Start": "2bf76b01b9d24c95980649b234b7647e",
      "End": "fcfd493d041e4aca81ee1475957ef716",
      "Id": "c9ee3608df684268abb4f7dd5a605a86",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "91d95b9d608743519c33f8620c81a3e6",
      "Id": "76c7b04b8cc4453c9332cad58f9b677a",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "d7ad8388efa64dd19515c86f5a77ce47",
      "Id": "dc6dc550bd484d35830103bfa6b20f1d",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "077ba4939b3c4bc08e7049a2b1ca6998",
      "Id": "98b69e9e0b914980903ee4a32ee462fd",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "42cfebc598864512a2adfd40000c8c94",
      "Id": "bad6e74936c448bb813421bbf309624e",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "c8f344244ea3432bba8ab48b9b168640",
      "Id": "0db0a8c5b4f2487ea9e8b755e3ba721b",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "344b66f4c3c846bebbb62cebe5f0e290",
      "Id": "8b31966c49d2456c8ed69108cfe81046",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "e8baafbf83414c51a54e822f4f3fb051",
      "Id": "f0bc30e01d984035b2b7720ac2b4ed2c",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "3a75f3f817304c09bc07ae475be1f78f",
      "Id": "ea04ff3d05ea4d2790bd874f92f6e51c",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "d2b6bee54ff5407db508d70a63028ae2",
      "Id": "c6b835dc931a436cb4d7d75bf99e19c7",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "d87e5d88946849bdbb21530696b5233e",
      "Id": "9d69ed74092d496d88fc41a139be65a5",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "c5cd2220e51547b08ff31003648a1262",
      "Id": "6f381a6c25404bffbe9b0acc95ce6094",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "53bd6d34399342bdbae857749192b2c0",
      "Id": "1bc2e5f6a270408399637f75172f8aa7",
      "IsHidden": "False"
    },
    {
      "Start": "438c5f91de99434c9820502f1f6ad481",
      "End": "3a53639acd03473bbe758f55190822c1",
      "Id": "b15145f542dc49e486adfdcb2c800d1d",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "379ef193a8de4f2a8f82d6f688bc2cd7",
      "Id": "cc33d4cab32147c39ba605f1e1051d62",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "1a0e49cae510499d818e8a669d9d14fb",
      "Id": "7ac9fb126f684c1f86da9991d4703e0f",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "ea6fcb5f934e438da9dcde10fae6dbd0",
      "Id": "edeef1d1b72944beb7b3762de24f08f2",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "d103292e11244998813d456f5faaf3c3",
      "Id": "c6bb0212b9db45a6befcbf98a9a5a64f",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "75534b6257ce4d6eb5615dda6cf1492e",
      "Id": "0efc6f8dd68d432e8147d9547d2d2628",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "d0f4652db2a14ffb99b454c1144cf0cb",
      "Id": "8b517e56780c4bf59b4cccefeacf3da9",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "034f41891df347c5ba45b587cc770e68",
      "Id": "e235ab0dfe88495b83678f1bebd62634",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "233afff8ba784102a1e2b299c9f4ee58",
      "Id": "142698ea522d4570ab477778135f9222",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "45bf6e02e42247069ede2adb919d5572",
      "Id": "fb74a635ef014450bc5f261963526ae7",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "6d617e719e5a4bfaaaecc2881b4ac739",
      "Id": "0ff2a45dced74eb28e3757533aeabd33",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "21d7880f6be24a529ef1f3f00fd10bb1",
      "Id": "22c5dce5f4f647f79db6a919a10f3bce",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "ca87a9249593440ea1e9f0aa85fe9931",
      "Id": "77cfaddbe7aa4a6da2cddd8c6dbd9917",
      "IsHidden": "False"
    },
    {
      "Start": "ba90e2c084ff4889b3a2e76e25fa44a9",
      "End": "98597a055553423d9af33b7cf3e2762e",
      "Id": "cd281a3c56c44ca69c88567a6c9877eb",
      "IsHidden": "False"
    },
    {
      "Start": "8083e515df024aa99a12489730739929",
      "End": "6caa1d3c588b48d9b885ec90bae4016b",
      "Id": "a79e1b5368f44cf38f622eaae6666316",
      "IsHidden": "False"
    },
    {
      "Start": "67687313a1724b8e97e50f3edb1afd49",
      "End": "d0adbb13263b46a891787377057a9451",
      "Id": "0c9f8aa1fc924520b39beaf419fa6324",
      "IsHidden": "False"
    },
    {
      "Start": "a8dc8d9ba0e743b2b0227fb40cc2931c",
      "End": "fea81ce838a94525b1ca1388de983d4c",
      "Id": "fedded6f94ea46cfbed6a6f5ff8bb0c2",
      "IsHidden": "False"
    },
    {
      "Start": "096957a335b6414eb41a1650364f4c64",
      "End": "31b12756167d4259a409e50c5d0c6fd6",
      "Id": "1f7415865a764ee5bcf45b9c293e1431",
      "IsHidden": "False"
    },
    {
      "Start": "9c6971f66f094bdeac9c3f67e81c3889",
      "End": "36952d512a6841df847c1ddfabdaaa53",
      "Id": "b9d87e63071e437f9a629aecaf4f7147",
      "IsHidden": "False"
    },
    {
      "Start": "fef1d2aa51ac4632a574919c2c224d01",
      "End": "da4be8d121944d29aee66ad790c1b975",
      "Id": "0294324f6cbf434ca3cefe32d30990c9",
      "IsHidden": "False"
    },
    {
      "Start": "87da597e25624b99808882f8d056d9c8",
      "End": "b42a29372357447b969ae37c358237a6",
      "Id": "c824a5577ddf470580c1e555aa6eb827",
      "IsHidden": "False"
    },
    {
      "Start": "74fbebe9555f4cf6800199c440a86498",
      "End": "8b11ec51e986450db3b0845e2631aa76",
      "Id": "6845f1d0a2c34267975af97484b7c418",
      "IsHidden": "False"
    },
    {
      "Start": "9bbf382fed424a4dbbaa60e487864661",
      "End": "b7a63ffe6a454ae7bbfa45b16969006d",
      "Id": "7754094c354d4c7ab2e15fb33c869d6c",
      "IsHidden": "False"
    },
    {
      "Start": "968a6dc728d24be39834ad548b6da639",
      "End": "a9ac5ac532ea4b948bf7260eae23a046",
      "Id": "daafe5c8e9124e3e835e62b8c97cb5f3",
      "IsHidden": "False"
    },
    {
      "Start": "4b31314d675245ce9261d98ed3b5808a",
      "End": "9dc694c2e90e4ffcb8f5104d78d152c6",
      "Id": "019ceae63ef14c4d87c597d3843f4cf3",
      "IsHidden": "False"
    },
    {
      "Start": "78586aaee1474ac4aec13451c89c7bfc",
      "End": "993071ca267a4f599aac4657289be8bd",
      "Id": "f31d63e002544589b893d36d20ae990f",
      "IsHidden": "False"
    },
    {
      "Start": "7d1f435e6495468d8011773e25c110d5",
      "End": "058ad19d32214445bd422fd7c6a150c8",
      "Id": "72d8fc1ad1fb49159eb5dfe171a3fba7",
      "IsHidden": "False"
    },
    {
      "Start": "dea3405c6a3f433a97c2685856eb5ef8",
      "End": "bb3dbbecdbf3471c8eca2894937b6b31",
      "Id": "f674a6afb6714e56aa4f3dce36f2672d",
      "IsHidden": "False"
    },
    {
      "Start": "3594a2f99acd48a4a9b9b4f0cb528fd2",
      "End": "38b0044833ad4efeaab2ab185f4ffd60",
      "Id": "4c602112de1242c093dd36c20fb1933b",
      "IsHidden": "False"
    },
    {
      "Start": "2163dc91b7be4544b7a23fc247088cc8",
      "End": "25d430ebe9844361b6aecd296ff10260",
      "Id": "6059ca18e1944758881dcca542e0d74f",
      "IsHidden": "False"
    },
    {
      "Start": "56474a77b8814ab7bc3e8076bc192d18",
      "End": "c0cd603598bc4d0c8d787d0e490778ce",
      "Id": "2ef3efd57fdb40e8b9b28716bc659875",
      "IsHidden": "False"
    },
    {
      "Start": "4e14cdbc5fd8456c994799e1751af9b2",
      "End": "ab69ae58dfa04df0a623464fce7309f0",
      "Id": "6aff8decabf345e4b1524f27dba6ffef",
      "IsHidden": "False"
    },
    {
      "Start": "0e6adc738382489393183a03dbb04c79",
      "End": "d0968e0e98e045678ec4287ef988b9e4",
      "Id": "fb90f5ffa2cc488a9bde0a1b9a209a54",
      "IsHidden": "False"
    },
    {
      "Start": "0d93b0c2a6ac4bcfa6cb5419e8a912f9",
      "End": "b6162ef3e3c34fac8673d0b451538b05",
      "Id": "fe38da4530814b018431880808c2048d",
      "IsHidden": "False"
    },
    {
      "Start": "6fea013196f14de59956a6ebcbbd1849",
      "End": "52cd9c1e7ba04bfcb77188ab808956d4",
      "Id": "6475e1384e4c481caf3cf4d8616e7447",
      "IsHidden": "False"
    },
    {
      "Start": "c8f48b070b3a45e7bced0272262ef67f",
      "End": "9f876147e6134ec7b885523c56b6105d",
      "Id": "c01354fc10dd4704822b6a06ae7a8fa7",
      "IsHidden": "False"
    },
    {
      "Start": "593fa7329e6844bcbafc7b27bed5b082",
      "End": "1d5ec6e4babe447d85722254da7529ae",
      "Id": "a71e9878ef1948418dfbac8cf78e541f",
      "IsHidden": "False"
    },
    {
      "Start": "91cacb7c77bd43f2ba2a0bfd3f1d521f",
      "End": "16bb832cfc784695851c09232f1c4546",
      "Id": "0d8af1d7dd5e4c6d8968fbc74f8b3758",
      "IsHidden": "False"
    },
    {
      "Start": "6e7444450421428e9ef43dcbe135bbba",
      "End": "7a8dd46b9f174f53922996eafaef5257",
      "Id": "952e909d5e12438997402c4164538548",
      "IsHidden": "False"
    },
    {
      "Start": "a0b0cc2ad3564b46afe51c84f4e3db74",
      "End": "cab1ec2138d5479b996628c84326ba6c",
      "Id": "56aca58d7a184ab492f2ccf99de8cab4",
      "IsHidden": "False"
    },
    {
      "Start": "9b206b55d6d846df87cee400e131f852",
      "End": "88fee51dc91448368760ac326059141d",
      "Id": "a4437e67b66d4699b7c0b352b84e226c",
      "IsHidden": "False"
    },
    {
      "Start": "99bea8e310a8434198587aeb5ad1e8cb",
      "End": "14fdc9513a32402884f7acee31b5d6ea",
      "Id": "48ba8a5538694137a20046f17197b6d2",
      "IsHidden": "False"
    },
    {
      "Start": "e00c6b5f5fea45808034c320ddd7d3f8",
      "End": "e675e2225aab4a229024b4d4194e5429",
      "Id": "3f3cbf7ad10f4e1484649f8a2832ad0c",
      "IsHidden": "False"
    },
    {
      "Start": "66f05ef7709343beb38aa0098616e10f",
      "End": "98208ce7099c4c40a24626dc4f214215",
      "Id": "d644adea168840039ed1dca0012d2507",
      "IsHidden": "False"
    },
    {
      "Start": "76d46dbe2dbc40d49214ae83b228c965",
      "End": "9a492991e2ba4e8e95642bf5b1b3e5dd",
      "Id": "60fa71f3d45146c1812be9dc66bf38bb",
      "IsHidden": "False"
    },
    {
      "Start": "1a0df01904c74fe9a93ce2e9666753ac",
      "End": "27f76b355c374ea79d39545d04aade6b",
      "Id": "fee82ede0ede44a1ae71068a97cb9144",
      "IsHidden": "False"
    },
    {
      "Start": "d5cefdc0814340ac81a9d75fc9b0444a",
      "End": "a7d9d3dca2034678b452552830058444",
      "Id": "e332ef80798e43a1ab910ed8525052c0",
      "IsHidden": "False"
    },
    {
      "Start": "b8519f7119b3496489fa04613e0fae03",
      "End": "9cb27541be59470ea49b5828502a2f39",
      "Id": "3d73fe2f9d8a431eb35cccde99d2e91b",
      "IsHidden": "False"
    },
    {
      "Start": "b0bb0e7c1f16446c88f71c8fe84b30fd",
      "End": "7628e0f579e14583a608ac2035e210cc",
      "Id": "6f445657c2e8459ba32d518d466c07b1",
      "IsHidden": "False"
    },
    {
      "Start": "4fb9748274304baba1bc8b7e76849798",
      "End": "6ecbc532b3d9482a93b042804818da6b",
      "Id": "a0362afca9094e9988e8e26fb2159837",
      "IsHidden": "False"
    },
    {
      "Start": "05f93a10951747da9991d7ebd08e6ab1",
      "End": "fa32a2fc968e47f4b0dc140c11e06ddb",
      "Id": "b409e78408ed4e9aac43434332e0ff2e",
      "IsHidden": "False"
    },
    {
      "Start": "c7e4591806104ebba0f5c3d24f89f292",
      "End": "c92b7cb6a36e497da44985daa7fdd700",
      "Id": "97045afb45924779bc8c09d771be0dc9",
      "IsHidden": "False"
    },
    {
      "Start": "c54bad90363842a5aa9ffe48e2203058",
      "End": "518c8c4ce0394e5398ba514aaa3fee91",
      "Id": "81fbdaf2cfbc4f6791bf83ec44240e18",
      "IsHidden": "False"
    },
    {
      "Start": "c801efaec5374f3ca8d5607a88221da5",
      "End": "fbc3e045129142cbaf8b0e7f1b89285c",
      "Id": "f44dae0e1f8647f79d3a4b6d84b31824",
      "IsHidden": "False"
    },
    {
      "Start": "f754a4a0aa77422096a0392abf4eaeb3",
      "End": "6804b69be1e84d72aa5d7b98a0c3c69b",
      "Id": "3f845ed844a342069d77ece4e7771e81",
      "IsHidden": "False"
    },
    {
      "Start": "9fa6a7664ab044b0a36e926b4956e507",
      "End": "6e1573e5303740888c2628b404b89670",
      "Id": "ede7a5b000a34e7facc99c8653cfc642",
      "IsHidden": "False"
    },
    {
      "Start": "21b04e8899324222b22fe6d5e8285d8d",
      "End": "0527decd9eb64ffb91b660836a40a2a5",
      "Id": "5d41e1ca062046538c8e5a67424f31fc",
      "IsHidden": "False"
    },
    {
      "Start": "2a28a2d452fd4e4c92ee616bdda9e1cb",
      "End": "d4a7037603bb492e9113f38d8dc23787",
      "Id": "fc5f28e4b6504b55b66e92525deedb3a",
      "IsHidden": "False"
    },
    {
      "Start": "3d0f548a771d4029991700ef9c6b487d",
      "End": "d5ef4fb0594548628876398a4b699b21",
      "Id": "06e06cb4ee984631b483b2fa93efa822",
      "IsHidden": "False"
    },
    {
      "Start": "c690b99a488a4b299a21f60ff7f10970",
      "End": "fad37fe256a446a383e100127d305407",
      "Id": "6f384a3134b1482cb6a41ed2b1f7ea40",
      "IsHidden": "False"
    },
    {
      "Start": "0db82a0dcb9a429f930ee6b7093084a3",
      "End": "9759258c491241859c790977ead35fe1",
      "Id": "5e2128f1f1d34bea9607f7282d8a2515",
      "IsHidden": "False"
    },
    {
      "Start": "de781613dfc54bc094ced65d0b974d5f",
      "End": "2b47361538ec4116aa7f4f568077814c",
      "Id": "a056b8c455104881938136e2265fefbd",
      "IsHidden": "False"
    },
    {
      "Start": "ee403e09449e4ff895eced69ebd21f04",
      "End": "b0618d07a8ac4d60a95cb99376174098",
      "Id": "5f484857e00640279d8f82b381789e93",
      "IsHidden": "False"
    },
    {
      "Start": "4836564d09b24d2898ae025da7640060",
      "End": "488dd98b6b27418ab73a456484a14023",
      "Id": "bbd7a72123674e3291b68976ea683634",
      "IsHidden": "False"
    },
    {
      "Start": "200ce610c258449ea8d8b7d9da91f239",
      "End": "6aafc4ae92fc4fd2bfd3cfff2d19a8ba",
      "Id": "b56a18d65fc04fb881fca1b8ae6161cd",
      "IsHidden": "False"
    },
    {
      "Start": "f862d300317d476a9cbf0133ac3f14ff",
      "End": "7665e3b47c74443d9205e74aa7118543",
      "Id": "b0893f06f843400c900f2245da1739a8",
      "IsHidden": "False"
    },
    {
      "Start": "d6689afdb7d347f9be21e4b8509c11cd",
      "End": "b58bcce142e3412f893f0f649b59ce72",
      "Id": "4104a3bfba8a48b1ae5a413ca128f62a",
      "IsHidden": "False"
    },
    {
      "Start": "c3f14cef492a47c0bdbfe8b6fd0a03eb",
      "End": "a953d3de40bf402eb6492116b3691846",
      "Id": "4dd281276787435886bfe61e42c04608",
      "IsHidden": "False"
    },
    {
      "Start": "a75a224cf1174323aa32041183bc2596",
      "End": "08ad5d6891074ee59c0295a93e999f0c",
      "Id": "180878c3b4b64ba3b7ae7e2e1563384a",
      "IsHidden": "False"
    },
    {
      "Start": "a6fd67f7046541dc9976dfa0dff07e27",
      "End": "d1583c27b8f34e38a431e1bbf4feded0",
      "Id": "38578d10d55c4b99ac20bf4cea58f5d3",
      "IsHidden": "False"
    },
    {
      "Start": "316c7beac4ec4be6997d27414d79cdb4",
      "End": "1156534774894dde9340cf479601b219",
      "Id": "c4e38703b3484b51a4443c71f8a2d05f",
      "IsHidden": "False"
    },
    {
      "Start": "22527f110b274b2781293a9924f464d6",
      "End": "d66f25fea6c84e5595862b18f30633f8",
      "Id": "177b35a630e94bc3aef4496306cdb49c",
      "IsHidden": "False"
    },
    {
      "Start": "65d1987decc3422fa06af8fb1d848ab5",
      "End": "74d5c0466df445a58e18d5869eb378f7",
      "Id": "90ecffb5d12e4dd69c69cf5140a80de9",
      "IsHidden": "False"
    },
    {
      "Start": "37044fc34c0244088140bddc30f19fe4",
      "End": "b67cd3064db044c5855f31ed778603c7",
      "Id": "88c7cfafba494c8da0c9b4dea1a27f00",
      "IsHidden": "False"
    },
    {
      "Start": "4a7b5e073c4e4579b48547ade53a0b40",
      "End": "2ac58a7ee6b14329b0679ac19000f405",
      "Id": "6ef88d8731214d54a24a1451adf20493",
      "IsHidden": "False"
    },
    {
      "Start": "cccd1cd373764f55ac98a1f36800d405",
      "End": "aba57b004f844b609383ae0a4c33094f",
      "Id": "8a3b5de059cf44818b8ca5c6b5d73377",
      "IsHidden": "False"
    },
    {
      "Start": "e145e18fb6d3405baba91f25bba78347",
      "End": "520c96f7faf645cfa505919cf2f88c27",
      "Id": "383d37cfe673499895a7520bfd9d5d31",
      "IsHidden": "False"
    },
    {
      "Start": "ccadd1a6c09c40ae8df17faa787c37d8",
      "End": "6e1edc430c464369b183d7e1119ee79f",
      "Id": "868def3b3c5e4690b32a6838ff555819",
      "IsHidden": "False"
    },
    {
      "Start": "d9cea550b9f04bf390f89d2d5ad43461",
      "End": "6ff708dbeed04f8a9d2913aa397ba1aa",
      "Id": "3b93f3989aca4360aff7f9729cfdd35c",
      "IsHidden": "False"
    },
    {
      "Start": "d46cf503a2db4fedb449f68421c3787f",
      "End": "0002e420a975404d8a484312eb26f018",
      "Id": "e00f8bb3db444669b4b3101f2e66f876",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "2213a11239bd457585b1fc5f4dc83682",
      "Id": "f403e49b1f024e95b0454be0083b73cd",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "c838072c273942e787a00f7170abdbc5",
      "Id": "b6244dcd14fe4ff2adff4f0330b94840",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "96b96a713f10476fbf41d83495810380",
      "Id": "92f1308a30484cd99d53a5e4b59d8164",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "3e0275c10fa74af4bed41602de8a92f2",
      "Id": "83e88701b6a44e04a1133d61d0898503",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "3a30df6e7b5c4556a357cb1b7ec618c3",
      "Id": "d2ee11c630ca4abda6c21958ee1da756",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "fa7a0f855f7840e3858672efd7085829",
      "Id": "ba2ecab3982d42eea1c527d944005c3d",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "cb58139e2b5b4ca5b63ca808ead91c1a",
      "Id": "3967b746603a4482bca0c3ac8724a70a",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "1c6c9b4ee1c4468f9c4c69e50d9ce00d",
      "Id": "e3401635263b47568423cd0e9fc93633",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "3e1e8361912d453f8052e34e4755ac6a",
      "Id": "df212e5683e045d49d5c14cd3e71370f",
      "IsHidden": "False"
    },
    {
      "Start": "03c9dca730134eefa56864ad48ec3e1a",
      "End": "f57a403ee3ed434b825b4cab3a1da52a",
      "Id": "e1dbcdc3f16c48dfbe4eb6401277608b",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "2f82dcd0c0b149909ab2838dbc9e22ab",
      "Id": "ffe4454cc1074f7b9828d980cb5520c1",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "927eb979cc214942a03056e3e776ff68",
      "Id": "61d979d756514af68df5eaaf97c73afc",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "e029898cba304d619879757dc923148b",
      "Id": "b0db41560a82476096f9cb2b827fb482",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "129e958177de47fbb67a9ddd7e6eee06",
      "Id": "150072fc12a147c8917d7f5140c7aa36",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "54c42b5cb86e4ea5b63fa303cf08f3d5",
      "Id": "78420c82f36645789f70d06ba6a370a6",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "bbe54403953c4fb5a4526a7d011b2250",
      "Id": "edf3a5eca5ed4672a10afcf376128de3",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "dc067228f065433386fb2c6d2a7e8e06",
      "Id": "6f420d7f9f364759979b279405bb4be5",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "d18fba0ef8a94898bde7c6d12c9ad302",
      "Id": "ea139b3ef4ac463fba08fa345de28780",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "11377d7b571e4274be2e13045c2928a9",
      "Id": "4d48aaa41d6541548cf8cd07eb9eba9f",
      "IsHidden": "False"
    },
    {
      "Start": "61d579be4fc642c5a684714b137deff6",
      "End": "ec23b914852f494ab6bbcd106c005a6d",
      "Id": "62b6dfb8e6484031a5ef5fabd3df3888",
      "IsHidden": "False"
    },
    {
      "Start": "d336a8f002694b3da0ed9578ff2c0e5c",
      "End": "e9f3194e0d2f47cda67d029555356a64",
      "Id": "33a38e4d4682475f9ffe610bc786c1f9",
      "IsHidden": "False"
    },
    {
      "Start": "d336a8f002694b3da0ed9578ff2c0e5c",
      "End": "fdc47f6098b24ef78e218c774c456015",
      "Id": "8545d85c7c1142f0b16926688cd859ed",
      "IsHidden": "False"
    },
    {
      "Start": "d336a8f002694b3da0ed9578ff2c0e5c",
      "End": "7014507496b24cf9913cf120b5dc8289",
      "Id": "fc7ac47d82304789884fc7431a8f3ae2",
      "IsHidden": "False"
    },
    {
      "Start": "d336a8f002694b3da0ed9578ff2c0e5c",
      "End": "10e2e038715e441ca0ea08d41f538f31",
      "Id": "dc73f022899145a885c760a73d58fcee",
      "IsHidden": "False"
    },
    {
      "Start": "d336a8f002694b3da0ed9578ff2c0e5c",
      "End": "fcd87b896cb947a89291cd92dcb73f79",
      "Id": "b6a1a59370bb40ca8bb9ce86bed7b2f2",
      "IsHidden": "False"
    },
    {
      "Start": "1376d56e63104db9b36a1cc3feead7bd",
      "End": "eca4a53c93cc4b4f82c8a305c5eb7d4a",
      "Id": "a36f086b31a34138b82deeec9381cf4c",
      "IsHidden": "False"
    },
    {
      "Start": "1376d56e63104db9b36a1cc3feead7bd",
      "End": "ee09f57e207b492bb63a44bf01660048",
      "Id": "501eab7ac6d74d1180a0577c6ed25e03",
      "IsHidden": "False"
    },
    {
      "Start": "1376d56e63104db9b36a1cc3feead7bd",
      "End": "21c9fe35f46d4a15a42bbd1e41125dc1",
      "Id": "57091824813e4054850e640f0db5570f",
      "IsHidden": "False"
    },
    {
      "Start": "1376d56e63104db9b36a1cc3feead7bd",
      "End": "64ed29fd28bf4a3ca596285943fbf3ce",
      "Id": "8a218405816c4470b6ccdc8e6dfad230",
      "IsHidden": "False"
    },
    {
      "Start": "1376d56e63104db9b36a1cc3feead7bd",
      "End": "97dfa14f9a3e4bcc939437b77495d6a0",
      "Id": "fa2f32bf5bde49538b7a0b3bc4faf1c6",
      "IsHidden": "False"
    },
    {
      "Start": "1376d56e63104db9b36a1cc3feead7bd",
      "End": "d3ff7b0a6dd9468bb3a3f6597e291cb4",
      "Id": "fc8b63ab98cc466f8c8426204c285be9",
      "IsHidden": "False"
    },
    {
      "Start": "c68e2e5f5a2b44598efc29ffa9bb7879",
      "End": "a30617d0e9e544418745877c694236b6",
      "Id": "6014de69f39e4b8daf4d5c64ae9a63db",
      "IsHidden": "False"
    },
    {
      "Start": "c68e2e5f5a2b44598efc29ffa9bb7879",
      "End": "c42fd61cbcad41d1969d2d527715834b",
      "Id": "2ecb8457af6c45bba0f7ef4aa15c6028",
      "IsHidden": "False"
    },
    {
      "Start": "c68e2e5f5a2b44598efc29ffa9bb7879",
      "End": "99587a4dacad4bdf81c6685f7308127c",
      "Id": "dd57b49a2bc84d2d952215ebc8ec9b4b",
      "IsHidden": "False"
    },
    {
      "Start": "c68e2e5f5a2b44598efc29ffa9bb7879",
      "End": "e5ae2126f6d241639e32344c3427a044",
      "Id": "d1dd209a405f4f06aee97bf462e08370",
      "IsHidden": "False"
    },
    {
      "Start": "c68e2e5f5a2b44598efc29ffa9bb7879",
      "End": "d8cefc7338d74643bb2eacbb52d67127",
      "Id": "59479be1ca6e4916b5203d6cda7d04c9",
      "IsHidden": "False"
    },
    {
      "Start": "1572f00f271c4b4c9b8312451a318664",
      "End": "6305152de3fc4b4ab481280781aa5343",
      "Id": "690bd533af2045ba8984607391fe4690",
      "IsHidden": "False"
    },
    {
      "Start": "1572f00f271c4b4c9b8312451a318664",
      "End": "ae8008041a084594b706b123f36879b8",
      "Id": "3fdf54a216964be8bc6ca0c0d3a01d0d",
      "IsHidden": "False"
    },
    {
      "Start": "1572f00f271c4b4c9b8312451a318664",
      "End": "f94d28e9c9db4d738d27144eaef21935",
      "Id": "4dfc45308e6242b18847e062d75e5a8e",
      "IsHidden": "False"
    },
    {
      "Start": "1572f00f271c4b4c9b8312451a318664",
      "End": "093821c5c73b4f9e9f3b03bbc2bdaf0c",
      "Id": "00b65f75bf504a3b9c9b6f7dfa4608e5",
      "IsHidden": "False"
    },
    {
      "Start": "1572f00f271c4b4c9b8312451a318664",
      "End": "2217307cd7c548818fda1786bc6634a1",
      "Id": "2b40162f6e3c4eaca8d5204fd6f0446c",
      "IsHidden": "False"
    },
    {
      "Start": "679465a45162433fb913e7467c917b57",
      "End": "3edc13aa3f744416827274166a432300",
      "Id": "1ae830a48ba749c69db515b0f70eb2b5",
      "IsHidden": "False"
    },
    {
      "Start": "679465a45162433fb913e7467c917b57",
      "End": "660ee9eff9c848c6b481fddbc665ca5e",
      "Id": "27e324e0945b45268ba1ef63cdf907ef",
      "IsHidden": "False"
    },
    {
      "Start": "679465a45162433fb913e7467c917b57",
      "End": "9dddb0f3cdb84e67b6f53c4a01e9dcea",
      "Id": "0a8066467dce45679cef7a94b779c1a3",
      "IsHidden": "False"
    },
    {
      "Start": "679465a45162433fb913e7467c917b57",
      "End": "a8b656f317ea49d6b79877050a6b209a",
      "Id": "e8231415cce246b3a61e86a03e389cc5",
      "IsHidden": "False"
    },
    {
      "Start": "679465a45162433fb913e7467c917b57",
      "End": "301df390587d46a2aa600dbba4a7f8a5",
      "Id": "4e16e1f20bdb457b86e2c3d22e638a13",
      "IsHidden": "False"
    },
    {
      "Start": "007f684aad92452eb872adb395e2f7a3",
      "End": "d0b2d0405dac4a9a9c5ed777eeac9d09",
      "Id": "402415ab2968445b830f7309ba235389",
      "IsHidden": "False"
    },
    {
      "Start": "007f684aad92452eb872adb395e2f7a3",
      "End": "f84f1ce0c4dc4c81bb268960c18585c2",
      "Id": "65f5f7e33eb94fd29720fe4418c6ae0b",
      "IsHidden": "False"
    },
    {
      "Start": "007f684aad92452eb872adb395e2f7a3",
      "End": "c9da3eb755dc4b89a137babaad2f1bc6",
      "Id": "99aa04f9fff24b3ba34b84972623a5e5",
      "IsHidden": "False"
    },
    {
      "Start": "007f684aad92452eb872adb395e2f7a3",
      "End": "adb488acd19748c985b9080be903831e",
      "Id": "3d09ad03b3eb4a96bce2ecd8fce1f861",
      "IsHidden": "False"
    },
    {
      "Start": "007f684aad92452eb872adb395e2f7a3",
      "End": "9e6f77636feb46e095e38670d588b78e",
      "Id": "822f2db71e9e4f268f4f34a22c0d961a",
      "IsHidden": "False"
    },
    {
      "Start": "007f684aad92452eb872adb395e2f7a3",
      "End": "358f522c501847eca65e892cd4118585",
      "Id": "be3ff21697d6408a8877f09e9c070d12",
      "IsHidden": "False"
    },
    {
      "Start": "007f684aad92452eb872adb395e2f7a3",
      "End": "1aa1b1039d084ce6bffd1577f9bd7dce",
      "Id": "b2d5a9d9298e4253a9ff568c57a6df48",
      "IsHidden": "False"
    },
    {
      "Start": "007f684aad92452eb872adb395e2f7a3",
      "End": "aec3c7cbfedd42d3b5c5fd0f96a5b372",
      "Id": "7810275bf0974069945ff2cc93cd1037",
      "IsHidden": "False"
    },
    {
      "Start": "7313bfafb36f4c8bae03fe5aeb38e100",
      "End": "633cd65ff4664e67b6708396cea2c551",
      "Id": "bcbed347606543178db0c86294760c1a",
      "IsHidden": "False"
    },
    {
      "Start": "7313bfafb36f4c8bae03fe5aeb38e100",
      "End": "e4578c92a2ca44de9be72a19b1c5c372",
      "Id": "e0dd314fe25d4244839feb48eba77221",
      "IsHidden": "False"
    },
    {
      "Start": "7313bfafb36f4c8bae03fe5aeb38e100",
      "End": "2ab37c026b05446e858ff63456620fe3",
      "Id": "427959452a7c49f8982df7101d760191",
      "IsHidden": "False"
    },
    {
      "Start": "7313bfafb36f4c8bae03fe5aeb38e100",
      "End": "348566cbc34d4aa48a5924b866d48b7c",
      "Id": "0215c8034836491ea401b17f0e1264a6",
      "IsHidden": "False"
    },
    {
      "Start": "eaae4605e23f48f9979d7818f60b41b2",
      "End": "c83c59ee025c4077b00c602663e054b3",
      "Id": "afe0b1792a2f402cad6981bc95c715bb",
      "IsHidden": "False"
    },
    {
      "Start": "41fab5b6121f4d90b41f24d4f473edc3",
      "End": "8a4947c271414520ba89518b2ed198f7",
      "Id": "50a1a9413f434381bbdd8a94eb213588",
      "IsHidden": "False"
    },
    {
      "Start": "f6511c6d8679443684b6ca69b8cf9255",
      "End": "8b2fd38422bf42fca105b4523c7b0d1a",
      "Id": "da5e34722e834fc399c545c10d5d4c8f",
      "IsHidden": "False"
    },
    {
      "Start": "440f8c15b36b447d94e3981521b8b9a5",
      "End": "a530e3e8689f43c3bb4d3c937a0754ba",
      "Id": "990a7226a2b5479daa34a5200ade6da4",
      "IsHidden": "False"
    },
    {
      "Start": "a40aee3d0d8b4f828cd5f536b19398ec",
      "End": "f8493f95ff654659af98547babe634b3",
      "Id": "ed25c86af8384b92985777500a5ca275",
      "IsHidden": "False"
    },
    {
      "Start": "3f277886395741b5b5c065aa2eda2be9",
      "End": "10c89028a14348e8908f6b68f4658d58",
      "Id": "0598b90e3562481a8e05cf9f933ebe3d",
      "IsHidden": "False"
    },
    {
      "Start": "e61a2a5c3fd1417cbdf26dfa5820d387",
      "End": "e8fc9632bd054aa0ac4f7bd88ce4aa6d",
      "Id": "df12be4e915b418db581997f6144da47",
      "IsHidden": "False"
    },
    {
      "Start": "e61a2a5c3fd1417cbdf26dfa5820d387",
      "End": "bd7800e782d84dbe8a45fe84a9a618bd",
      "Id": "2af34d930c634694afac839648836d82",
      "IsHidden": "False"
    },
    {
      "Start": "e61a2a5c3fd1417cbdf26dfa5820d387",
      "End": "d5f30fbdd63d4cac8c628dd054bc1528",
      "Id": "09edc291775b429a8a1a96c845365a97",
      "IsHidden": "False"
    },
    {
      "Start": "e61a2a5c3fd1417cbdf26dfa5820d387",
      "End": "9e832e65e5f04a75af9935aa0117689c",
      "Id": "7b9a6c90410941c5a5d8d2aa4e82a817",
      "IsHidden": "False"
    },
    {
      "Start": "5d03b27661004853a06305a15dc5cd1b",
      "End": "903386e4176945a580133eb643a1eb50",
      "Id": "05af1bf8b83a490a97bb6d93ec3cb480",
      "IsHidden": "False"
    },
    {
      "Start": "ce9c85468c9a46cb9a91f94477697e66",
      "End": "7d0a38fb28924b8ebc4cff599af88507",
      "Id": "26c05788f9c04f40b7c8739fd9682738",
      "IsHidden": "False"
    },
    {
      "Start": "1367e00902a44f559d3acdd3bfc335a7",
      "End": "93db6eed036146668a6082d01c34d483",
      "Id": "be6a6acc6495400fa81308fef39d78b5",
      "IsHidden": "False"
    },
    {
      "Start": "4f72aa46044e4a9ebe9e3411301c83c8",
      "End": "62af6b83ae024eafb098bce020fa95e9",
      "Id": "883904a145074e4f98fb41f28a34ba26",
      "IsHidden": "False"
    },
    {
      "Start": "39680683dd4747399843bde396235c2d",
      "End": "8d4a76f66d5c406fb6f20d197c6a379d",
      "Id": "10db1708eb5d4ded8bb00d8902dc5d2b",
      "IsHidden": "False"
    },
    {
      "Start": "dd4c973735324be5bfa8f4dfebca45e9",
      "End": "b3bb5b1d0cf04ea399a1032f7c2248ef",
      "Id": "3216a16335e24ca0a3f282fd8163c46b",
      "IsHidden": "False"
    },
    {
      "Start": "49f4f0a62d7e4aa2b92abd658b775ceb",
      "End": "695dcb8e548742b7891b602b1ebc8f85",
      "Id": "d18d45bf223a46ff802bcc97aaae605f",
      "IsHidden": "False"
    },
    {
      "Start": "87167a2633ca44f68f4f617a431c4fc2",
      "End": "0f94c5d44fa746ddb28c8a0424e07b50",
      "Id": "348c8ff447984c8aaa358905b6329ea7",
      "IsHidden": "False"
    },
    {
      "Start": "2d75713c584442e7a1e01c7407c72c3c",
      "End": "db597c9789e04633b8a0a79a9e06ccb7",
      "Id": "e6be075183d1408cb04a959f23a4ff2a",
      "IsHidden": "False"
    },
    {
      "Start": "6b4fe3dd95fe4d95bdfdcb567c7b486b",
      "End": "4e3520a585f041dfbf62343624d8232d",
      "Id": "76b7dc88a1214be98d80bc6dc8e896bc",
      "IsHidden": "False"
    },
    {
      "Start": "16cb74ac9ba640f2a9465939ad8d31d8",
      "End": "99e061e1f0c2405791c025c50e2b5f92",
      "Id": "7b7397aafc1c4970817c0a94abe27c30",
      "IsHidden": "False"
    },
    {
      "Start": "16cb74ac9ba640f2a9465939ad8d31d8",
      "End": "c1f5e074f1f64ea5b1539a1b3570454f",
      "Id": "c9fa6e8c918e4d4bb448f4b113170591",
      "IsHidden": "False"
    },
    {
      "Start": "8282d1b6f1174016b88c4f5ecd26a89c",
      "End": "e428e7e8245f4b2487678f589b599011",
      "Id": "590723305ef44fa09107856f64569d57",
      "IsHidden": "False"
    },
    {
      "Start": "fb02120d29934f7892534bf4aa6baf73",
      "End": "0a3b9c142d7d460b9e65e9bb31eb0dd7",
      "Id": "cdf4d92cf66d4b3abf4042caabc43a23",
      "IsHidden": "False"
    },
    {
      "Start": "fb02120d29934f7892534bf4aa6baf73",
      "End": "bbf1635005214ac4b6106fd2257fc06d",
      "Id": "14be5465ba5244c6b6b99c1f1a5a2587",
      "IsHidden": "False"
    },
    {
      "Start": "cbda97260bc0486fbf69b3428a90c6c3",
      "End": "bc70561c22cd41668e8254665c3f38f3",
      "Id": "3c1851ce6b5c4582a1dfe82a17c62718",
      "IsHidden": "False"
    },
    {
      "Start": "6a15915e768e485c982163f7efeaac3f",
      "End": "4e4f11db06d947659064b4733f636cd0",
      "Id": "5501ef16c08244c4a8369287f9c36cb5",
      "IsHidden": "False"
    },
    {
      "Start": "d01fd54523db4b44a58897a3fd0fd112",
      "End": "768e40cdd8f94c43a2aa2367e072f161",
      "Id": "88a3143196d44fd89adada38705271c6",
      "IsHidden": "False"
    },
    {
      "Start": "36bb9417145644f98e9ddf049fd875a8",
      "End": "01d301eef0cc4d0cb4faafc10d241356",
      "Id": "833b639eee0f43bd9ffa5492ba83baa3",
      "IsHidden": "False"
    },
    {
      "Start": "e3edd1d49c32481184b941b589306a3c",
      "End": "42dbc3241e2d4a52bb4c8d59489a8bc7",
      "Id": "56c77a6888eb4d5ab51010bf1bf212ce",
      "IsHidden": "False"
    },
    {
      "Start": "33bbfb6d108248bdbd3e543854a3f326",
      "End": "6f6f73584b8349099b49cde0c25180c3",
      "Id": "019bd540c1a14cdcba464219ed38ce60",
      "IsHidden": "False"
    },
    {
      "Start": "33bbfb6d108248bdbd3e543854a3f326",
      "End": "13ee344ba39f4f109cea1d662357fe53",
      "Id": "d67498b8a8e4425ea7756edbf12dfcc7",
      "IsHidden": "False"
    },
    {
      "Start": "33bbfb6d108248bdbd3e543854a3f326",
      "End": "aa433f8fecae403ba86c41274347b073",
      "Id": "58c2d0b21ed44bfbb5ec5a33971189f1",
      "IsHidden": "False"
    },
    {
      "Start": "33bbfb6d108248bdbd3e543854a3f326",
      "End": "6b7db2c8865b4fc59253b834f58ae708",
      "Id": "94003b2a1ff5441289a1c43c356f4065",
      "IsHidden": "False"
    },
    {
      "Start": "f17bf3ec221646d789ea66f2cd19cf3d",
      "End": "81aa4c025b6640c6a6f28ec2dd7e01b3",
      "Id": "e877d33a71a441ed9ade7aeb034fab55",
      "IsHidden": "False"
    },
    {
      "Start": "19b0b08ae76a41deb4ced9966fde69de",
      "End": "242864eb52a4469382f89386b6bbe1fb",
      "Id": "f86530fa3ee14dbdadc95a245db979c7",
      "IsHidden": "False"
    },
    {
      "Start": "19b0b08ae76a41deb4ced9966fde69de",
      "End": "7817aa0e7ca7446696c241670b915e89",
      "Id": "21016e2ec6e54a47b586265b98c751b5",
      "IsHidden": "False"
    },
    {
      "Start": "4d204f01c2a246c3a354853e666b2b01",
      "End": "ee2c670ed8824204966382139831401f",
      "Id": "e9df2496b1174560969681fe5ea89762",
      "IsHidden": "False"
    },
    {
      "Start": "8a0af3b1403b4991848a55fe858d9606",
      "End": "ad9837a301d34cc3920f948154778d99",
      "Id": "e4399572f6f64c29af20084106f6c4da",
      "IsHidden": "False"
    },
    {
      "Start": "2f20a2262c0b4318a6effde51dbf1204",
      "End": "e336dada29f44f5b8c56ffa9b6ccf77e",
      "Id": "d290f9b2f6d948229ddd37d0c85496e6",
      "IsHidden": "False"
    },
    {
      "Start": "0b78fcd83bb94389a56ac48021a4cc01",
      "End": "534efb5fba7d481e97bd16bef65999cb",
      "Id": "5d396cbba260452085df090200eb89cc",
      "IsHidden": "False"
    },
    {
      "Start": "06b37159b1664dddad314677c2c8eabe",
      "End": "2f2b13f834aa405a8f49d207621ac30c",
      "Id": "5f0496c3f6c34ed8bfa2faa410e1257c",
      "IsHidden": "False"
    },
    {
      "Start": "9537a815684746ec877869f461a90c72",
      "End": "4c6e504ea37d40959bd3457f9417de39",
      "Id": "9d5873b3def24dd19d00eae71d11e8ad",
      "IsHidden": "False"
    },
    {
      "Start": "bf39c287c6f042e280deedbd490ecc70",
      "End": "3c6150e00107440d8cceb3d5ce779cc3",
      "Id": "c75d02ced49c4112ae04cd65f4e87252",
      "IsHidden": "False"
    },
    {
      "Start": "bf39c287c6f042e280deedbd490ecc70",
      "End": "388e29ea7ee64cb5a80eda2534fe9feb",
      "Id": "61d50b41c62b40a29b0ba376e1594636",
      "IsHidden": "False"
    },
    {
      "Start": "6901c997e57546d382937fe4f7edbd0c",
      "End": "22b63af8dd8c4fecb328311a5fc7a428",
      "Id": "2109054f0e914863bba8096684880b75",
      "IsHidden": "False"
    },
    {
      "Start": "74a9801eb1fa48b1ab9f2bb5c6c285e0",
      "End": "f6ae17e6f4cc4b91b2215c91be900194",
      "Id": "11c83710add04768a41a74fdfe464531",
      "IsHidden": "False"
    },
    {
      "Start": "6d66efc9bd294e8dba291ac4c4ca8584",
      "End": "7a2bb05d71804401ac8b9f72805fc366",
      "Id": "d0cba581d3c743aa96004a1a5e54a57c",
      "IsHidden": "False"
    },
    {
      "Start": "e654fdd2168e47309d142764c08a7b67",
      "End": "7b4d7e9b44744b99b1e522ab13494cce",
      "Id": "999d329679164b30aa5425f621dcb63b",
      "IsHidden": "False"
    },
    {
      "Start": "e654fdd2168e47309d142764c08a7b67",
      "End": "57c039ad35ac4cfe983b155cc9250209",
      "Id": "0ad9611b2a4a442ab7a5e3f533c20c86",
      "IsHidden": "False"
    },
    {
      "Start": "e654fdd2168e47309d142764c08a7b67",
      "End": "af6d1a41bea34e89aa34028331cf70c7",
      "Id": "21b500e86b714ecb99a78f205a2d7c94",
      "IsHidden": "False"
    },
    {
      "Start": "e654fdd2168e47309d142764c08a7b67",
      "End": "e97fbff11dba465db853b3a52a760737",
      "Id": "64cf11dbf7784c9493d2a6981bc13042",
      "IsHidden": "False"
    },
    {
      "Start": "da5655a21174475f8705eebf84d915a5",
      "End": "f0d7f11535e042fe94da6f15d3bca17c",
      "Id": "c630fb7527974555aa4a9022dd42f5a0",
      "IsHidden": "False"
    },
    {
      "Start": "ecf491fbfe194e77b9ab51f729b6b446",
      "End": "7cff3e36d18842e7ab25397aca6d773a",
      "Id": "b975334fda8e457d81fdec4ca6819cc1",
      "IsHidden": "False"
    },
    {
      "Start": "08de9b230df54a46aca9221cd86004ca",
      "End": "178934d8209d4761b0e9e5f2b034f8ff",
      "Id": "b962f146875d4e5faaa1f721f8920b7e",
      "IsHidden": "False"
    },
    {
      "Start": "39636de65256478f93710e9488ba3716",
      "End": "7beaf6ec92af4f0797da9a6462f5edbc",
      "Id": "c61343085e4c41599b1c08c49e1cb79f",
      "IsHidden": "False"
    },
    {
      "Start": "579d470642244fdb9c39a4953a32ed39",
      "End": "739269dfe9d147ce819fb96ffc09aa3b",
      "Id": "1c735e690719436ba2cbcf5a94a8d617",
      "IsHidden": "False"
    },
    {
      "Start": "e2f6e4a467d2404f80e5b57bf59640e7",
      "End": "9c8a38097fae4a90a3bd066aaa69ca45",
      "Id": "053587bb9e9445888b54909dfb26ec3b",
      "IsHidden": "False"
    },
    {
      "Start": "697862edb4c64a10a3e868e130462bbb",
      "End": "23ef7c59bb1b4ff5b755ee0d1531d1fa",
      "Id": "0990706cd16f4a3086f00cc25fdc8ea4",
      "IsHidden": "False"
    },
    {
      "Start": "697862edb4c64a10a3e868e130462bbb",
      "End": "21bcf78dd2c44c1ea0f08d6ddc88139b",
      "Id": "57bc266729c641a787513b0f1ec1193b",
      "IsHidden": "False"
    },
    {
      "Start": "3e353b41c48942b78fbf140741a1b9af",
      "End": "a54cfb2c5f03476bb86a82bf2ee41860",
      "Id": "4f724d45b3be480bbd72133c76f8f1d4",
      "IsHidden": "False"
    },
    {
      "Start": "36bd80a2cf414fe5b4a55e7b8c824b4d",
      "End": "5928a99d1ebb47b09dedaa5bbf40ca72",
      "Id": "69489baac9904727b8649703f69dcab7",
      "IsHidden": "False"
    },
    {
      "Start": "77acba851b794caa826eaf230a851c4d",
      "End": "5ed8fcc768d7446db7ed32909f38fd06",
      "Id": "d0860c475eb543518c72bc5d9f14c69a",
      "IsHidden": "False"
    },
    {
      "Start": "aa9da5570df8429eb8fe5799e852598e",
      "End": "25f602dab6da4a3f9c20f0af2a81e8e0",
      "Id": "c5a150759d5049c480842d79b701827f",
      "IsHidden": "False"
    },
    {
      "Start": "aa9da5570df8429eb8fe5799e852598e",
      "End": "916469d2d3154f38bf3891ec2b1e08d8",
      "Id": "7afecbb6da5a406d923f0084b03feed7",
      "IsHidden": "False"
    },
    {
      "Start": "aa9da5570df8429eb8fe5799e852598e",
      "End": "2131434e904c42409f7bc0a7efac318a",
      "Id": "8f9700c1414a4e539e921aba6b099247",
      "IsHidden": "False"
    },
    {
      "Start": "aa9da5570df8429eb8fe5799e852598e",
      "End": "8202cee8d09842f38e745a73daebd0d4",
      "Id": "7aaa8f80275a4548b3b558ffd6d0f347",
      "IsHidden": "False"
    },
    {
      "Start": "13b54665f56f41758b552119b4cc0f1a",
      "End": "0ae3718de4ca4b869fe057975d659c06",
      "Id": "5d637047ef384346bb1b9f47356d0521",
      "IsHidden": "False"
    },
    {
      "Start": "a7c67232bca64e558032614ff3734963",
      "End": "a9452f8d50c449a7babd51a03ebdc7f0",
      "Id": "a9f55b610bf54715b8038cbfbc01e2fe",
      "IsHidden": "False"
    },
    {
      "Start": "cab47e00c4554f12b27d88e67d6e7603",
      "End": "1ac41fe89df94f76be97f6b5a24d8698",
      "Id": "2e0110cd713241838a676566ea160275",
      "IsHidden": "False"
    },
    {
      "Start": "d0b9fb781a8e47f9b23984efc2494345",
      "End": "26df9547e4ad48c3a3a0f8ff2ebe2182",
      "Id": "684d3721257f4997a7b23077214365b3",
      "IsHidden": "False"
    },
    {
      "Start": "4636fe31556f49b6861b6e7c2ecf8737",
      "End": "27a74ef79a464d34931aec4a77513155",
      "Id": "36d23fbf8c1f49319f60a49e196f3b73",
      "IsHidden": "False"
    },
    {
      "Start": "1d6f0fdbe728442e9f7f46c734280a70",
      "End": "7879ef3a2a6742988e24a0606163975c",
      "Id": "5a1dd2e7cd6b48f883adea9fe0f23189",
      "IsHidden": "False"
    },
    {
      "Start": "2b8c87cfddbb4210825637e804bda293",
      "End": "2ca98b42a1e94add8fd0c006a477b34d",
      "Id": "624f0e45b1734d439bb664326f141829",
      "IsHidden": "False"
    },
    {
      "Start": "61c9548a045a45f78ca948e00aa1dacb",
      "End": "2dea3fe03330494e8088b3c4d05ef6fe",
      "Id": "f1702a8adb734733b54fb54c9780d648",
      "IsHidden": "False"
    },
    {
      "Start": "962fa739124746d88216aef07be33ab8",
      "End": "f9ae4fde0ee6463b929f4b575ebd7d1c",
      "Id": "179837c39a9443ba83519d3670465298",
      "IsHidden": "False"
    },
    {
      "Start": "6ebe41e12e304b37b7019030f94aca9b",
      "End": "e92479983be44862a52b88a8b830f898",
      "Id": "20c4b06551574ab69e094af6e5537e85",
      "IsHidden": "False"
    },
    {
      "Start": "6ebe41e12e304b37b7019030f94aca9b",
      "End": "f39633bebdea4159ac49e129cba4421c",
      "Id": "772ed190aa9c49ee8b83835373634576",
      "IsHidden": "False"
    },
    {
      "Start": "6ebe41e12e304b37b7019030f94aca9b",
      "End": "912ca6cbe44542b78ebccdceea8b28e0",
      "Id": "6bf2ec6bc1e04692916f3a9219932a33",
      "IsHidden": "False"
    },
    {
      "Start": "6ebe41e12e304b37b7019030f94aca9b",
      "End": "b194f514b1514216a0b2d7e2dd207af1",
      "Id": "ae7096ebf9284d8fa45d322224a78e50",
      "IsHidden": "False"
    },
    {
      "Start": "359c1c69e7b543bf960693ef9de4609f",
      "End": "400b5cbd7ebd4a939ad47bb9b1d3734b",
      "Id": "85462167fe644602a87325845385a7dc",
      "IsHidden": "False"
    },
    {
      "Start": "28e76a33d6cb4d3ca28a6510980123e7",
      "End": "fcaa6e5e22b24ea3ab3679f8a031e998",
      "Id": "f0f72eeacf9e46039b98d2002c5b71ec",
      "IsHidden": "False"
    },
    {
      "Start": "28e76a33d6cb4d3ca28a6510980123e7",
      "End": "e9db7e77e3b447d0a5f846bf629233ac",
      "Id": "3781441294e4447b976c1be0b71ae393",
      "IsHidden": "False"
    },
    {
      "Start": "ee8c48a55a444769aea5facbbee92f89",
      "End": "194a1e88926241fb9b5f908f929ef8cf",
      "Id": "f2240a2040d3406ab119664a05cb35fe",
      "IsHidden": "False"
    },
    {
      "Start": "524212b4f2384546878f7d9fa722be09",
      "End": "f89cf9b724d04a41989b34c9b39ddeee",
      "Id": "7ece8f5ebb174926a9811d1b353c3ae7",
      "IsHidden": "False"
    },
    {
      "Start": "d09a11658bb2491385126c37eaa8d068",
      "End": "6b0593f6f437461d944645f58016b83d",
      "Id": "b8ed4b56e4ea4c6393a1a8845dd89bb9",
      "IsHidden": "False"
    },
    {
      "Start": "0443ffe1a91142d598a26ec5b87bf16d",
      "End": "650bf5bf4c9043028ff0c39896ce7dda",
      "Id": "f03c6786d58240bebc2522eef7abb9ca",
      "IsHidden": "False"
    },
    {
      "Start": "2eea26ca60974b0b886a5e8f9fa67f5f",
      "End": "e5072c2ec0a84f1eb0ac77133b95eb41",
      "Id": "090fc21e54ed451881f16ee1279f7102",
      "IsHidden": "False"
    },
    {
      "Start": "5d2c63c005ce4da790c488a780376cc9",
      "End": "fa5efbd1a9f14612abdd07eed363ba71",
      "Id": "66d798ea980c41888e590d6cff20cf07",
      "IsHidden": "False"
    },
    {
      "Start": "5d2c63c005ce4da790c488a780376cc9",
      "End": "df1f5219695549dd85598e1ee6c609a5",
      "Id": "3d803720cea94f19846ac00d549e78d4",
      "IsHidden": "False"
    },
    {
      "Start": "5d2c63c005ce4da790c488a780376cc9",
      "End": "5e628269a412444e94f79a3d0c2f59be",
      "Id": "dd221c87d19e4345ab1872520e8f9d39",
      "IsHidden": "False"
    },
    {
      "Start": "330f496f4e1840319de2729c2a452034",
      "End": "00ad1ab403624de7a933efcdbdbce5d3",
      "Id": "deaf64ab7ac849adb53c8795970a4511",
      "IsHidden": "False"
    },
    {
      "Start": "330f496f4e1840319de2729c2a452034",
      "End": "22d62416bb5c46359875e3d65ee5af04",
      "Id": "2f22d42ded164bf5b91dbccf558815b9",
      "IsHidden": "False"
    },
    {
      "Start": "b71461878c254985bb9de7ffed34f332",
      "End": "8b39e0dd402f4b73bd688fcd98a7b8f1",
      "Id": "c4d76c7ab98d47f9bfc1056c9ba0431c",
      "IsHidden": "False"
    },
    {
      "Start": "91e705a4f89d458984d7161c3c22720d",
      "End": "4f76025e78b247efa1874c1f99527a0e",
      "Id": "0d586db6acb141aebbebecd64f29f184",
      "IsHidden": "False"
    },
    {
      "Start": "c52de5d591ed4a6c9fd79155fd3f883b",
      "End": "b09be7458e514a95ab803ad0ece006da",
      "Id": "088ef9d135b14dfb838dd415c5e726ac",
      "IsHidden": "False"
    },
    {
      "Start": "1ddefef15dd04cb595d57ee9747fb335",
      "End": "11cb12f80e894e9b9d80ab189efc365a",
      "Id": "cf92c401644f4b539e8f4156b05e6d6b",
      "IsHidden": "False"
    },
    {
      "Start": "80e6874cb79a4e40bdd23b3f225dfbd0",
      "End": "d3a0ece7134444c4bb32c5e17c6df092",
      "Id": "10801b4ec97b492db51c7a94165ae9d0",
      "IsHidden": "False"
    },
    {
      "Start": "4c3624c35cc14fbf8d07581c2447516a",
      "End": "b23c30f580a74feaa79b3f15655ad627",
      "Id": "82f4492bef0c413bb44ad3e9d6298bbb",
      "IsHidden": "False"
    },
    {
      "Start": "88d83fe0944346f08c9513f770c5c551",
      "End": "dc51c8fea064472ab528de8d8760f443",
      "Id": "973a7f197a174fa19bf32cf8ecd7b21e",
      "IsHidden": "False"
    },
    {
      "Start": "163c9ecd7aed486685ce4a52d72c2109",
      "End": "64ab9573e11949738555bf7616108922",
      "Id": "adf5f66997194d8da1d42e1ff986ca43",
      "IsHidden": "False"
    },
    {
      "Start": "4e2304a0522a41c69ff22fe7c8c094cc",
      "End": "8fd3088502984d4da1138e6966a617bd",
      "Id": "6a83deb43bb54e3eac1f5bacbc38e321",
      "IsHidden": "False"
    },
    {
      "Start": "4781893c5d534616b19b02f36abd152c",
      "End": "913e1e052be34eb1befbe340ffc6dd44",
      "Id": "81645e368ccc4262a6f4034b4582a77e",
      "IsHidden": "False"
    },
    {
      "Start": "64459168da6b41ab8acb4b8ab437c54c",
      "End": "ee89731156fb4a77809deecb6ee81491",
      "Id": "d6ac2877b6994027ae96c3e0c93041fe",
      "IsHidden": "False"
    },
    {
      "Start": "18ac05c7b9a14392aaf5478c81cef8c7",
      "End": "1bf12c9e8f804ff8bac3e4e9060b2827",
      "Id": "2205778bef8143998d18dc88bb98967c",
      "IsHidden": "False"
    },
    {
      "Start": "0e2266fa9d024d52869b87b7ae0638ab",
      "End": "2bd071fd17ca4b2d8feab8535bcf3456",
      "Id": "4f2967bb08754e3b992752a0dba119fa",
      "IsHidden": "False"
    },
    {
      "Start": "993f81ca7f6645cc8de5eea6d6ac9567",
      "End": "4447ec8b4d7443a8a1c838ca2718497f",
      "Id": "bf3226449a7848a4aa1786788f6aec0c",
      "IsHidden": "False"
    },
    {
      "Start": "4dfd75d0f53e4e8d833a1767186ffd0f",
      "End": "fd15a00ffc0949abb4d1ce4c2ded0165",
      "Id": "41eac3e67ff64f47b5388ba73c3fdedc",
      "IsHidden": "False"
    },
    {
      "Start": "2e7825db8bca4d9086f802bc63cadb23",
      "End": "c3ceed1b0c744ee88064df657739c15f",
      "Id": "c3c917074b124d829532160a419d8b46",
      "IsHidden": "False"
    },
    {
      "Start": "f50997114df043609638fc3efa1bbef5",
      "End": "f068e5828d994edc95c5303be9e96c7f",
      "Id": "6255d823ea524690b9ce8ef842a56d55",
      "IsHidden": "False"
    },
    {
      "Start": "cda835fab07146909df89d0bbf9ee766",
      "End": "db8e5eae3d164c7a8ba32a10bd944523",
      "Id": "63324e2549074583860f5bf14054de2b",
      "IsHidden": "False"
    },
    {
      "Start": "a35b8398398e4e4298a47abea259e157",
      "End": "e3d33363ff5f47be85f1fafcd82b8290",
      "Id": "b32b911d5eec4ad7955f8509e25f877c",
      "IsHidden": "False"
    },
    {
      "Start": "62edd8a8bdd645e6b26828b4e6d727d6",
      "End": "78a0a34693f24582a0f806b998e0f5c4",
      "Id": "c23f2151ac5a4073af321e24fe9358e3",
      "IsHidden": "False"
    },
    {
      "Start": "4f21e7a07cc447c8b56a777bf018506c",
      "End": "3bc360ddd7a94b09a0bdfe3a0c9bf508",
      "Id": "1c3c2de4ddf143d4880f8d67a4009304",
      "IsHidden": "False"
    },
    {
      "Start": "22dd899fc6cf49b88ade064ccad97a4b",
      "End": "d3d29ed288e74d2799ee8d4fea66e4c5",
      "Id": "29a89898508e4503b8b17f2c319847f8",
      "IsHidden": "False"
    },
    {
      "Start": "f416de62876a4fb09bbb1a006062d836",
      "End": "275f5cc5bfe942a1a9221c18aade8b6f",
      "Id": "2c9380ac33d7429abe7186b540c92c5d",
      "IsHidden": "False"
    },
    {
      "Start": "55a38a79165e40e794b0cf2b7ac0ecff",
      "End": "a39e5999189a4bd7b04d647c8d4846a3",
      "Id": "d6281eff224e4b828f186fd1181cadd4",
      "IsHidden": "False"
    },
    {
      "Start": "1beeb2af80914d00a05df54fbf3d6b92",
      "End": "5f3d9a60eada49efaee4158bac31bce0",
      "Id": "ee2bc89ce9da464094456b8c5531e52d",
      "IsHidden": "False"
    },
    {
      "Start": "2604ece1c8f246a7b3cd7ede80653ac9",
      "End": "61e428694c414f60a5135a33236cd8dd",
      "Id": "0a8153f7f9704e1eaba7cd93a7dceefb",
      "IsHidden": "False"
    },
    {
      "Start": "d91a8f02eb304586856c9a26958f092c",
      "End": "86056a387a194a8ebe6b85a5a8a1ba00",
      "Id": "0aae91eb969147208144c750683f3646",
      "IsHidden": "False"
    },
    {
      "Start": "0a59d1289c1e4d27b17f74a0b047c07d",
      "End": "5ee4fef17c964b5aad2a3eb6ebdcc256",
      "Id": "1c090e068fdd4541b8082dbc8e9a7bfa",
      "IsHidden": "False"
    },
    {
      "Start": "0a59d1289c1e4d27b17f74a0b047c07d",
      "End": "e6c03047fabd49c79a1db4f7523afa8e",
      "Id": "3f79d683e404417eadc5b6e45be23c39",
      "IsHidden": "False"
    },
    {
      "Start": "5d4fd39bbced40548b1b98e8f95207eb",
      "End": "9e4d1d47dda148bb9a5e1012264ba62e",
      "Id": "978ce539dae7474287c506aa1aeea78e",
      "IsHidden": "False"
    },
    {
      "Start": "358f95f7a6bb43a497b44dc15b4d5d98",
      "End": "f0364506491a416b91fe786e63ae1099",
      "Id": "47141a1881e448f587aed2c68761e1ad",
      "IsHidden": "False"
    },
    {
      "Start": "358f95f7a6bb43a497b44dc15b4d5d98",
      "End": "9c76847a44284adc8bb0c655d12d77ff",
      "Id": "d2aa3d500d6943b8bd73b51844975a9a",
      "IsHidden": "False"
    },
    {
      "Start": "358f95f7a6bb43a497b44dc15b4d5d98",
      "End": "03b8f3fa82b4473b98481192571f5c7f",
      "Id": "477cae39fff6491b9f4217efcc3ec342",
      "IsHidden": "False"
    },
    {
      "Start": "358f95f7a6bb43a497b44dc15b4d5d98",
      "End": "1498c3c173284e3a9529805d51cba59d",
      "Id": "6ff79e11bc6e4342b8d061a5f21f81e1",
      "IsHidden": "False"
    },
    {
      "Start": "358f95f7a6bb43a497b44dc15b4d5d98",
      "End": "d341247020e34a99ac3ccf4c84b061dd",
      "Id": "df14afe825174f33a9178061024f4daa",
      "IsHidden": "False"
    },
    {
      "Start": "669f80b2282e44048caaaa9e6b7fd987",
      "End": "0599d3ab7bef4e22994b99883591969b",
      "Id": "731af39f615b46d2834b1224cf1f1e37",
      "IsHidden": "False"
    },
    {
      "Start": "e9e84443b43748bf8342f650ed4b7e67",
      "End": "f42038032b874c5abfc370598fb59ff0",
      "Id": "9c5b7ccea8ad421d81db3d7013901f84",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "Oracle Revit Cutsheets-11-13-24 TCS Release.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "1b03e36244c74115a7e1798071ac4b3d"
      ]
    },
    {
      "Name": "02_Master-Check.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "fd392dff5012431c90165aa68785cfd3",
        "6fca8112a30740ffae499b20c814a330"
      ]
    },
    {
      "Name": "01_Takeoff.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "5a56339a5cb045a6bcdcbac466abf32f",
        "a34ff539235a4fc39e44b6adfb71da93"
      ]
    },
    {
      "Name": "SS_3556_(3556) Concept_11-18-2024.rvt",
      "ReferenceType": "External",
      "Nodes": [
        "aa37b99e3c5f4108bb6ed698587e0f63"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "c83a620722a4441b8ebbc32962017ae5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2681.8277219851871,
        "Y": 1246.7645763359794
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "00503feecdf5480d84c9e19d4d661e16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2387.8277219851907,
        "Y": 1291.7645763359837
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "36fd2947d51b4b8694aeca9038c7d050",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2387.8277219851871,
        "Y": 1144.7645763359794
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "8b284b7cc2cf4ca39f6b0158808c575d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2387.8277219851871,
        "Y": 1439.7645763359797
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "43109bd6f3cc40f7ab4e8d91da4cd261",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1034.3795260738739,
        "Y": 713.2289664256914
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "2bf374943bc14b28b13148f80856e8f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1328.3795260738739,
        "Y": 758.2289664256914
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "431c59b2e6a2412d8bd05fa2b2a4eb5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1328.3795260738739,
        "Y": 611.2289664256914
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "07d799f978374e1b811303d74c276e71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1328.3795260738739,
        "Y": 906.2289664256914
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "1b03e36244c74115a7e1798071ac4b3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1855.3795260738739,
        "Y": 611.2289664256914
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "cb2f7d0889ed49a880100f280c3667b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10157.686211944731,
        "Y": -1751.6390879894502
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "b0febaeff4f84a56977d159125fc61c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9881.68621194473,
        "Y": -1660.6390879894502
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "0c9e07653e7e4a5c9a8886f6a6a3c319",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9881.68621194473,
        "Y": -1808.6390879894502
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "fc9a6d528daa4b9181b143ebba15ea35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10452.686211944731,
        "Y": -1842.6390879894502
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "ff2893e4b12944e1b6405074da397459",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10157.686211944731,
        "Y": -1899.6390879894502
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "c8cdc6b01f734b2eacbff584bb58c532",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5635.6904463766459,
        "Y": 790.25428143277361
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "bae9b50a61d14b7f9f34489ca815ab20",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5359.6904463766459,
        "Y": 881.25428143277361
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "4b0588f9b3214a429bc0b3582988f601",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5359.6904463766459,
        "Y": 733.25428143277361
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "b297e762148c430cb41971b2cb34388c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5930.6904463766459,
        "Y": 699.25428143277361
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "6ca00edc234b4a49ba996bfb0c7e366a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5635.6904463766459,
        "Y": 642.25428143277372
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "4f6b81ac97214019b00d2a70706eae54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16108.331261889642,
        "Y": 1065.5592193360908
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "faeda1d3bde84ef8933e980a7f614cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5656.213167654425,
        "Y": 1419.4100966546746
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "4a9d132ceba7418ca4027198364c735f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5327.213167654425,
        "Y": 1525.4100966546746
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "4e46d316dd7b4278b1c46ef189da1953",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5051.213167654425,
        "Y": 1271.4100966546746
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "193b380afb2d430795b182870e121c2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5951.213167654425,
        "Y": 1328.4100966546746
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "35c4a3e7d3ba46968cd72d6d09b859e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5327.213167654425,
        "Y": 1347.4100966546746
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "722172f0dc364336a6b869fcdff5c1ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5051.213167654425,
        "Y": 1419.2375966546747
      },
      {
        "Name": "FileSystem.CombinePath",
        "ShowGeometry": true,
        "Id": "86f299c70d0b415c995ce8520704f004",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1465.7457529724347,
        "Y": 1400.7807766301194
      },
      {
        "Name": "FileSystem.CombinePath",
        "ShowGeometry": true,
        "Id": "288deaded19d4632b8ba4d7d637eec5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1478.5166533042634,
        "Y": 1888.3019696425772
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "deccb51e884c4526acdcd5171943f5b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1835.5166533042634,
        "Y": 1797.3019696425772
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "13b662583bdb4365b562618db9f2f471",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1478.5166533042634,
        "Y": 1740.1294696425775
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "7d63151ba96c48d79fe13493f24a8fdf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1065.8387029407108,
        "Y": 1745.0287808971466
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "80cd8a6237d64d97bbde8e23fc3ee5bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1065.7057924622586,
        "Y": 2178.4291140304404
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "515c788bd0584a23a7503c8749e9ac82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1341.8387029407108,
        "Y": 1687.8562808971469
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "4f37f8de0911479bba9af352d0607640",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1341.8387029407108,
        "Y": 1836.0287808971466
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0416656eebe04936a5763991d428d80a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1341.7057924622586,
        "Y": 2121.25661403044
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "72f8ad7df41a41849298fb6adcc7fb68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1341.7057924622586,
        "Y": 2269.4291140304404
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "0544ad3309b34cb39c71746b876a5b24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1722.8387029407104,
        "Y": 1836.0287808971466
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "17176bd118424a65ad5a9d5ca7505d14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1722.7057924622586,
        "Y": 2269.4291140304404
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fb89fd8ed5b343cfae10d99705b3c8cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1976.8387029407104,
        "Y": 1869.8562808971469
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7cbcf700fd794ae8bdb85dd59182cf10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1976.7057924622586,
        "Y": 2303.25661403044
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "fd392dff5012431c90165aa68785cfd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2280.0815262971987,
        "Y": 2263.70335910809
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "5a56339a5cb045a6bcdcbac466abf32f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2277.1950648238808,
        "Y": 1835.5008279133212
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3fd7c3ca85ac467dbd791d97e27f044f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1746.4235238577908,
        "Y": 1445.3263086684524
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "01b4261811ec43509d87976d9944e4eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1822.7457529724347,
        "Y": 1309.7807766301194
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f4209fa478914b15a9ada0103279dec0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1465.7457529724347,
        "Y": 1252.6082766301197
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "51574a41c53a4a5daeb82055e02ed2de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2000.4235238577908,
        "Y": 1301.3263086684524
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "e5db4745cf334385a212e8e7940384ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1365.4235238577908,
        "Y": 1339.498808668453
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "2cd6827ca2fa4024b03b04b63e2f8e89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2557.1950648238808,
        "Y": 1835.5008279133212
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "9102976b23544edd98c03715577eceeb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2560.0815262971987,
        "Y": 2263.70335910809
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "bf0df934dc6243529c4906240f950387",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1746.4235238577908,
        "Y": 1267.498808668453
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "07409d3ddced4a5b8bbab5892024b457",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1070.4235238577908,
        "Y": 1248.498808668453
      },
      {
        "Name": "Document.FilePath",
        "ShowGeometry": true,
        "Id": "aa37b99e3c5f4108bb6ed698587e0f63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2320.1592919771429,
        "Y": 1268.4139373867333
      },
      {
        "Name": "Document.Current",
        "ShowGeometry": true,
        "Id": "9967b0dd192e49a397dada63c567a1fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2629.1592919771429,
        "Y": 1268.4139373867333
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "a34ff539235a4fc39e44b6adfb71da93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2901.1950648238826,
        "Y": 1835.5008279133212
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "6fca8112a30740ffae499b20c814a330",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2955.0815262971964,
        "Y": 2263.70335910809
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "572062e5a6614e2c8a5e2f932c409dbd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1365.4235238577908,
        "Y": 1191.3263086684524
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "cba6e3e607d34d91ad28e20187c2077b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5874.931136698563,
        "Y": 2111.067800592421
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "dbdec53626fa4aacab8e54831755377a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5545.931136698563,
        "Y": 2217.067800592421
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "50623d63e1bd493c94c9096afaa4df7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5269.931136698563,
        "Y": 1982.067800592421
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "fdd35952d77c4a0ba6c1fbb5817f2a89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5545.931136698563,
        "Y": 2039.067800592421
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fce24a62a8694eeea9465256158f44b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5269.931136698563,
        "Y": 2129.8953005924209
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "3519382bf1264f55a6c6c0522bc084ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5656.213167654425,
        "Y": 1271.4100966546746
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "a9914841cbe74350b8ec569880a96b32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6274.213167654425,
        "Y": 1400.4100966546746
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8bb64df80e1e49f8bc6ddbc40a7ef9e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5951.213167654425,
        "Y": 1506.2375966546747
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "ba76576921be4a7d82e11d6443504819",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6253.6904463766459,
        "Y": 783.71115643277346
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0e6f61d10ee340c3ad83f21d3d4acb9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5930.6904463766459,
        "Y": 876.53865643277356
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "973de549ce8e4092a71f7c26da7690af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15484.291816102657,
        "Y": -1689.8531679077796
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "d7a1ecefc4a14b008bb124ffe80522fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16030.702568331579,
        "Y": -2001.6031112403125
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "c7f1bf1223924eb1b50897c2a855c772",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9631.6228841391166,
        "Y": -2089.4434090090313
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "7a5cba97897c41e585bcfac73222e8e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9302.6228841391166,
        "Y": -1983.4434090090313
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "8e37bdcd23cb4d2fb0cd62f440a49f2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9026.6228841391166,
        "Y": -2218.4434090090313
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "037b1bc8d03d4106b6aeb6e4a240ed2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9302.6228841391166,
        "Y": -2161.4434090090313
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f8b27c23450c4356a3709676942e33ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9026.6228841391166,
        "Y": -2070.6159090090314
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "8ead71d7afab455fa604f4c59184edbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10153.746968064032,
        "Y": -2278.04603308534
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "1a218e05062c4296b8c00bb2c855b34c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9877.7469680640315,
        "Y": -2187.04603308534
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "8cf0eef811814af0901a1b6d9acea891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9877.7469680640315,
        "Y": -2335.04603308534
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "df4d1c9f2dd2406a96b3cb0a256cfae6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10448.746968064032,
        "Y": -2369.04603308534
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "8614feb5c40c4d19857d4c21866016df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10153.746968064032,
        "Y": -2426.04603308534
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "be641e7e4fb246d4941d906aa623e7ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15506.228997801032,
        "Y": -2198.9134884957975
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "ab6bd76be8c544279b3f52d82afee6a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9633.174085364757,
        "Y": -2611.2986835607589
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "1234f289b60b4a3bbd5fc0a0c97fb7c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9304.174085364757,
        "Y": -2505.2986835607589
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "db858128063f4258801c399365405623",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9028.174085364757,
        "Y": -2740.2986835607589
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "db6786c9c4ac4766bfa5b84b93dc731a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9304.174085364757,
        "Y": -2683.2986835607589
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cdc7914dc4c9409bafd377747412c928",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9028.174085364757,
        "Y": -2592.4711835607586
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "4253e7776c3f4ddea66bb142a981a7fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16037.383375079038,
        "Y": -2529.5434267894098
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "f717fdf83d8c4c959da07cb9bd8fed65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9633.3179497428,
        "Y": -3170.5025799468895
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "eea13bf88fa24e448399c858fc24f703",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9304.3179497428,
        "Y": -3064.5025799468895
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "99ed0ff74b404735b63d2185c0fb3b9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9028.3179497428,
        "Y": -3299.5025799468895
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "2e94ce389c9d436a8d4ec534afb31233",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9304.3179497428,
        "Y": -3242.5025799468895
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5a2f769e454e4413b699d74774fc84f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9028.3179497428,
        "Y": -3151.6750799468891
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "9549a61ff7c84fd8b37b05665646cc02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10158.857212082112,
        "Y": -2797.9163127378465
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "678722a87c0344c2bb49405870f4dd7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9882.8572120821118,
        "Y": -2706.9163127378465
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "f5f911f40a9149e6aa7b532583c1a5c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9882.8572120821118,
        "Y": -2854.9163127378465
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "525ff4f6217c4c5ba2983f187a3cae02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10453.857212082112,
        "Y": -2888.9163127378465
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "7dcc1c32ed084acf9c3d35adde95626d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10158.857212082112,
        "Y": -2945.9163127378465
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "55b87485aa3c497ea10023b4a523836b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16043.110146253121,
        "Y": -3092.3015034449509
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "853aca11963d46d79016fc8dbf299935",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15516.117784215645,
        "Y": -2709.7632768277854
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "dad8b8587abb47eaa4cbf1fc3876cd79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10167.570679374949,
        "Y": -3355.5782194793119
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "e86011f8790e473086ccf273637e48c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9891.5706793749487,
        "Y": -3264.5782194793119
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "8a3d2f5994544fa7a90b769e9cf00849",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9891.5706793749487,
        "Y": -3412.5782194793119
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "d9016619441947c38eb8e91548168cbd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10462.570679374949,
        "Y": -3446.5782194793119
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "a1ffb60638e94bd5a0059f45d6ba325f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10167.570679374949,
        "Y": -3503.5782194793119
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "d762a3b1ed41420f942f40af5885efe9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9633.644242564922,
        "Y": -3737.3910041704967
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "f49ce34d8e614da2857acfa7322ff43e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9304.644242564922,
        "Y": -3631.3910041704967
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "2cc78092fe504868971e0f27cb830ea4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9028.644242564922,
        "Y": -3866.3910041704967
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "bfe36a37951c46669c90a8fabde75873",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9304.644242564922,
        "Y": -3809.3910041704967
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bb405b90a7c7491eaa65d8f234b3a073",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9028.644242564922,
        "Y": -3718.5635041704973
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "bc044b13b0744c1785b0fdcb3df6b470",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16046.546947688044,
        "Y": -3666.6958843358984
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "04de610af6c249e2bd45217fc4b59f5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15513.618392892997,
        "Y": -3275.70805451649
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "66f64303227242548e9bc8e26a967f79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16056.665944665003,
        "Y": -4242.5852083816062
      },
      {
        "Name": "Sheet Name",
        "ShowGeometry": true,
        "Id": "89d946cec41d4cef8d51f0e15e9e97a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12212.261406856471,
        "Y": 891.31743814352808
      },
      {
        "Name": "Start Row",
        "ShowGeometry": true,
        "Id": "655cd147b6e74a8eb9056c07a7a88a11",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12256.389317263431,
        "Y": 2367.1488162784767
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "0c4cdd50fa184904a86493ef41d88760",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9642.8457732463576,
        "Y": -4331.7836921635508
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "2d8b08c17fae46d581e71756bd0ae2ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9313.8457732463576,
        "Y": -4225.7836921635508
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "be7289fb580a4aef9e08f016086fe262",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9037.8457732463576,
        "Y": -4460.7836921635508
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "c9329e2efccd435ea58ec52bb233452a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9313.8457732463576,
        "Y": -4403.7836921635508
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b07535624b304a9d977bf5103de9a72f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9037.8457732463576,
        "Y": -4312.9561921635513
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "d4f372b6ace645c3add0558472554143",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10179.739511694766,
        "Y": -3962.6974212095256
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "6efd984eceae4cfc9a5c53939c524ed3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9903.7395116947664,
        "Y": -3871.6974212095256
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "f9f7c49cb2b44041908dd6da6c31a078",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9903.7395116947664,
        "Y": -4019.6974212095283
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "9633d2a43cb844db8c280e9b7027a11d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10474.739511694768,
        "Y": -4053.6974212095283
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "aa30fe593d644ba8a21eecdaa32c3708",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10179.739511694766,
        "Y": -4110.6974212095283
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "87b61a99552a472ab31af39b31afc0d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15511.093783731083,
        "Y": -3859.4465713625336
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "65f97bd90fc84413a9073417b152ee52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15549.325222496327,
        "Y": 4600.1309583749144
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "309521b8ae7647d98283ab9647a10cb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10441.583084559665,
        "Y": 4566.1166744327875
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "68ab4720e339450cbf459f2443c07b25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10146.583084559663,
        "Y": 4657.1166744327875
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "158a6533afee45bb82ffb4be82e43caa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10146.583084559663,
        "Y": 4509.1166744327875
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "78fef0d35686440cbd3f0d9f1ea79de8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9870.5830845596629,
        "Y": 4600.1166744327875
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "b7c8bc404241475f91908983df63a541",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9870.5830845596629,
        "Y": 4748.1166744327875
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "512b04951ee04631966d626c5e0a5c85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16118.581564900747,
        "Y": 4250.5650327606263
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "63fb40e78a104f7ab9c54132a0bfe66a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9291.5197567540545,
        "Y": 4427.1907939467583
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "48bd29da1569465284ad48ffc6121729",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9620.5197567540545,
        "Y": 4321.1907939467583
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "b97e1ac2f3c34563b2f9c84dcd20458d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9015.5197567540545,
        "Y": 4192.1907939467583
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "9240e7e7b277452caeb8b557bcdfcd8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9291.5197567540545,
        "Y": 4249.1907939467583
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8b266ccd01204145b5cf6b0278944b5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9015.5197567540545,
        "Y": 4340.0182939467577
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "5ff45027f59b4fa7ae9cada5dd06038e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15530.109919102902,
        "Y": 5134.9388523659427
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "60ec868aaa89468bb8fe900251b4b7e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16120.78767356491,
        "Y": 4781.5964833706012
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "d5e48da9bc734223980604cb8696af00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10446.289193223827,
        "Y": 5097.7888624960306
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "4ea7c8a3978746daa899ca2df59bf1ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10151.289193223827,
        "Y": 5188.7888624960306
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "93a3baedc6d547f39f970efac8f5f296",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10151.289193223827,
        "Y": 5040.7888624960306
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "6c1c82c4ab8c46509dc2d14471b514c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9870.2891932238272,
        "Y": 5279.7888624960306
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "76a5ff19045e470791ec7437fe7e9a9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9870.2891932238272,
        "Y": 5131.7888624960306
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "df8c5804ca624bc880c28f359911e2cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9622.7258654182169,
        "Y": 4852.8629820100014
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "8507e033605547f4869f2ec646bb6dbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9293.7258654182169,
        "Y": 4958.8629820100014
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "1a40f94dbefb497582b2ccedf328c40b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9293.7258654182169,
        "Y": 4780.8629820100014
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "9836bc253293439aa233f41980eb3369",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9017.7258654182169,
        "Y": 4723.8629820100014
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8d5ef2cefdde46e6a6b8efc34b07a775",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9017.7258654182169,
        "Y": 4871.6904820100008
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "2ab8844c4da34c17b80c617113cf343c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15532.259965683501,
        "Y": 5670.5292870460935
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "247eb40c20684daaabee9d14976c4b19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16122.937720145508,
        "Y": 5316.9580819404391
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "d9b27dd29b0c4c33b2350ce44d9f6b14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10448.439239804429,
        "Y": 5633.1504610658685
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "a0aee2a6b64640ff986a696d59bb4217",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10153.439239804429,
        "Y": 5724.1504610658685
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "1f77d74129e54112bc6de2ef199064cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10153.439239804429,
        "Y": 5576.1504610658685
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "da9de1052f8b4be0a8e7315cb87c4ddf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9872.43923980443,
        "Y": 5815.1504610658685
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "5a7bd2a1732a440daafc9e8a36b6c465",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9872.43923980443,
        "Y": 5667.1504610658685
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "2dfc1cfcfadb45c5993e33dc5f715857",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9624.875911998819,
        "Y": 5388.2245805798393
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "3fde08b476fc4f909e59fa19ed1be613",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9295.875911998819,
        "Y": 5494.2245805798393
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "a7dce11432b44bac8b3e0ddff2b082fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9019.875911998819,
        "Y": 5259.2245805798393
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "49f851e5d9074e6d8f8dbaa1c6c65611",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9295.875911998819,
        "Y": 5316.2245805798393
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "db26e6b026004f07a6c5743e4e6dae26",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9019.875911998819,
        "Y": 5407.0520805798387
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "1a513cb8806d4f44a9f44eea2e835308",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15524.144923925658,
        "Y": 6197.1766547641046
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "bf15e2414cfe4a66b72972d5a80866d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10440.324198046586,
        "Y": 6160.0266648941833
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "0de3b26912ee4d3aa0d836237c43c34b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10145.324198046588,
        "Y": 6251.0266648941833
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "19c402a5947b47618be416bf9644b0e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10145.324198046588,
        "Y": 6103.0266648941833
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "7074d33ea2aa458e9bfc4606b6e370e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16115.976619305251,
        "Y": 5843.8342857687521
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "b19018f281714a6d84d92b18e21ddce6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9864.3241980465882,
        "Y": 6342.0266648941833
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "dc78e93d45d74e0587e7bbbabac74e78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9864.3241980465882,
        "Y": 6194.0266648941833
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "18115abf99e54d8aad0e186bf794a425",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9617.4958461009028,
        "Y": 5915.1007844081541
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "0953309c24c844e992ede30b044b6421",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9288.4958461009028,
        "Y": 6021.1007844081541
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "5ebd3e366e504464b907ae0f65c3cbd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9012.4958461009028,
        "Y": 5786.1007844081541
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "b29ab75e2d244ff18e23853a98c986c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9288.4958461009028,
        "Y": 5843.1007844081541
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0e61db4d97bd420e8dccc8ca0d051cf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9012.4958461009028,
        "Y": 5933.9282844081536
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "505811443093402bbce1a453f2687c77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15526.320398345784,
        "Y": 6725.1853998656652
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "8df63ac7687848bcb4860b8277646824",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10442.499672466711,
        "Y": 6688.035409995744
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "e314582d6f7b473bb4f3d2353708cbd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10147.499672466713,
        "Y": 6779.035409995744
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "3b498171d6ed4500822dfc7da23ac55d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10147.499672466713,
        "Y": 6631.035409995744
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "199a0c944a7b43aeb5eae1518da4d61b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16130.024968401793,
        "Y": 6373.2904548252036
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "69e74b97c2a9424086f28b5c30a5066b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9866.4996724667126,
        "Y": 6870.035409995744
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "7d4e4f92779345ba9ea4a22d6c746a0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9866.4996724667126,
        "Y": 6722.035409995744
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "d3177e004b5a4425a1ca3753453f294d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9618.3813174585612,
        "Y": 6444.2195839147953
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "24045bd3ca5841b29799d1765368a4b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9289.3813174585612,
        "Y": 6550.2195839147953
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "f389084cd5e34f1c8776094b3a356ab0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9013.3813174585612,
        "Y": 6315.2195839147953
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "513f08ffdf0847f5a1bec07066d184bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9289.3813174585612,
        "Y": 6372.2195839147953
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4b909e650ad341e79ac386a5caf9c8ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9013.3813174585612,
        "Y": 6463.0470839147947
      },
      {
        "Name": "Master Family List",
        "ShowGeometry": true,
        "Id": "b628bd96494d43eea6c12ae9aa65cdb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2607.2267040127572,
        "Y": 5453.4604354406847
      },
      {
        "Name": "Master Family List",
        "ShowGeometry": true,
        "Id": "a1a8f9bb641942488e995b31d441a23d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2917.8543527260163,
        "Y": -2740.1255960644407
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4fb8be1b25704af7b7dedfc970b10ff1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4760.8831297868983,
        "Y": 4216.2376670555332
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7460620704cd4ba582e7675820143f9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4784.1699917328515,
        "Y": -1658.4957062160966
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "ed5c42823c8a4b86b3ec59c203775bb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10992.200033754969,
        "Y": 3865.4396988369936
      },
      {
        "Name": "Index IN[1]",
        "ShowGeometry": true,
        "Id": "fa9db5dd0c2145539c7966c95d23ebdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12097.676716289756,
        "Y": 3342.6740247603007
      },
      {
        "Name": "Index IN[1]",
        "ShowGeometry": true,
        "Id": "a777f2953f6342d39c12b886dc486455",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12072.790998371842,
        "Y": 272.92646757512989
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "b7b8666a56c64c5893e0ff39808d20bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10960.290793591288,
        "Y": -403.154406136852
      },
      {
        "Name": "Output Matches and Indices",
        "ShowGeometry": true,
        "Id": "e70cd237349f4629b0f55a31ccbe63fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8003.37484180395,
        "Y": -340.60390744941736
      },
      {
        "Name": "List.GetItemAtIndex \"Takeoff (List 2): ACI_Supplier Item\"",
        "ShowGeometry": true,
        "Id": "e6b47acfa6d046a58f789a4a7be38c35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8387.37484180395,
        "Y": -457.33422157057055
      },
      {
        "Name": "List.GetItemAtIndex (Indices)",
        "ShowGeometry": true,
        "Id": "31f31af949c9476aaea5ec500729e673",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8387.37484180395,
        "Y": -175.18373632602629
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fdd912a33db0462fb8384cad201163ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8003.37484180395,
        "Y": -488.50672157057056
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "90fe975f1ad9466e81837d1b2181b159",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8003.37484180395,
        "Y": -92.3562363260263
      },
      {
        "Name": "List.GetItemAtIndex \"MFL (List 1): Supplier Item\"",
        "ShowGeometry": true,
        "Id": "f4a7d74c47a549fe9ea80eb41fd02fe4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8387.37484180395,
        "Y": -634.393472353435
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "da8f77379727476ab886fb85a497eca0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8003.37484180395,
        "Y": -635.565972353435
      },
      {
        "Name": "Output Matches and Indices",
        "ShowGeometry": true,
        "Id": "99ce714eaee242859195637b4a13b993",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8035.5120793767619,
        "Y": 479.0394256281345
      },
      {
        "Name": "List.GetItemAtIndex \"Takeoff (List 2): ACI_Supplier Item\"",
        "ShowGeometry": true,
        "Id": "aada2ea8fff844b09dccc55e258fee7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8419.5120793767619,
        "Y": 370.07569257365651
      },
      {
        "Name": "List.GetItemAtIndex (Indices)",
        "ShowGeometry": true,
        "Id": "02eafdeacc7346708556ab1d772b6b42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8419.5120793767619,
        "Y": 656.6992946619157
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2decd021f7a54940bee78e90b51e94ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8035.5120793767619,
        "Y": 331.9031925736565
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c7d3efc760a640ef83dd87691639c2cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8035.5120793767619,
        "Y": 762.5267946619158
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "835957089f54434381bc20f06c40efc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8035.5120793767619,
        "Y": 184.49217289596277
      },
      {
        "Name": "List.GetItemAtIndex \"MFL (List 1): Supplier Item\"",
        "ShowGeometry": true,
        "Id": "311652d098534f999335abdbfe13e1ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8419.5120793767619,
        "Y": 192.66467289596278
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "641b321f6e084f3ba30bf13bb245cd26",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9352.5261892949566,
        "Y": -453.55322850653272
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "397d226995f2496a8f1e69af58203b4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9353.6728800491146,
        "Y": -767.8697085002226
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "f157937768724646a52b5ce731add756",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9342.34860237236,
        "Y": 424.15125921711422
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "84ea68f1d07348ef9bf906f29268b76b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9344.0918222351,
        "Y": 107.57068931558013
      },
      {
        "Name": "Minimum Char Match",
        "ShowGeometry": true,
        "Id": "59c5eac59663415fbe292067f8e79f07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7703.5120793767619,
        "Y": 489.86692562813448
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "2b5c5d3ff5424aa48d4efebf92ed2b5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9351.04425473143,
        "Y": -136.05834298915909
      },
      {
        "Name": "Perfect Matches",
        "ShowGeometry": true,
        "Id": "47ccb92e1b36432d8b22346797e732ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9625.04425473143,
        "Y": -136.05834298915909
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "8d8b3a4bd33b4ca5abd501e0151a0554",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9351.66792770918,
        "Y": 746.882847320484
      },
      {
        "Name": "6 Char Matches",
        "ShowGeometry": true,
        "Id": "8780bb8e3ad54890a8c2b675ede1b066",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9625.66792770918,
        "Y": 746.882847320484
      },
      {
        "Name": "Takeoff (List 2)",
        "ShowGeometry": true,
        "Id": "ef0152edfda04202b9821860e4379e73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9039.4987688246383,
        "Y": 246.47191540491542
      },
      {
        "Name": "MFL (List 1)",
        "ShowGeometry": true,
        "Id": "fc6c784ea1694ca58fedaaa4a02805df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9053.2469609077925,
        "Y": 402.64065677129292
      },
      {
        "Name": "Takeoff (List 2)",
        "ShowGeometry": true,
        "Id": "df48a14dd3954c2a8ced2ab502741acc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9041.1902207804487,
        "Y": -570.92388778559121
      },
      {
        "Name": "MFL (List 1)",
        "ShowGeometry": true,
        "Id": "9431d9bb52df4235af277d64d8ce489c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9051.76992933501,
        "Y": -419.04390379938752
      },
      {
        "Name": "Indices",
        "ShowGeometry": true,
        "Id": "3e082f1e14a148ba854acaa9de5181c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9073.1623158284019,
        "Y": -120.61058430438993
      },
      {
        "Name": "Indices",
        "ShowGeometry": true,
        "Id": "e113f777892841ceaff65b8037f553b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9051.4348357472481,
        "Y": 697.698009801712
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "d9ab1c2e64bc4394830c08276a0aa888",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9350.3465661367736,
        "Y": 1635.335758624914
      },
      {
        "Name": "5 Char Matches",
        "ShowGeometry": true,
        "Id": "6185fa53275e41d3add9a0fd281f10b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9624.3465661367736,
        "Y": 1635.335758624914
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "a88f71a2d41f4d6b9bff94388d4c3cba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9366.1566304487169,
        "Y": 997.01596431668145
      },
      {
        "Name": "Indices",
        "ShowGeometry": true,
        "Id": "ca46cf8b972c4efaa6c47c47fb217b91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9047.1293773819725,
        "Y": 1605.4946577846179
      },
      {
        "Name": "Takeoff (List 2)",
        "ShowGeometry": true,
        "Id": "df35d30aa1394161a1ef46c916196c1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9033.2579128344387,
        "Y": 1146.884224896977
      },
      {
        "Name": "List.GetItemAtIndex \"Takeoff (List 2): ACI_Supplier Item\"",
        "ShowGeometry": true,
        "Id": "11803228efee4c6f88bc14b312523f20",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8414.9574623660519,
        "Y": 1252.2945112655912
      },
      {
        "Name": "List.GetItemAtIndex (Indices)",
        "ShowGeometry": true,
        "Id": "94ad8ddd02c548cd8a80afa1680efaf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8414.9574623660519,
        "Y": 1542.9678209198546
      },
      {
        "Name": "Output Matches and Indices",
        "ShowGeometry": true,
        "Id": "1ca124736a8b4f59b91fbe30cb429d3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8030.957462366051,
        "Y": 1363.2789588357734
      },
      {
        "Name": "List.GetItemAtIndex \"MFL (List 1): Supplier Item\"",
        "ShowGeometry": true,
        "Id": "a0be9e037be046c7a27a86cd946b43e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8414.9574623660519,
        "Y": 1074.8834915879011
      },
      {
        "Name": "MFL (List 1)",
        "ShowGeometry": true,
        "Id": "7dcaffc4132744f4a62366582eb1a8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9047.397803417145,
        "Y": 1298.1826091718206
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "026ad7320bf642eb89d439e78380d95c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9367.2599278375856,
        "Y": 1316.2402582959467
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5643440ab12c45fbac74996a08876328",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8030.957462366051,
        "Y": 1216.1220112655913
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5a7e9f84e0fc4c2795a5687788ac3ea3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8030.957462366051,
        "Y": 1645.7953209198547
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "004cd6a75089458fac129e50c5e8ca8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8030.957462366051,
        "Y": 1068.7109915879012
      },
      {
        "Name": "Minimum Char Match",
        "ShowGeometry": true,
        "Id": "b9e0aa34feb841f6b59c15318e2b2a7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7698.957462366051,
        "Y": 1374.1064588357735
      },
      {
        "Name": "4 Char Matches",
        "ShowGeometry": true,
        "Id": "50b6c13dde984fefba1b7ee4d1aec3ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9620.0994892895451,
        "Y": 2525.6838134953414
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "bfcc79cdf8b948dd80dd9dbaf5ef87e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9354.4892278415246,
        "Y": 1895.3512740984681
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "9da3d4cb99c54b87b910e0952f29812a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9346.0994892895451,
        "Y": 2525.6838134953414
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "eeb32051f74e4cd5b6548c911fb9e0ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9356.4195653401675,
        "Y": 2212.2911080642848
      },
      {
        "Name": "Indices",
        "ShowGeometry": true,
        "Id": "6b841d9e5e2949a28afb844ead11e74c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9047.6896076015473,
        "Y": 2497.8225010489305
      },
      {
        "Name": "Takeoff (List 2)",
        "ShowGeometry": true,
        "Id": "7f06e0fece7b48c0899cb9a16272a171",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9023.9923826559716,
        "Y": 2042.9236804533598
      },
      {
        "Name": "MFL (List 1)",
        "ShowGeometry": true,
        "Id": "39db6ecba70a491289ee24a1ba954f89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9036.5599631795048,
        "Y": 2193.3376147013064
      },
      {
        "Name": "List.GetItemAtIndex \"Takeoff (List 2): ACI_Supplier Item\"",
        "ShowGeometry": true,
        "Id": "36f7bdad7f874bfe87f6cef3a4b04572",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8425.13982064621,
        "Y": 2115.4318097470768
      },
      {
        "Name": "List.GetItemAtIndex (Indices)",
        "ShowGeometry": true,
        "Id": "94e662c0d05249508c43fcc0093712d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8425.13982064621,
        "Y": 2401.3482165843161
      },
      {
        "Name": "List.GetItemAtIndex \"MFL (List 1): Supplier Item\"",
        "ShowGeometry": true,
        "Id": "bea85e63487745a1bd50fd527425344a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8425.13982064621,
        "Y": 1937.0207900693865
      },
      {
        "Name": "Output Matches and Indices",
        "ShowGeometry": true,
        "Id": "80ef572ffa434fbf915621e0ad84e163",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8041.1398206462109,
        "Y": 2224.5281668241578
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5ac33df8da4d41acb50e42f9993dd4fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8041.1398206462109,
        "Y": 2077.2593097470763
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fee1cea7ed044ce48ce76de2c31bf533",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8041.1398206462109,
        "Y": 2507.1757165843155
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a08102cad665456db01db88c5c9214f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8041.1398206462109,
        "Y": 1929.8482900693868
      },
      {
        "Name": "Minimum Char Match",
        "ShowGeometry": true,
        "Id": "8f0162fa3b6e4b7995d77748763247e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7709.1398206462109,
        "Y": 2235.3556668241572
      },
      {
        "Name": "3 Char Matches",
        "ShowGeometry": true,
        "Id": "709cb3a8490e4294a5aa98a7d1223d57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9626.7931075969464,
        "Y": 3442.0742130864428
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "967633855df2420ea99566735690790a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9352.7931075969464,
        "Y": 3442.0742130864428
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "2916e84fb1054f68a9a4346f8bdbf73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9362.10827837665,
        "Y": 3119.7007738043731
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "5a77ce8bfc9545f6be59aacdf67f2e9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9370.4026962187181,
        "Y": 2801.9837371508115
      },
      {
        "Name": "Indices",
        "ShowGeometry": true,
        "Id": "138ae0638c0742ae819a553290067a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9034.8801448531667,
        "Y": 3355.6210001479822
      },
      {
        "Name": "Takeoff (List 2)",
        "ShowGeometry": true,
        "Id": "cb8e98ddef8a44f09df0550ab8d7c263",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9047.1552378415345,
        "Y": 2902.9869241464785
      },
      {
        "Name": "MFL (List 1)",
        "ShowGeometry": true,
        "Id": "54a63bec891843888ba2e9666f64696c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9040.3066362598,
        "Y": 3056.012514035895
      },
      {
        "Name": "List.GetItemAtIndex \"Takeoff (List 2): ACI_Supplier Item\"",
        "ShowGeometry": true,
        "Id": "579cab4efbd749e4a5782b62e826c58d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8412.94725291218,
        "Y": 2998.1796127931052
      },
      {
        "Name": "List.GetItemAtIndex \"MFL (List 1): Supplier Item\"",
        "ShowGeometry": true,
        "Id": "0026ce7121dc4d04a5326e976aed939a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8412.94725291218,
        "Y": 2820.7685931154156
      },
      {
        "Name": "List.GetItemAtIndex (Indices)",
        "ShowGeometry": true,
        "Id": "0c2ef88202ef41199275343caf0ebed5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8412.94725291218,
        "Y": 3290.3848041353931
      },
      {
        "Name": "Output Matches and Indices",
        "ShowGeometry": true,
        "Id": "457517162dd84207ba73adcf12123a86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8028.9472529121795,
        "Y": 3109.1872497473569
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4283b3a6f8cb4b20bd3c31a299a4a2af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8028.9472529121795,
        "Y": 2962.0071127931051
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "716a7dda4b2c487cab84eaf43836fb3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8028.9472529121795,
        "Y": 3391.212304135393
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8fd9ae51812a42f3b28b6de5f345ec4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8028.9472529121795,
        "Y": 2814.5960931154154
      },
      {
        "Name": "Minimum Char Match",
        "ShowGeometry": true,
        "Id": "4ec3d72878a84b53bbfaca629eba33b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7696.9472529121795,
        "Y": 3120.0147497473567
      },
      {
        "Name": "Weight",
        "ShowGeometry": true,
        "Id": "2bd6055a47334fa9b342528e2cf0a8a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7696.9472529121795,
        "Y": 3268.0147497473567
      },
      {
        "Name": "Weight",
        "ShowGeometry": true,
        "Id": "65553dadf51642eba8d17aeda7e4b272",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7709.1398206462109,
        "Y": 2383.3556668241572
      },
      {
        "Name": "Weight",
        "ShowGeometry": true,
        "Id": "843edc5a4b1e4744bc1e1d1cd76c18a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7698.957462366051,
        "Y": 1522.1064588357735
      },
      {
        "Name": "Weight",
        "ShowGeometry": true,
        "Id": "42d63c7d751f44bf866c4131dd22c3cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7703.5120793767619,
        "Y": 637.86692562813448
      },
      {
        "Name": "Weight",
        "ShowGeometry": true,
        "Id": "386d749fe0d6444c8c6b8a04aa15b8aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7778.37484180395,
        "Y": -272.77640744941738
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "f150802cb94a441e9b1fcbb69a0fe5c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10614.019384552335,
        "Y": 1511.0974774571575
      },
      {
        "Name": "List.GetItemAtIndex \"Takeoff (List 2): ACI_Supplier Item\"",
        "ShowGeometry": true,
        "Id": "1c34d702615b4b8c955135cdc933f114",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10886.185127838811,
        "Y": 1443.0643921197677
      },
      {
        "Name": "List.GetItemAtIndex (Indices)",
        "ShowGeometry": true,
        "Id": "27ee850eb2444c95968eb17458b07a9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10886.185127838811,
        "Y": 1633.0974774571575
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "91d98ecb544d4859ba5950074ae89c78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10612.185127838811,
        "Y": 1363.8918921197678
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b5f5230c6d654ec593a5ebcd672703e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10612.185127838811,
        "Y": 1840.9249774571576
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4524c8dfe37a44dea5c4275ae5217c9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10612.185127838811,
        "Y": 1216.4808724420777
      },
      {
        "Name": "List.GetItemAtIndex \"MFL (List 1): Supplier Item\"",
        "ShowGeometry": true,
        "Id": "69f5b7a69e074a619c63124850e9866c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10886.185127838811,
        "Y": 1253.6533724420776
      },
      {
        "Name": "Takeoff (List 2)",
        "ShowGeometry": true,
        "Id": "808ac222d1d141429431d3d78a9b2503",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11588.627082816598,
        "Y": 1355.1746668991655
      },
      {
        "Name": "MFL (List 1)",
        "ShowGeometry": true,
        "Id": "9ded816e3cb34bee8e78b33afd5e998b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11592.274132113622,
        "Y": 1510.1221170190993
      },
      {
        "Name": "Indices",
        "ShowGeometry": true,
        "Id": "2dc6769495db408b8f3dc8b168004ec8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11583.431234177018,
        "Y": 1659.8035507544355
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "84ea3f8ee75946f0a6560f3780e42e3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5885.0373368458486,
        "Y": 2668.0939617493277
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "2c43e1005fa54937886f1784810b1e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5556.0373368458486,
        "Y": 2774.0939617493277
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "abed8de685c74f26a64096c06f4e51bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5280.0373368458486,
        "Y": 2539.0939617493277
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "c8ca98544cbd49efb899eefc34e85c3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5556.0373368458486,
        "Y": 2596.0939617493277
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5dda519562144df0bad876cbbf5a6290",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5280.0373368458486,
        "Y": 2686.9214617493276
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "1cbf65d3ca1949d89230f34cc45fd97a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16113.016813391732,
        "Y": 1629.6848001434855
      },
      {
        "Name": "List.GetItemAtIndex (Weights)",
        "ShowGeometry": true,
        "Id": "f54fd8f5e4094164bc18f772dacb9f64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10886.185127838811,
        "Y": 1822.8636932167299
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9fdcd3a672e045e1a532a18243c68d05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10612.185127838811,
        "Y": 1988.69119321673
      },
      {
        "Name": "Tuple",
        "ShowGeometry": true,
        "Id": "b34862855b62460184530eb3b0dc90e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9061.8396568432818,
        "Y": 550.00187382240858
      },
      {
        "Name": "Tuple",
        "ShowGeometry": true,
        "Id": "bd7f6a58631f4179b6d72e394c9a76aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9071.804884963829,
        "Y": -271.30044130662782
      },
      {
        "Name": "Tuple",
        "ShowGeometry": true,
        "Id": "a98293a8ce5046d88f797f93ab99b423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9055.1017257501117,
        "Y": 1454.7902432707192
      },
      {
        "Name": "Tuple",
        "ShowGeometry": true,
        "Id": "25d2312cacee4019ab9465d0cd446334",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9047.34884508571,
        "Y": 2343.0988083658526
      },
      {
        "Name": "Tuple",
        "ShowGeometry": true,
        "Id": "4692f08fe70d41ed821a4d21c638f42b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9034.6102826592178,
        "Y": 3204.4310827141967
      },
      {
        "Name": "Start Column",
        "ShowGeometry": true,
        "Id": "2d6fe0e3346b4ea69e0ee30c43567171",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7683.61498536435,
        "Y": 3590.9107413031961
      },
      {
        "Name": "Start Column",
        "ShowGeometry": true,
        "Id": "812ebd73a6fa400db83e92d78dc38447",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9650.10919524246,
        "Y": 3603.0225015077767
      },
      {
        "Name": "Start Column",
        "ShowGeometry": true,
        "Id": "dc0ac8071ede47139a5351fb1c285e3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7681.5465083649551,
        "Y": 3736.7383697605437
      },
      {
        "Name": "Start Column",
        "ShowGeometry": true,
        "Id": "73db9aa2b4434c2ab49e43707490f4b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9649.8166349696585,
        "Y": 3744.5718931003139
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "66cb63ab360042b4a6c253aaecf46eee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6557.7815357055615,
        "Y": 3892.4695286259152
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "46e436cf260b4628a26f6bb6bcfa1ae5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9687.4745992789085,
        "Y": -1165.3615977896288
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "f0dee5618a6c486b94511353d39585b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6407.6265577155482,
        "Y": -1137.7887522963133
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "cdf65203de384e298fe9bc0f8ee38433",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16126.205612716343,
        "Y": 2414.5373044038979
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "aa4bd44f9352474ebf5366a9a268fe7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9649.2659229311048,
        "Y": -1544.2478099886575
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "7ecb2e5df844401aab7832ab9c3c4bb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9320.2659229311048,
        "Y": -1438.2478099886575
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "68f1a47643c14bc38ef118432b845d31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9044.2659229311048,
        "Y": -1673.2478099886575
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "3a6fe612b1fd4f858e2815ace6ac4bb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9320.2659229311048,
        "Y": -1616.2478099886575
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "15c557b9cc88460b9a1e9d291b75bc3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9044.2659229311048,
        "Y": -1525.4203099886572
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "66f3e7cf00dd47d79185725786e11bf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15577.632330721082,
        "Y": 2741.6871995625816
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "85933ee157bd427ea32f190667c92d9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15323.632330721082,
        "Y": 2718.514699562581
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c2d6333ad7914ae393e4f3c62665f955",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15323.632330721082,
        "Y": 2866.514699562581
      },
      {
        "Name": "Weights",
        "ShowGeometry": true,
        "Id": "0f03e9286a4644a8abc36f0d71b7d200",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11584.337590859646,
        "Y": 1807.5697665140078
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "eebc6656f4eb4d878a1c413f9be86726",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12143.833726053468,
        "Y": 1451.4698802390733
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "ed24dbd49d9346a492732de34acbff68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12136.415691247259,
        "Y": 1134.461896802286
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "1b36cafffea143ecbb22caee5a60d67b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12138.386755146646,
        "Y": 1774.1518740063575
      },
      {
        "Name": "6 Char Matches",
        "ShowGeometry": true,
        "Id": "a8af2c96a96c44358bef2f9957e60341",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12412.386755146646,
        "Y": 1774.1518740063575
      },
      {
        "Name": "Weight",
        "ShowGeometry": true,
        "Id": "7eb90173e9e44887a60331f08850a424",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6301.8343786439345,
        "Y": 1976.6445689793807
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "5b181c1e5f034fb8993d6d3ad087ccfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3127.5551700247825,
        "Y": 1566.7343764130219
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "0301e591419f4ccda4feebea10665367",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7833.9418989459828,
        "Y": -1013.7393088106373
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "5c28a3f486114a1c93e9062ac7e8ce0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9692.6765507383661,
        "Y": -1019.387128176561
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "81932197016f40229ffb2df836c6058d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11437.987093866268,
        "Y": 2037.9452550167516
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "98e4d1ab51b742578979f267711c7b35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11730.104094214876,
        "Y": 2035.2038777119437
      },
      {
        "Name": "Drop Headers",
        "ShowGeometry": true,
        "Id": "651097d4f8fc4214906d23bc3883b7ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10344.870880857876,
        "Y": 1867.9479872588226
      }
    ],
    "Annotations": [
      {
        "Id": "4bdd7f282e204e8a838da7877929b7e3",
        "Title": "Read from Takeoff Excel",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c83a620722a4441b8ebbc32962017ae5",
          "00503feecdf5480d84c9e19d4d661e16",
          "36fd2947d51b4b8694aeca9038c7d050",
          "8b284b7cc2cf4ca39f6b0158808c575d"
        ],
        "HasNestedGroups": false,
        "Left": 2377.8277219851871,
        "Top": 1071.7645763359794,
        "Width": 552.0,
        "Height": 500.00000000000023,
        "FontSize": 36.0,
        "InitialTop": 1144.7645763359794,
        "InitialHeight": 440.00000000000023,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "07b670efcc0b4dbf9558adccf80f8e0e",
        "Title": "Current Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "43109bd6f3cc40f7ab4e8d91da4cd261",
          "1b03e36244c74115a7e1798071ac4b3d",
          "2bf374943bc14b28b13148f80856e8f4",
          "431c59b2e6a2412d8bd05fa2b2a4eb5e",
          "07d799f978374e1b811303d74c276e71"
        ],
        "HasNestedGroups": false,
        "Left": -1865.3795260738739,
        "Top": 538.2289664256914,
        "Width": 1079.0,
        "Height": 500.0,
        "FontSize": 36.0,
        "InitialTop": 611.2289664256914,
        "InitialHeight": 440.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "17774a215dd147b6a8e800fccae57233",
        "Title": "Extract \"Supplier\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cb2f7d0889ed49a880100f280c3667b6",
          "b0febaeff4f84a56977d159125fc61c5",
          "0c9e07653e7e4a5c9a8886f6a6a3c319",
          "fc9a6d528daa4b9181b143ebba15ea35",
          "ff2893e4b12944e1b6405074da397459"
        ],
        "HasNestedGroups": false,
        "Left": 9871.68621194473,
        "Top": -1972.6390879894502,
        "Width": 814.0,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": -1899.6390879894502,
        "InitialHeight": 384.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "3c5dfae5fee8404faaca38643439398f",
        "Title": "Extract \"Supplier Item\" from Master Family List (List 1)",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c8cdc6b01f734b2eacbff584bb58c532",
          "bae9b50a61d14b7f9f34489ca815ab20",
          "4b0588f9b3214a429bc0b3582988f601",
          "b297e762148c430cb41971b2cb34388c",
          "6ca00edc234b4a49ba996bfb0c7e366a",
          "0e6f61d10ee340c3ad83f21d3d4acb9a",
          "ba76576921be4a7d82e11d6443504819"
        ],
        "HasNestedGroups": false,
        "Left": 5349.6904463766459,
        "Top": 569.25428143277372,
        "Width": 1109.0,
        "Height": 443.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 642.25428143277372,
        "InitialHeight": 383.99999999999989,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "669157f174464fc09acf2bb9cbdcaa81",
        "Title": "Write Supplier Item to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4f6b81ac97214019b00d2a70706eae54"
        ],
        "HasNestedGroups": false,
        "Left": 16098.331261889642,
        "Top": 896.55921933609079,
        "Width": 255.0,
        "Height": 506.0,
        "FontSize": 36.0,
        "InitialTop": 1065.5592193360908,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "71bae411da9b4870b651199e873c3184",
        "Title": "Extract \"[R] ACI_Supplier Item\" from Takeoff to Test for (List 2)",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "faeda1d3bde84ef8933e980a7f614cdc",
          "4a9d132ceba7418ca4027198364c735f",
          "4e46d316dd7b4278b1c46ef189da1953",
          "193b380afb2d430795b182870e121c2d",
          "35c4a3e7d3ba46968cd72d6d09b859e6",
          "722172f0dc364336a6b869fcdff5c1ed",
          "3519382bf1264f55a6c6c0522bc084ee",
          "8bb64df80e1e49f8bc6ddbc40a7ef9e2",
          "a9914841cbe74350b8ec569880a96b32"
        ],
        "HasNestedGroups": false,
        "Left": 5041.213167654425,
        "Top": 1198.4100966546746,
        "Width": 1438.0,
        "Height": 459.0,
        "FontSize": 36.0,
        "InitialTop": 1271.4100966546746,
        "InitialHeight": 399.0,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "6115afe7dea94bc9bd82b12b55e2831a",
        "Title": "Combine Into the Current Project Path and Template Name for Takeoff",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "86f299c70d0b415c995ce8520704f004",
          "01b4261811ec43509d87976d9944e4eb",
          "f4209fa478914b15a9ada0103279dec0"
        ],
        "HasNestedGroups": false,
        "Left": 1455.7457529724347,
        "Top": 1136.6082766301197,
        "Width": 644.0,
        "Height": 426.17249999999967,
        "FontSize": 36.0,
        "InitialTop": 1252.6082766301197,
        "InitialHeight": 293.17249999999967,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a8e6c5f3b51a4410bebaefb6ec29e77b",
        "Title": "Combine Into the Current Project Path and Template Name for Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "288deaded19d4632b8ba4d7d637eec5a",
          "deccb51e884c4526acdcd5171943f5b0",
          "13b662583bdb4365b562618db9f2f471"
        ],
        "HasNestedGroups": false,
        "Left": 1468.5166533042634,
        "Top": 1624.1294696425775,
        "Width": 644.0,
        "Height": 426.17249999999967,
        "FontSize": 36.0,
        "InitialTop": 1740.1294696425775,
        "InitialHeight": 293.17249999999967,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a47ecd8caa504729b352da77ca3e9982",
        "Title": "Return the File Name of the Takeoff Template",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7d63151ba96c48d79fe13493f24a8fdf",
          "4f37f8de0911479bba9af352d0607640",
          "515c788bd0584a23a7503c8749e9ac82",
          "0544ad3309b34cb39c71746b876a5b24",
          "fb89fd8ed5b343cfae10d99705b3c8cf"
        ],
        "HasNestedGroups": false,
        "Left": -1986.8387029407104,
        "Top": 1614.8562808971469,
        "Width": 1197.9999999999995,
        "Height": 387.0,
        "FontSize": 36.0,
        "InitialTop": 1687.8562808971469,
        "InitialHeight": 327.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "2147acd8a2584055943f12b745885afa",
        "Title": "Return the File Name of the Master Check Template",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "17176bd118424a65ad5a9d5ca7505d14",
          "7cbcf700fd794ae8bdb85dd59182cf10",
          "80cd8a6237d64d97bbde8e23fc3ee5bb",
          "0416656eebe04936a5763991d428d80a",
          "72f8ad7df41a41849298fb6adcc7fb68"
        ],
        "HasNestedGroups": false,
        "Left": -1986.7057924622586,
        "Top": 2048.25661403044,
        "Width": 1198.0,
        "Height": 387.0,
        "FontSize": 36.0,
        "InitialTop": 2121.25661403044,
        "InitialHeight": 327.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "0c39c6d1d30348299b8225ed95b85149",
        "Title": "Takeoff Template Location",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a34ff539235a4fc39e44b6adfb71da93",
          "2cd6827ca2fa4024b03b04b63e2f8e89",
          "5a56339a5cb045a6bcdcbac466abf32f"
        ],
        "HasNestedGroups": false,
        "Left": -2911.1950648238826,
        "Top": 1762.5008279133212,
        "Width": 855.00000000000182,
        "Height": 214.0,
        "FontSize": 36.0,
        "InitialTop": 1835.5008279133212,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "c40220d8f9574b7794a5e5c53d4f984a",
        "Title": "Master Check Template Location",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6fca8112a30740ffae499b20c814a330",
          "9102976b23544edd98c03715577eceeb",
          "fd392dff5012431c90165aa68785cfd3"
        ],
        "HasNestedGroups": false,
        "Left": -2965.0815262971964,
        "Top": 2190.70335910809,
        "Width": 905.99999999999773,
        "Height": 214.0,
        "FontSize": 36.0,
        "InitialTop": 2263.70335910809,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "0a3ddb449852439e9c45088212062d9c",
        "Title": "Return the Folder of the Current Project",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "07409d3ddced4a5b8bbab5892024b457",
          "e5db4745cf334385a212e8e7940384ca",
          "572062e5a6614e2c8a5e2f932c409dbd",
          "bf0df934dc6243529c4906240f950387",
          "3fd7c3ca85ac467dbd791d97e27f044f",
          "51574a41c53a4a5daeb82055e02ed2de"
        ],
        "HasNestedGroups": false,
        "Left": -2010.4235238577908,
        "Top": 1118.3263086684524,
        "Width": 1217.0,
        "Height": 459.0,
        "FontSize": 36.0,
        "InitialTop": 1191.3263086684524,
        "InitialHeight": 399.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "ce694f39200a41fb9fd39cdafdb44ed1",
        "Title": "Current Project",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "aa37b99e3c5f4108bb6ed698587e0f63",
          "9967b0dd192e49a397dada63c567a1fe"
        ],
        "HasNestedGroups": false,
        "Left": -2639.1592919771429,
        "Top": 1195.4139373867333,
        "Width": 553.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "InitialTop": 1268.4139373867333,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "16185b9f689747ba8ed983b861b3f51d",
        "Title": "Extract \"[O] Supplier Item\" Index from Takeoff to Write into Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cba6e3e607d34d91ad28e20187c2077b",
          "dbdec53626fa4aacab8e54831755377a",
          "50623d63e1bd493c94c9096afaa4df7d",
          "fdd35952d77c4a0ba6c1fbb5817f2a89",
          "fce24a62a8694eeea9465256158f44b5"
        ],
        "HasNestedGroups": false,
        "Left": 5259.931136698563,
        "Top": 1866.067800592421,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": 1982.067800592421,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "58f21208fbe04eb5853b2f5c1c382d8c",
        "Title": "Write \"[O] Supplier\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d7a1ecefc4a14b008bb124ffe80522fa"
        ],
        "HasNestedGroups": false,
        "Left": 16020.702568331579,
        "Top": -2170.6031112403125,
        "Width": 255.0,
        "Height": 506.0,
        "FontSize": 36.0,
        "InitialTop": -2001.6031112403125,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "ca9c0f9c2bce48deb00b861519bccdef",
        "Title": "Extract \"[O] Supplier Index\" from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c7f1bf1223924eb1b50897c2a855c772",
          "7a5cba97897c41e585bcfac73222e8e1",
          "8e37bdcd23cb4d2fb0cd62f440a49f2e",
          "037b1bc8d03d4106b6aeb6e4a240ed2a",
          "f8b27c23450c4356a3709676942e33ba"
        ],
        "HasNestedGroups": false,
        "Left": 9016.6228841391166,
        "Top": -2334.4434090090313,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": -2218.4434090090313,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "1cfe66d870c44303886efe5d3df05e8c",
        "Title": "Condition \"[O] Supplier\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "973de549ce8e4092a71f7c26da7690af"
        ],
        "HasNestedGroups": false,
        "Left": 15474.291816102657,
        "Top": -1858.8531679077796,
        "Width": 194.0,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": -1689.8531679077796,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "65eb0f3f6c3e4440a4fa1062a8e65b00",
        "Title": "Extract \"Description\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8ead71d7afab455fa604f4c59184edbc",
          "1a218e05062c4296b8c00bb2c855b34c",
          "8cf0eef811814af0901a1b6d9acea891",
          "df4d1c9f2dd2406a96b3cb0a256cfae6",
          "8614feb5c40c4d19857d4c21866016df"
        ],
        "HasNestedGroups": false,
        "Left": 9867.7469680640315,
        "Top": -2499.04603308534,
        "Width": 814.0,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": -2426.04603308534,
        "InitialHeight": 384.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "03832f9bb9894116a5f8e283b1b0880b",
        "Title": "Condition \"[O] Description\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "be641e7e4fb246d4941d906aa623e7ed"
        ],
        "HasNestedGroups": false,
        "Left": 15496.228997801032,
        "Top": -2367.9134884957975,
        "Width": 214.88000000000002,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": -2198.9134884957975,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "aacd04e42afc4cb2bd754042e15dc078",
        "Title": "Extract \"[O] Description\" Index from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ab6bd76be8c544279b3f52d82afee6a6",
          "1234f289b60b4a3bbd5fc0a0c97fb7c4",
          "db858128063f4258801c399365405623",
          "db6786c9c4ac4766bfa5b84b93dc731a",
          "cdc7914dc4c9409bafd377747412c928"
        ],
        "HasNestedGroups": false,
        "Left": 9018.174085364757,
        "Top": -2856.2986835607589,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": -2740.2986835607589,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "aa7f23a7fbdb43b3979d05bbfb5a46f7",
        "Title": "Write \"[O] Description\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4253e7776c3f4ddea66bb142a981a7fd"
        ],
        "HasNestedGroups": false,
        "Left": 16027.383375079038,
        "Top": -2741.5434267894098,
        "Width": 255.0,
        "Height": 549.0,
        "FontSize": 36.0,
        "InitialTop": -2529.5434267894098,
        "InitialHeight": 145.0,
        "TextblockHeight": 202.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "61e1082338a74cc79a3216d10f4be2ec",
        "Title": "Extract \"[O] Revit EQ Category\" Index from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f717fdf83d8c4c959da07cb9bd8fed65",
          "eea13bf88fa24e448399c858fc24f703",
          "99ed0ff74b404735b63d2185c0fb3b9c",
          "2e94ce389c9d436a8d4ec534afb31233",
          "5a2f769e454e4413b699d74774fc84f8"
        ],
        "HasNestedGroups": false,
        "Left": 9018.3179497428,
        "Top": -3415.5025799468895,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": -3299.5025799468895,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "a201f8adcf594911a7f843f3af01954e",
        "Title": "Extract \"Revit EQ Category\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9549a61ff7c84fd8b37b05665646cc02",
          "678722a87c0344c2bb49405870f4dd7f",
          "f5f911f40a9149e6aa7b532583c1a5c4",
          "525ff4f6217c4c5ba2983f187a3cae02",
          "7dcc1c32ed084acf9c3d35adde95626d"
        ],
        "HasNestedGroups": false,
        "Left": 9872.8572120821118,
        "Top": -3061.9163127378465,
        "Width": 814.0,
        "Height": 487.0,
        "FontSize": 36.0,
        "InitialTop": -2945.9163127378465,
        "InitialHeight": 384.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "03d8b43f62734a7ba65f30ba41de0399",
        "Title": "Write \"[O] Revit EQ Catergory\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "55b87485aa3c497ea10023b4a523836b"
        ],
        "HasNestedGroups": false,
        "Left": 16033.110146253121,
        "Top": -3304.3015034449509,
        "Width": 255.0,
        "Height": 549.0,
        "FontSize": 36.0,
        "InitialTop": -3092.3015034449509,
        "InitialHeight": 145.0,
        "TextblockHeight": 202.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "3472d87197b04c38a8ce0db749d7a3ff",
        "Title": "Condition \"[O] Revit EQ Category\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "853aca11963d46d79016fc8dbf299935"
        ],
        "HasNestedGroups": false,
        "Left": 15506.117784215645,
        "Top": -2921.7632768277854,
        "Width": 194.0,
        "Height": 374.0,
        "FontSize": 36.0,
        "InitialTop": -2709.7632768277854,
        "InitialHeight": 145.0,
        "TextblockHeight": 202.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "38451413696c411191da4a4e14f1b97d",
        "Title": "Extract \"Revit EQ Tag\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dad8b8587abb47eaa4cbf1fc3876cd79",
          "e86011f8790e473086ccf273637e48c2",
          "8a3d2f5994544fa7a90b769e9cf00849",
          "d9016619441947c38eb8e91548168cbd",
          "a1ffb60638e94bd5a0059f45d6ba325f"
        ],
        "HasNestedGroups": false,
        "Left": 9881.5706793749487,
        "Top": -3576.5782194793119,
        "Width": 814.0,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": -3503.5782194793119,
        "InitialHeight": 384.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "5cd6936d162f4a30a1b2220ad1eb3bbf",
        "Title": "Extract \"[O] Revit EQ Tag\" Index from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d762a3b1ed41420f942f40af5885efe9",
          "f49ce34d8e614da2857acfa7322ff43e",
          "2cc78092fe504868971e0f27cb830ea4",
          "bfe36a37951c46669c90a8fabde75873",
          "bb405b90a7c7491eaa65d8f234b3a073"
        ],
        "HasNestedGroups": false,
        "Left": 9018.644242564922,
        "Top": -3982.3910041704967,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": -3866.3910041704967,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "d7c2ad2835cc4e65ac421ef9f4bdee77",
        "Title": "Write \"[O] Revit EQ Tag\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bc044b13b0744c1785b0fdcb3df6b470"
        ],
        "HasNestedGroups": false,
        "Left": 16036.546947688044,
        "Top": -3878.6958843358984,
        "Width": 255.0,
        "Height": 549.0,
        "FontSize": 36.0,
        "InitialTop": -3666.6958843358984,
        "InitialHeight": 145.0,
        "TextblockHeight": 202.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "9d5f3b13c98b483bae239644826e7a11",
        "Title": "Condition \"[O] Revit EQ Tag\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "04de610af6c249e2bd45217fc4b59f5c"
        ],
        "HasNestedGroups": false,
        "Left": 15503.618392892997,
        "Top": -3444.70805451649,
        "Width": 194.0,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": -3275.70805451649,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4d9cf7f3f777485aa44247c482027166",
        "Title": "Write \"[O] Attachment URL\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "66f64303227242548e9bc8e26a967f79"
        ],
        "HasNestedGroups": false,
        "Left": 16046.665944665003,
        "Top": -4454.5852083816062,
        "Width": 255.0,
        "Height": 549.0,
        "FontSize": 36.0,
        "InitialTop": -4242.5852083816062,
        "InitialHeight": 145.0,
        "TextblockHeight": 202.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "1dc09cac7e1f43628c8a86ac616edacb",
        "Title": "Extract \"[O] Attachment URL\" Index from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0c4cdd50fa184904a86493ef41d88760",
          "2d8b08c17fae46d581e71756bd0ae2ea",
          "be7289fb580a4aef9e08f016086fe262",
          "c9329e2efccd435ea58ec52bb233452a",
          "b07535624b304a9d977bf5103de9a72f"
        ],
        "HasNestedGroups": false,
        "Left": 9027.8457732463576,
        "Top": -4576.7836921635508,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": -4460.7836921635508,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "5a87c473c08d4716964a7f12a6154b96",
        "Title": "Extract \"Attachment URL\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d4f372b6ace645c3add0558472554143",
          "6efd984eceae4cfc9a5c53939c524ed3",
          "f9f7c49cb2b44041908dd6da6c31a078",
          "9633d2a43cb844db8c280e9b7027a11d",
          "aa30fe593d644ba8a21eecdaa32c3708"
        ],
        "HasNestedGroups": false,
        "Left": 9893.7395116947664,
        "Top": -4183.6974212095283,
        "Width": 814.00000000000182,
        "Height": 444.00000000000273,
        "FontSize": 36.0,
        "InitialTop": -4110.6974212095283,
        "InitialHeight": 384.00000000000273,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "b5362b599d3e4ba29b82ad747e7283e3",
        "Title": "Condition \"[O] Attachment URL\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "87b61a99552a472ab31af39b31afc0d6"
        ],
        "HasNestedGroups": false,
        "Left": 15501.093783731083,
        "Top": -4071.4465713625336,
        "Width": 205.34666666666669,
        "Height": 374.0,
        "FontSize": 36.0,
        "InitialTop": -3859.4465713625336,
        "InitialHeight": 145.0,
        "TextblockHeight": 202.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dc3dffed2eef46bc92ed7f142084d988",
        "Title": "Condition \"[O] CA: Department\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "65f97bd90fc84413a9073417b152ee52"
        ],
        "HasNestedGroups": false,
        "Left": 15539.325222496327,
        "Top": 4431.1309583749144,
        "Width": 224.79000000000002,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": 4600.1309583749144,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a065335a23184384bf823ea2daeddd73",
        "Title": "Extract \"CA: Department\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "68ab4720e339450cbf459f2443c07b25",
          "b7c8bc404241475f91908983df63a541",
          "78fef0d35686440cbd3f0d9f1ea79de8",
          "309521b8ae7647d98283ab9647a10cb8",
          "158a6533afee45bb82ffb4be82e43caa"
        ],
        "HasNestedGroups": false,
        "Left": 9860.5830845596629,
        "Top": 4436.1166744327875,
        "Width": 814.00000000000182,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": 4509.1166744327875,
        "InitialHeight": 384.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "506ab9edd9844125ab5cf582321416be",
        "Title": "Write \"[O] CA: Department\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "512b04951ee04631966d626c5e0a5c85"
        ],
        "HasNestedGroups": false,
        "Left": 16108.581564900747,
        "Top": 4038.5650327606263,
        "Width": 255.0,
        "Height": 549.0,
        "FontSize": 36.0,
        "InitialTop": 4250.5650327606263,
        "InitialHeight": 145.0,
        "TextblockHeight": 202.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "d81b55b16fb24ea581cd6ff5faffb1ff",
        "Title": "Extract \"[O] CA: Department\" from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "48bd29da1569465284ad48ffc6121729",
          "63fb40e78a104f7ab9c54132a0bfe66a",
          "b97e1ac2f3c34563b2f9c84dcd20458d",
          "9240e7e7b277452caeb8b557bcdfcd8e",
          "8b266ccd01204145b5cf6b0278944b5a"
        ],
        "HasNestedGroups": false,
        "Left": 9005.5197567540545,
        "Top": 4076.1907939467583,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": 4192.1907939467583,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "ee5e1be865a14dea89379d61d129ef12",
        "Title": "Condition \"[O] CA: Type\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5ff45027f59b4fa7ae9cada5dd06038e"
        ],
        "HasNestedGroups": false,
        "Left": 15520.109919102902,
        "Top": 4965.9388523659427,
        "Width": 194.0,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": 5134.9388523659427,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8aa2c4d6d8dc4e30838de003243a7c65",
        "Title": "Write \"[O] CA: Type\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "60ec868aaa89468bb8fe900251b4b7e9"
        ],
        "HasNestedGroups": false,
        "Left": 16110.78767356491,
        "Top": 4612.5964833706012,
        "Width": 255.0,
        "Height": 506.0,
        "FontSize": 36.0,
        "InitialTop": 4781.5964833706012,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "5346b63d48324f8f94da732d7388301c",
        "Title": "Extract \"CA: TYPE\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4ea7c8a3978746daa899ca2df59bf1ac",
          "6c1c82c4ab8c46509dc2d14471b514c2",
          "76a5ff19045e470791ec7437fe7e9a9f",
          "d5e48da9bc734223980604cb8696af00",
          "93a3baedc6d547f39f970efac8f5f296"
        ],
        "HasNestedGroups": false,
        "Left": 9860.2891932238272,
        "Top": 4967.7888624960306,
        "Width": 819.0,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": 5040.7888624960306,
        "InitialHeight": 384.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "46e16569723e4202ba0b570a3b8f8e61",
        "Title": "Extract \"[O] CA: Type\" from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "df8c5804ca624bc880c28f359911e2cf",
          "8507e033605547f4869f2ec646bb6dbf",
          "9836bc253293439aa233f41980eb3369",
          "1a40f94dbefb497582b2ccedf328c40b",
          "8d5ef2cefdde46e6a6b8efc34b07a775"
        ],
        "HasNestedGroups": false,
        "Left": 9007.7258654182169,
        "Top": 4607.8629820100014,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": 4723.8629820100014,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "d6cf6c6be67e47f9840ada94f3a05777",
        "Title": "Condition \"[O] CA: LF\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2ab8844c4da34c17b80c617113cf343c"
        ],
        "HasNestedGroups": false,
        "Left": 15522.259965683501,
        "Top": 5501.5292870460935,
        "Width": 194.0,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": 5670.5292870460935,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "634f742ee61b4e50a32ffc25a8f3103d",
        "Title": "Write \"[O] CA: LF\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "247eb40c20684daaabee9d14976c4b19"
        ],
        "HasNestedGroups": false,
        "Left": 16112.937720145508,
        "Top": 5147.9580819404391,
        "Width": 255.0,
        "Height": 506.0,
        "FontSize": 36.0,
        "InitialTop": 5316.9580819404391,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "b89b7eeef36c483c896b6777760d50dc",
        "Title": "Extract \"CA: LF\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a0aee2a6b64640ff986a696d59bb4217",
          "da9de1052f8b4be0a8e7315cb87c4ddf",
          "5a7bd2a1732a440daafc9e8a36b6c465",
          "d9b27dd29b0c4c33b2350ce44d9f6b14",
          "1f77d74129e54112bc6de2ef199064cd"
        ],
        "HasNestedGroups": false,
        "Left": 9862.43923980443,
        "Top": 5503.1504610658685,
        "Width": 819.0,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": 5576.1504610658685,
        "InitialHeight": 384.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "0cff8ad8893f4e568ef46bd3426379af",
        "Title": "Extract \"[O] CA: LF\" from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2dfc1cfcfadb45c5993e33dc5f715857",
          "3fde08b476fc4f909e59fa19ed1be613",
          "a7dce11432b44bac8b3e0ddff2b082fc",
          "49f851e5d9074e6d8f8dbaa1c6c65611",
          "db26e6b026004f07a6c5743e4e6dae26"
        ],
        "HasNestedGroups": false,
        "Left": 9009.875911998819,
        "Top": 5143.2245805798393,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": 5259.2245805798393,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "9beb33b85b7e49ab8ae18a7625976e67",
        "Title": "Condition \"[O] CA: Count\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1a513cb8806d4f44a9f44eea2e835308"
        ],
        "HasNestedGroups": false,
        "Left": 15514.144923925658,
        "Top": 6028.1766547641046,
        "Width": 194.0,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": 6197.1766547641046,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "18f5ffad58fd4a39a1608e9b14058edb",
        "Title": "Extract \"CA: Count\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0de3b26912ee4d3aa0d836237c43c34b",
          "b19018f281714a6d84d92b18e21ddce6",
          "dc78e93d45d74e0587e7bbbabac74e78",
          "bf15e2414cfe4a66b72972d5a80866d8",
          "19c402a5947b47618be416bf9644b0e3"
        ],
        "HasNestedGroups": false,
        "Left": 9854.3241980465882,
        "Top": 6030.0266648941833,
        "Width": 818.99999999999818,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": 6103.0266648941833,
        "InitialHeight": 384.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "0c0617a4ff394b39aa6080d3f06e43c3",
        "Title": "Write \"[O] CA: Count\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7074d33ea2aa458e9bfc4606b6e370e6"
        ],
        "HasNestedGroups": false,
        "Left": 16105.976619305251,
        "Top": 5674.8342857687521,
        "Width": 255.0,
        "Height": 506.0,
        "FontSize": 36.0,
        "InitialTop": 5843.8342857687521,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "17e663efa9ef457794d4a0abe9291610",
        "Title": "Extract \"[O] CA: Count\" from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "18115abf99e54d8aad0e186bf794a425",
          "0953309c24c844e992ede30b044b6421",
          "5ebd3e366e504464b907ae0f65c3cbd2",
          "b29ab75e2d244ff18e23853a98c986c1",
          "0e61db4d97bd420e8dccc8ca0d051cf2"
        ],
        "HasNestedGroups": false,
        "Left": 9002.4958461009028,
        "Top": 5670.1007844081541,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": 5786.1007844081541,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "932cc75675874e78ae583e4947a0b4b2",
        "Title": "Condition \"[O] CA: LSF\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "505811443093402bbce1a453f2687c77"
        ],
        "HasNestedGroups": false,
        "Left": 15516.320398345784,
        "Top": 6556.1853998656652,
        "Width": 194.0,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": 6725.1853998656652,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d2a3db944fdb475897b2663656bc7462",
        "Title": "Extract \"CA: LSF\" from Master Family List",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e314582d6f7b473bb4f3d2353708cbd2",
          "69e74b97c2a9424086f28b5c30a5066b",
          "7d4e4f92779345ba9ea4a22d6c746a0e",
          "8df63ac7687848bcb4860b8277646824",
          "3b498171d6ed4500822dfc7da23ac55d"
        ],
        "HasNestedGroups": false,
        "Left": 9856.4996724667126,
        "Top": 6558.035409995744,
        "Width": 818.99999999999818,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": 6631.035409995744,
        "InitialHeight": 384.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "29508a586afd4ce69725f8951cf36f49",
        "Title": "Write \"[O] CA: LSF\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "199a0c944a7b43aeb5eae1518da4d61b"
        ],
        "HasNestedGroups": false,
        "Left": 16120.024968401793,
        "Top": 6204.2904548252036,
        "Width": 255.0,
        "Height": 506.0,
        "FontSize": 36.0,
        "InitialTop": 6373.2904548252036,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "158fc63e5b80446dba396aa876e78906",
        "Title": "Extract \"[O] CA: LSF\" from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d3177e004b5a4425a1ca3753453f294d",
          "24045bd3ca5841b29799d1765368a4b4",
          "f389084cd5e34f1c8776094b3a356ab0",
          "513f08ffdf0847f5a1bec07066d184bb",
          "4b909e650ad341e79ac386a5caf9c8ff"
        ],
        "HasNestedGroups": false,
        "Left": 9003.3813174585612,
        "Top": 6199.2195839147953,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": 6315.2195839147953,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "2fa5af5ea12a4db8826fdceac21532a1",
        "Title": "Perfect Match Logic = 1",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e70cd237349f4629b0f55a31ccbe63fd",
          "e6b47acfa6d046a58f789a4a7be38c35",
          "31f31af949c9476aaea5ec500729e673",
          "fdd912a33db0462fb8384cad201163ca",
          "90fe975f1ad9466e81837d1b2181b159",
          "da8f77379727476ab886fb85a497eca0",
          "f4a7d74c47a549fe9ea80eb41fd02fe4",
          "386d749fe0d6444c8c6b8a04aa15b8aa"
        ],
        "HasNestedGroups": false,
        "Left": 7768.37484180395,
        "Top": -708.565972353435,
        "Width": 1128.0,
        "Height": 748.20973602740867,
        "FontSize": 36.0,
        "InitialTop": -635.565972353435,
        "InitialHeight": 688.20973602740867,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "43f1d553d57d4f6c84f2180a8ac337b3",
        "Title": "Partial Match Logic = 2",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "99ce714eaee242859195637b4a13b993",
          "aada2ea8fff844b09dccc55e258fee7d",
          "02eafdeacc7346708556ab1d772b6b42",
          "2decd021f7a54940bee78e90b51e94ba",
          "c7d3efc760a640ef83dd87691639c2cc",
          "835957089f54434381bc20f06c40efc4",
          "311652d098534f999335abdbfe13e1ad",
          "59c5eac59663415fbe292067f8e79f07",
          "42d63c7d751f44bf866c4131dd22c3cc"
        ],
        "HasNestedGroups": false,
        "Left": 7693.5120793767619,
        "Top": 111.49217289596277,
        "Width": 1235.0,
        "Height": 783.034621765953,
        "FontSize": 36.0,
        "InitialTop": 184.49217289596277,
        "InitialHeight": 723.034621765953,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "55c4814689e94f1684d0d240288ff675",
        "Title": "Debug Perfect Matches",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "641b321f6e084f3ba30bf13bb245cd26",
          "397d226995f2496a8f1e69af58203b4c",
          "2b5c5d3ff5424aa48d4efebf92ed2b5d",
          "47ccb92e1b36432d8b22346797e732ff"
        ],
        "HasNestedGroups": false,
        "Left": 9341.04425473143,
        "Top": -840.8697085002226,
        "Width": 488.0,
        "Height": 840.81136551106351,
        "FontSize": 36.0,
        "InitialTop": -767.8697085002226,
        "InitialHeight": 776.81136551106351,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "22d0a4c511994387b1e8be265d3b7bd6",
        "Title": "Debug Partial Matches",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f157937768724646a52b5ce731add756",
          "84ea68f1d07348ef9bf906f29268b76b",
          "8d8b3a4bd33b4ca5abd501e0151a0554",
          "8780bb8e3ad54890a8c2b675ede1b066"
        ],
        "HasNestedGroups": false,
        "Left": 9332.34860237236,
        "Top": 34.570689315580125,
        "Width": 490.31932533682084,
        "Height": 848.31215800490384,
        "FontSize": 36.0,
        "InitialTop": 107.57068931558013,
        "InitialHeight": 784.31215800490384,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "b7d16d45dc384742bfe9a455fd8fe2f7",
        "Title": "Cleanup",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "df48a14dd3954c2a8ced2ab502741acc",
          "9431d9bb52df4235af277d64d8ce489c",
          "3e082f1e14a148ba854acaa9de5181c4",
          "bd7f6a58631f4179b6d72e394c9a76aa"
        ],
        "HasNestedGroups": false,
        "Left": 9031.1902207804487,
        "Top": -652.92388778559121,
        "Width": 204.0,
        "Height": 664.31330348120127,
        "FontSize": 36.0,
        "InitialTop": -570.92388778559121,
        "InitialHeight": 595.31330348120127,
        "TextblockHeight": 72.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "381155eb31294552acdfcab59be176fa",
        "Title": "Cleanup",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ef0152edfda04202b9821860e4379e73",
          "fc6c784ea1694ca58fedaaa4a02805df",
          "e113f777892841ceaff65b8037f553b7",
          "b34862855b62460184530eb3b0dc90e0"
        ],
        "HasNestedGroups": false,
        "Left": 9029.4987688246383,
        "Top": 164.47191540491542,
        "Width": 204.0,
        "Height": 665.22609439679661,
        "FontSize": 36.0,
        "InitialTop": 246.47191540491542,
        "InitialHeight": 596.22609439679661,
        "TextblockHeight": 72.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "b69c5d1a948b48c8b53648587103a16a",
        "Title": "Debug Partial Matches",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "026ad7320bf642eb89d439e78380d95c",
          "a88f71a2d41f4d6b9bff94388d4c3cba",
          "d9ab1c2e64bc4394830c08276a0aa888",
          "6185fa53275e41d3add9a0fd281f10b6"
        ],
        "HasNestedGroups": false,
        "Left": 9340.3465661367736,
        "Top": 924.01596431668145,
        "Width": 481.0,
        "Height": 847.31979430823253,
        "FontSize": 36.0,
        "InitialTop": 997.01596431668145,
        "InitialHeight": 783.31979430823253,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "3db459caa6504df3ada260db5f612a9b",
        "Title": "Cleanup",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "df35d30aa1394161a1ef46c916196c1f",
          "7dcaffc4132744f4a62366582eb1a8be",
          "ca46cf8b972c4efaa6c47c47fb217b91",
          "a98293a8ce5046d88f797f93ab99b423"
        ],
        "HasNestedGroups": false,
        "Left": 9023.2579128344387,
        "Top": 1064.884224896977,
        "Width": 204.0,
        "Height": 672.61043288764085,
        "FontSize": 36.0,
        "InitialTop": 1146.884224896977,
        "InitialHeight": 603.61043288764085,
        "TextblockHeight": 72.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "b96893d1e6d84250a7bb4323e4aff4c7",
        "Title": "Partial Match Logic = 3",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1ca124736a8b4f59b91fbe30cb429d3e",
          "11803228efee4c6f88bc14b312523f20",
          "94ad8ddd02c548cd8a80afa1680efaf8",
          "5643440ab12c45fbac74996a08876328",
          "5a7e9f84e0fc4c2795a5687788ac3ea3",
          "004cd6a75089458fac129e50c5e8ca8c",
          "a0be9e037be046c7a27a86cd946b43e0",
          "b9e0aa34feb841f6b59c15318e2b2a7e",
          "843edc5a4b1e4744bc1e1d1cd76c18a3"
        ],
        "HasNestedGroups": false,
        "Left": 7688.957462366051,
        "Top": 995.71099158790116,
        "Width": 1235.0000000000009,
        "Height": 782.08432933195354,
        "FontSize": 36.0,
        "InitialTop": 1068.7109915879012,
        "InitialHeight": 722.08432933195354,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f5bf27db842945898e1142c433f561d8",
        "Title": "Debug Partial Matches",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "eeb32051f74e4cd5b6548c911fb9e0ef",
          "bfcc79cdf8b948dd80dd9dbaf5ef87e7",
          "9da3d4cb99c54b87b910e0952f29812a",
          "50b6c13dde984fefba1b7ee4d1aec3ce"
        ],
        "HasNestedGroups": false,
        "Left": 9336.0994892895451,
        "Top": 1822.3512740984681,
        "Width": 482.0,
        "Height": 839.33253939687324,
        "FontSize": 36.0,
        "InitialTop": 1895.3512740984681,
        "InitialHeight": 775.33253939687324,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "50982958047f48daa175ab513413f11a",
        "Title": "Cleanup",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7f06e0fece7b48c0899cb9a16272a171",
          "39db6ecba70a491289ee24a1ba954f89",
          "6b841d9e5e2949a28afb844ead11e74c",
          "25d2312cacee4019ab9465d0cd446334"
        ],
        "HasNestedGroups": false,
        "Left": 9013.9923826559716,
        "Top": 1960.9236804533598,
        "Width": 204.0,
        "Height": 668.89882059557067,
        "FontSize": 36.0,
        "InitialTop": 2042.9236804533598,
        "InitialHeight": 599.89882059557067,
        "TextblockHeight": 72.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "c5c94d73fc544b0dbfdf566a61cc3a86",
        "Title": "Partial Match Logic = 4",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "80ef572ffa434fbf915621e0ad84e163",
          "36f7bdad7f874bfe87f6cef3a4b04572",
          "94e662c0d05249508c43fcc0093712d5",
          "5ac33df8da4d41acb50e42f9993dd4fb",
          "fee1cea7ed044ce48ce76de2c31bf533",
          "a08102cad665456db01db88c5c9214f3",
          "bea85e63487745a1bd50fd527425344a",
          "8f0162fa3b6e4b7995d77748763247e1",
          "65553dadf51642eba8d17aeda7e4b272"
        ],
        "HasNestedGroups": false,
        "Left": 7699.1398206462109,
        "Top": 1856.8482900693868,
        "Width": 1235.0,
        "Height": 782.32742651492867,
        "FontSize": 36.0,
        "InitialTop": 1929.8482900693868,
        "InitialHeight": 722.32742651492867,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c87730a2524145db9aa147cb44a12577",
        "Title": "Debug Partial Matches",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2916e84fb1054f68a9a4346f8bdbf73a",
          "5a77ce8bfc9545f6be59aacdf67f2e9c",
          "967633855df2420ea99566735690790a",
          "709cb3a8490e4294a5aa98a7d1223d57"
        ],
        "HasNestedGroups": false,
        "Left": 9342.7931075969464,
        "Top": 2728.9837371508115,
        "Width": 482.0,
        "Height": 849.09047593563128,
        "FontSize": 36.0,
        "InitialTop": 2801.9837371508115,
        "InitialHeight": 785.09047593563128,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "fc81d25d771c4bc0bd98ddadbbb81810",
        "Title": "Cleanup",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cb8e98ddef8a44f09df0550ab8d7c263",
          "54a63bec891843888ba2e9666f64696c",
          "138ae0638c0742ae819a553290067a1d",
          "4692f08fe70d41ed821a4d21c638f42b"
        ],
        "HasNestedGroups": false,
        "Left": 9024.6102826592178,
        "Top": 2820.9869241464785,
        "Width": 216.5449551823167,
        "Height": 666.63407600150367,
        "FontSize": 36.0,
        "InitialTop": 2902.9869241464785,
        "InitialHeight": 597.63407600150367,
        "TextblockHeight": 72.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "d7963c891c074068b2e6488d99cf0aa0",
        "Title": "Partial Match Logic = 5",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "457517162dd84207ba73adcf12123a86",
          "579cab4efbd749e4a5782b62e826c58d",
          "0c2ef88202ef41199275343caf0ebed5",
          "4283b3a6f8cb4b20bd3c31a299a4a2af",
          "716a7dda4b2c487cab84eaf43836fb3d",
          "8fd9ae51812a42f3b28b6de5f345ec4c",
          "0026ce7121dc4d04a5326e976aed939a",
          "4ec3d72878a84b53bbfaca629eba33b4",
          "2bd6055a47334fa9b342528e2cf0a8a1"
        ],
        "HasNestedGroups": false,
        "Left": 7686.9472529121795,
        "Top": 2741.5960931154154,
        "Width": 1235.0,
        "Height": 781.61621101997753,
        "FontSize": 36.0,
        "InitialTop": 2814.5960931154154,
        "InitialHeight": 721.61621101997753,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "31b003c64c114f28a61216b2133ccc22",
        "Title": "Weighting Logic",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1c34d702615b4b8c955135cdc933f114",
          "27ee850eb2444c95968eb17458b07a9e",
          "91d98ecb544d4859ba5950074ae89c78",
          "b5f5230c6d654ec593a5ebcd672703e0",
          "4524c8dfe37a44dea5c4275ae5217c9e",
          "69f5b7a69e074a619c63124850e9866c",
          "f150802cb94a441e9b1fcbb69a0fe5c2",
          "f54fd8f5e4094164bc18f772dacb9f64",
          "9fdcd3a672e045e1a532a18243c68d05"
        ],
        "HasNestedGroups": false,
        "Left": 10602.185127838811,
        "Top": 1143.4808724420777,
        "Width": 793.0,
        "Height": 977.21032077465225,
        "FontSize": 36.0,
        "InitialTop": 1216.4808724420777,
        "InitialHeight": 917.21032077465225,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "798316752e434c30a1627764556da1c0",
        "Title": "Cleanup",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "808ac222d1d141429431d3d78a9b2503",
          "9ded816e3cb34bee8e78b33afd5e998b",
          "2dc6769495db408b8f3dc8b168004ec8",
          "0f03e9286a4644a8abc36f0d71b7d200"
        ],
        "HasNestedGroups": false,
        "Left": 11573.431234177018,
        "Top": 1273.1746668991655,
        "Width": 209.19584863957971,
        "Height": 666.39509961484237,
        "FontSize": 36.0,
        "InitialTop": 1355.1746668991655,
        "InitialHeight": 597.39509961484237,
        "TextblockHeight": 72.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "595857b5f64e481babc73cffc55320ba",
        "Title": "Extract \"[D] Strength\" Index from Takeoff to Write into Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84ea3f8ee75946f0a6560f3780e42e3f",
          "2c43e1005fa54937886f1784810b1e77",
          "abed8de685c74f26a64096c06f4e51bb",
          "c8ca98544cbd49efb899eefc34e85c3c",
          "5dda519562144df0bad876cbbf5a6290"
        ],
        "HasNestedGroups": false,
        "Left": 5270.0373368458486,
        "Top": 2423.0939617493277,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": 2539.0939617493277,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "56da267c96aa47e798847a4a2917161b",
        "Title": "Write Strength to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1cbf65d3ca1949d89230f34cc45fd97a"
        ],
        "HasNestedGroups": false,
        "Left": 16103.016813391732,
        "Top": 1460.6848001434855,
        "Width": 255.0,
        "Height": 506.0,
        "FontSize": 36.0,
        "InitialTop": 1629.6848001434855,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "f54dee44d42f441188f1e0ceda9bd641",
        "Title": "Write \"Is Match\" = \"Yes\" to Master Check",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cdf65203de384e298fe9bc0f8ee38433"
        ],
        "HasNestedGroups": false,
        "Left": 16116.205612716343,
        "Top": 2202.5373044038979,
        "Width": 255.0,
        "Height": 549.0,
        "FontSize": 36.0,
        "InitialTop": 2414.5373044038979,
        "InitialHeight": 145.0,
        "TextblockHeight": 202.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "ab628db39dba4221a0c81c79443bf9d0",
        "Title": "Extract \"[O] Supplier Index\" from Takeoff to Write into Master Check for Start Column",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "aa4bd44f9352474ebf5366a9a268fe7b",
          "7ecb2e5df844401aab7832ab9c3c4bb3",
          "68f1a47643c14bc38ef118432b845d31",
          "3a6fe612b1fd4f858e2815ace6ac4bb7",
          "15c557b9cc88460b9a1e9d291b75bc3a"
        ],
        "HasNestedGroups": false,
        "Left": 9034.2659229311048,
        "Top": -1789.2478099886575,
        "Width": 820.0,
        "Height": 483.0,
        "FontSize": 36.0,
        "InitialTop": -1673.2478099886575,
        "InitialHeight": 380.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "d050788b44f6489b9debba5356a91795",
        "Title": "Condition \"Is Match?\"",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "66f3e7cf00dd47d79185725786e11bf1",
          "85933ee157bd427ea32f190667c92d9b",
          "c2d6333ad7914ae393e4f3c62665f955"
        ],
        "HasNestedGroups": false,
        "Left": 15313.632330721082,
        "Top": 2645.514699562581,
        "Width": 448.0,
        "Height": 353.0,
        "FontSize": 36.0,
        "InitialTop": 2718.514699562581,
        "InitialHeight": 293.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "70d1971c31f446079bed71588e8f9cc3",
        "Title": "Debug Partial Matches",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "eebc6656f4eb4d878a1c413f9be86726",
          "ed24dbd49d9346a492732de34acbff68",
          "1b36cafffea143ecbb22caee5a60d67b",
          "a8af2c96a96c44358bef2f9957e60341"
        ],
        "HasNestedGroups": false,
        "Left": 12126.415691247259,
        "Top": 1061.461896802286,
        "Width": 482.97106389938745,
        "Height": 848.68997720407151,
        "FontSize": 36.0,
        "InitialTop": 1134.461896802286,
        "InitialHeight": 784.68997720407151,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "dfa92ea181294a819f7dc3a50518e2e8",
        "Title": "Search Below Row",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7eb90173e9e44887a60331f08850a424"
        ],
        "HasNestedGroups": false,
        "Left": 6291.8343786439345,
        "Top": 1793.6445689793807,
        "Width": 145.0,
        "Height": 315.00000000000023,
        "FontSize": 36.0,
        "InitialTop": 1976.6445689793807,
        "InitialHeight": 145.00000000000023,
        "TextblockHeight": 173.0,
        "Background": "#FF71C6A8"
      }
    ],
    "X": 381.99246709314582,
    "Y": 552.92682662624645,
    "Zoom": 0.11722756867697806
  }
}