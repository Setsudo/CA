# Import Revit API and necessary libraries
import clr
clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

# Get the current Revit document
doc = DocumentManager.Instance.CurrentDBDocument

# Check if input exists and unwrap if nested
if 'IN' not in globals() or not isinstance(IN, list) or len(IN) == 0:
    run_script = False  # Default to False if no valid input is provided
else:
    # Unwrap input if it's a nested list
    input_value = IN[0]
    if isinstance(input_value, list) and len(input_value) > 0:
        run_script = input_value[0]  # Extract the first element of the nested list
    else:
        run_script = input_value  # Use the direct value if not nested

# Check if the script should run
if not run_script:
    OUT = "Script did not run because the trigger input was set to False or not provided."
else:
    # Output lists
    viewport_ids = []
    viewport_names = []
    viewport_types = []
    view_ids = []

    # Filter to get all Viewports in the document
    collector = FilteredElementCollector(doc).OfClass(Viewport)

    for viewport in collector:
        # Get the name of the view associated with the viewport
        view_id = viewport.ViewId
        view = doc.GetElement(view_id)
        viewport_name = view.Name if view else "Unknown Name"

        # Get the type of the viewport by accessing the Element Type Name directly
        type_element = doc.GetElement(viewport.GetTypeId())
        viewport_type_name = type_element.get_Parameter(BuiltInParameter.SYMBOL_NAME_PARAM).AsString() if type_element else "Unknown Type"

        # Append to the output lists
        viewport_ids.append(viewport.Id.IntegerValue)
        viewport_names.append(viewport_name)
        viewport_types.append(viewport_type_name)
        view_ids.append(view_id.IntegerValue if view else "Unknown View ID")

    # Output results to Dynamo
    OUT = {
        "Viewport IDs": viewport_ids,
        "Viewport Names": viewport_names,
        "Viewport Types": viewport_types,
        "View IDs": view_ids
    }
